!function(C){var A={};function e(I){if(A[I])return A[I].exports;var g=A[I]={i:I,l:!1,exports:{}};return C[I].call(g.exports,g,g.exports,e),g.l=!0,g.exports}e.m=C,e.c=A,e.d=function(I,g,C){e.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:C})},e.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},e.t=function(g,I){if(1&I&&(g=e(g)),8&I)return g;if(4&I&&"object"==typeof g&&g&&g.__esModule)return g;var C=Object.create(null);if(e.r(C),Object.defineProperty(C,"default",{enumerable:!0,value:g}),2&I&&"string"!=typeof g)for(var A in g)e.d(C,A,function(I){return g[I]}.bind(null,A));return C},e.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return e.d(g,"a",g),g},e.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},e.p="",e(e.s=15)}([function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nvar Global = {\n    responsiveObj: null,\n    defaultDimension: null,\n    connectionEP: null\n};\n\nexports.Global = Global;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vc3JjL3V0aWwvZ2xvYmFsLmpzIl0sIm5hbWVzIjpbIkdsb2JhbCIsInJlc3BvbnNpdmVPYmoiLCJkZWZhdWx0RGltZW5zaW9uIiwiY29ubmVjdGlvbkVQIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUlBLFNBQVE7QUFDUkMsbUJBQWMsSUFETjtBQUVSQyxzQkFBaUIsSUFGVDtBQUdSQyxrQkFBYTtBQUhMLENBQVo7O1FBT0lILE0sR0FBQUEsTSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIEdsb2JhbD0ge1xyXG4gICAgcmVzcG9uc2l2ZU9iajpudWxsLFxyXG4gICAgZGVmYXVsdERpbWVuc2lvbjpudWxsLFxyXG4gICAgY29ubmVjdGlvbkVQOm51bGxcclxufVxyXG5cclxuZXhwb3J0e1xyXG4gICAgR2xvYmFsXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nvar ArraySchema = /** @class */ (function (_super) {\n    __extends(ArraySchema, _super);\n    function ArraySchema() {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var _this = _super.apply(this, items) || this;\n        Object.setPrototypeOf(_this, Object.create(ArraySchema.prototype));\n        Object.defineProperties(_this, {\n            $sorting: { value: undefined, enumerable: false, writable: true },\n            $changes: { value: undefined, enumerable: false, writable: true },\n            onAdd: { value: undefined, enumerable: false, writable: true },\n            onRemove: { value: undefined, enumerable: false, writable: true },\n            onChange: { value: undefined, enumerable: false, writable: true },\n            triggerAll: {\n                value: function () {\n                    if (!_this.onAdd) {\n                        return;\n                    }\n                    for (var i = 0; i < _this.length; i++) {\n                        _this.onAdd(_this[i], i);\n                    }\n                }\n            },\n            toJSON: {\n                value: function () {\n                    var arr = [];\n                    for (var i = 0; i < _this.length; i++) {\n                        var objAt = _this[i];\n                        arr.push((typeof (objAt.toJSON) === "function")\n                            ? objAt.toJSON()\n                            : objAt);\n                    }\n                    return arr;\n                }\n            },\n            clone: {\n                value: function (isDecoding) {\n                    var cloned;\n                    if (isDecoding) {\n                        cloned = ArraySchema.of.apply(ArraySchema, _this);\n                        cloned.onAdd = _this.onAdd;\n                        cloned.onRemove = _this.onRemove;\n                        cloned.onChange = _this.onChange;\n                    }\n                    else {\n                        cloned = new (ArraySchema.bind.apply(ArraySchema, __spreadArrays([void 0], _this.map(function (item) {\n                            if (typeof (item) === "object") {\n                                return item.clone();\n                            }\n                            else {\n                                return item;\n                            }\n                        }))))();\n                    }\n                    return cloned;\n                }\n            }\n        });\n        return _this;\n    }\n    Object.defineProperty(ArraySchema, Symbol.species, {\n        get: function () { return ArraySchema; },\n        enumerable: true,\n        configurable: true\n    });\n    ArraySchema.prototype.sort = function (compareFn) {\n        this.$sorting = true;\n        _super.prototype.sort.call(this, compareFn);\n        var changes = Array.from(this.$changes.changes);\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var key = changes_1[_i];\n            // track index change\n            var previousIndex = this.$changes.getIndex(this[key]);\n            if (previousIndex !== undefined) {\n                this.$changes.mapIndexChange(this[key], previousIndex);\n            }\n            this.$changes.mapIndex(this[key], key);\n        }\n        this.$sorting = false;\n        return this;\n    };\n    ArraySchema.prototype.filter = function (callbackfn, thisArg) {\n        var filtered = _super.prototype.filter.call(this, callbackfn);\n        // TODO: apply removed items on $changes\n        filtered.$changes = this.$changes;\n        return filtered;\n    };\n    ArraySchema.prototype.splice = function (start, deleteCount) {\n        var insert = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            insert[_i - 2] = arguments[_i];\n        }\n        var removedItems = Array.prototype.splice.apply(this, arguments);\n        var movedItems = Array.prototype.filter.call(this, function (item, idx) {\n            return idx >= start + deleteCount - 1;\n        });\n        removedItems.map(function (removedItem) {\n            var $changes = removedItem && removedItem.$changes;\n            // If the removed item is a schema we need to update it.\n            if ($changes) {\n                $changes.parent.deleteIndex(removedItem);\n                delete $changes.parent;\n            }\n        });\n        movedItems.forEach(function (movedItem) {\n            // If the moved item is a schema we need to update it.\n            var $changes = movedItem && movedItem.$changes;\n            if ($changes) {\n                // Update current index in parent, so subsequent changes in\n                // this item\'s properties are correctly reflected.\n                $changes.parentField--;\n            }\n        });\n        return removedItems;\n    };\n    return ArraySchema;\n}(Array));\nexports.ArraySchema = ArraySchema;\n//# sourceMappingURL=ArraySchema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar MapSchema = /** @class */ (function () {\n    function MapSchema(obj) {\n        var _this = this;\n        if (obj === void 0) { obj = {}; }\n        for (var key in obj) {\n            this[key] = obj[key];\n        }\n        Object.defineProperties(this, {\n            $changes: { value: undefined, enumerable: false, writable: true },\n            onAdd: { value: undefined, enumerable: false, writable: true },\n            onRemove: { value: undefined, enumerable: false, writable: true },\n            onChange: { value: undefined, enumerable: false, writable: true },\n            clone: {\n                value: function (isDecoding) {\n                    var cloned;\n                    if (isDecoding) {\n                        // client-side\n                        cloned = Object.assign(new MapSchema(), _this);\n                        cloned.onAdd = _this.onAdd;\n                        cloned.onRemove = _this.onRemove;\n                        cloned.onChange = _this.onChange;\n                    }\n                    else {\n                        // server-side\n                        var cloned_1 = new MapSchema();\n                        for (var key in _this) {\n                            if (typeof (_this[key]) === "object") {\n                                cloned_1[key] = _this[key].clone();\n                            }\n                            else {\n                                cloned_1[key] = _this[key];\n                            }\n                        }\n                    }\n                    return cloned;\n                }\n            },\n            triggerAll: {\n                value: function () {\n                    if (!_this.onAdd) {\n                        return;\n                    }\n                    for (var key in _this) {\n                        _this.onAdd(_this[key], key);\n                    }\n                }\n            },\n            toJSON: {\n                value: function () {\n                    var map = {};\n                    for (var key in _this) {\n                        map[key] = (typeof (_this[key].toJSON) === "function")\n                            ? _this[key].toJSON()\n                            : _this[key];\n                    }\n                    return map;\n                }\n            },\n            _indexes: { value: new Map(), enumerable: false, writable: true },\n            _updateIndexes: {\n                value: function (allKeys) {\n                    var index = 0;\n                    var indexes = new Map();\n                    for (var _i = 0, allKeys_1 = allKeys; _i < allKeys_1.length; _i++) {\n                        var key = allKeys_1[_i];\n                        indexes.set(key, index++);\n                    }\n                    _this._indexes = indexes;\n                }\n            },\n        });\n    }\n    return MapSchema;\n}());\nexports.MapSchema = MapSchema;\n//# sourceMappingURL=MapSchema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0Bjb2x5c2V1cy9zY2hlbWEvbGliL3R5cGVzL01hcFNjaGVtYS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixVQUFVO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNEQUFzRDtBQUM3RSxvQkFBb0Isc0RBQXNEO0FBQzFFLHVCQUF1QixzREFBc0Q7QUFDN0UsdUJBQXVCLHNEQUFzRDtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLHVCQUF1QixzREFBc0Q7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsdUJBQXVCO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTWFwU2NoZW1hID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1hcFNjaGVtYShvYmopIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKG9iaiA9PT0gdm9pZCAwKSB7IG9iaiA9IHt9OyB9XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgICAgICAgIHRoaXNba2V5XSA9IG9ialtrZXldO1xuICAgICAgICB9XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICAgICAgICAgICRjaGFuZ2VzOiB7IHZhbHVlOiB1bmRlZmluZWQsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICAgICAgb25BZGQ6IHsgdmFsdWU6IHVuZGVmaW5lZCwgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlIH0sXG4gICAgICAgICAgICBvblJlbW92ZTogeyB2YWx1ZTogdW5kZWZpbmVkLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUgfSxcbiAgICAgICAgICAgIG9uQ2hhbmdlOiB7IHZhbHVlOiB1bmRlZmluZWQsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICAgICAgY2xvbmU6IHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gKGlzRGVjb2RpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNsb25lZDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzRGVjb2RpbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNsaWVudC1zaWRlXG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9uZWQgPSBPYmplY3QuYXNzaWduKG5ldyBNYXBTY2hlbWEoKSwgX3RoaXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xvbmVkLm9uQWRkID0gX3RoaXMub25BZGQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9uZWQub25SZW1vdmUgPSBfdGhpcy5vblJlbW92ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsb25lZC5vbkNoYW5nZSA9IF90aGlzLm9uQ2hhbmdlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2VydmVyLXNpZGVcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjbG9uZWRfMSA9IG5ldyBNYXBTY2hlbWEoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBfdGhpcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgKF90aGlzW2tleV0pID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb25lZF8xW2tleV0gPSBfdGhpc1trZXldLmNsb25lKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9uZWRfMVtrZXldID0gX3RoaXNba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNsb25lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdHJpZ2dlckFsbDoge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghX3RoaXMub25BZGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gX3RoaXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLm9uQWRkKF90aGlzW2tleV0sIGtleSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdG9KU09OOiB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1hcCA9IHt9O1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gX3RoaXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcFtrZXldID0gKHR5cGVvZiAoX3RoaXNba2V5XS50b0pTT04pID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfdGhpc1trZXldLnRvSlNPTigpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdGhpc1trZXldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBtYXA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF9pbmRleGVzOiB7IHZhbHVlOiBuZXcgTWFwKCksIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSB9LFxuICAgICAgICAgICAgX3VwZGF0ZUluZGV4ZXM6IHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24gKGFsbEtleXMpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4ZXMgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwgYWxsS2V5c18xID0gYWxsS2V5czsgX2kgPCBhbGxLZXlzXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIga2V5ID0gYWxsS2V5c18xW19pXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ZXMuc2V0KGtleSwgaW5kZXgrKyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuX2luZGV4ZXMgPSBpbmRleGVzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gTWFwU2NoZW1hO1xufSgpKTtcbmV4cG9ydHMuTWFwU2NoZW1hID0gTWFwU2NoZW1hO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWFwU2NoZW1hLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, "__esModule", { value: true });\nvar spec_1 = __webpack_require__(12);\nvar encode = __webpack_require__(44);\nvar decode = __webpack_require__(45);\nvar ArraySchema_1 = __webpack_require__(1);\nvar MapSchema_1 = __webpack_require__(2);\nvar ChangeTree_1 = __webpack_require__(13);\nvar EventEmitter_1 = __webpack_require__(46);\nvar EncodeSchemaError = /** @class */ (function (_super) {\n    __extends(EncodeSchemaError, _super);\n    function EncodeSchemaError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EncodeSchemaError;\n}(Error));\nfunction assertType(value, type, klass, field) {\n    var typeofTarget;\n    var allowNull = false;\n    switch (type) {\n        case "number":\n        case "int8":\n        case "uint8":\n        case "int16":\n        case "uint16":\n        case "int32":\n        case "uint32":\n        case "int64":\n        case "uint64":\n        case "float32":\n        case "float64":\n            typeofTarget = "number";\n            if (isNaN(value)) {\n                console.log("trying to encode \\"NaN\\" in " + klass.constructor.name + "#" + field);\n            }\n            break;\n        case "string":\n            typeofTarget = "string";\n            allowNull = true;\n            break;\n        case "boolean":\n            // boolean is always encoded as true/false based on truthiness\n            return;\n    }\n    if (typeof (value) !== typeofTarget && (!allowNull || (allowNull && value !== null))) {\n        var foundValue = "\'" + JSON.stringify(value) + "\'" + (value && value.constructor && " (" + value.constructor.name + ")");\n        throw new EncodeSchemaError("a \'" + typeofTarget + "\' was expected, but " + foundValue + " was provided in " + klass.constructor.name + "#" + field);\n    }\n}\nfunction assertInstanceType(value, type, klass, field) {\n    if (!(value instanceof type)) {\n        throw new EncodeSchemaError("a \'" + type.name + "\' was expected, but \'" + value.constructor.name + "\' was provided in " + klass.constructor.name + "#" + field);\n    }\n}\nfunction encodePrimitiveType(type, bytes, value, klass, field) {\n    assertType(value, type, klass, field);\n    var encodeFunc = encode[type];\n    if (encodeFunc) {\n        encodeFunc(bytes, value);\n    }\n    else {\n        throw new EncodeSchemaError("a \'" + type + "\' was expected, but " + value + " was provided in " + klass.constructor.name + "#" + field);\n    }\n}\nfunction decodePrimitiveType(type, bytes, it) {\n    return decode[type](bytes, it);\n}\n/**\n * Schema encoder / decoder\n */\nvar Schema = /** @class */ (function () {\n    // allow inherited classes to have a constructor\n    function Schema() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // fix enumerability of fields for end-user\n        Object.defineProperties(this, {\n            $changes: {\n                value: new ChangeTree_1.ChangeTree(this._indexes),\n                enumerable: false,\n                writable: true\n            },\n            $listeners: {\n                value: {},\n                enumerable: false,\n                writable: true\n            },\n        });\n        var descriptors = this._descriptors;\n        if (descriptors) {\n            Object.defineProperties(this, descriptors);\n        }\n    }\n    Schema.onError = function (e) {\n        console.error(e);\n    };\n    Object.defineProperty(Schema.prototype, "_schema", {\n        get: function () { return this.constructor._schema; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Schema.prototype, "_descriptors", {\n        get: function () { return this.constructor._descriptors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Schema.prototype, "_indexes", {\n        get: function () { return this.constructor._indexes; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Schema.prototype, "_fieldsByIndex", {\n        get: function () { return this.constructor._fieldsByIndex; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Schema.prototype, "_filters", {\n        get: function () { return this.constructor._filters; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Schema.prototype, "_deprecated", {\n        get: function () { return this.constructor._deprecated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Schema.prototype, "$changed", {\n        get: function () { return this.$changes.changed; },\n        enumerable: true,\n        configurable: true\n    });\n    Schema.prototype.listen = function (attr, callback) {\n        if (!this.$listeners[attr]) {\n            this.$listeners[attr] = new EventEmitter_1.EventEmitter();\n        }\n        this.$listeners[attr].register(callback);\n    };\n    Schema.prototype.decode = function (bytes, it) {\n        if (it === void 0) { it = { offset: 0 }; }\n        var changes = [];\n        var schema = this._schema;\n        var fieldsByIndex = this._fieldsByIndex;\n        var totalBytes = bytes.length;\n        // skip TYPE_ID of existing instances\n        if (bytes[it.offset] === spec_1.TYPE_ID) {\n            it.offset += 2;\n        }\n        var _loop_1 = function () {\n            var isNil = decode.nilCheck(bytes, it) && ++it.offset;\n            var index = bytes[it.offset++];\n            if (index === spec_1.END_OF_STRUCTURE) {\n                return "break";\n            }\n            var field = fieldsByIndex[index];\n            var _field = "_" + field;\n            var type = schema[field];\n            var value = void 0;\n            var change = void 0; // for triggering onChange\n            var hasChange = false;\n            if (!field) {\n                return "continue";\n            }\n            else if (isNil) {\n                value = null;\n                hasChange = true;\n            }\n            else if (type._schema) {\n                value = this_1[_field] || this_1.createTypeInstance(bytes, it, type);\n                value.decode(bytes, it);\n                hasChange = true;\n            }\n            else if (Array.isArray(type)) {\n                type = type[0];\n                change = [];\n                var valueRef_1 = this_1[_field] || new ArraySchema_1.ArraySchema();\n                value = valueRef_1.clone(true);\n                var newLength_1 = decode.number(bytes, it);\n                var numChanges = Math.min(decode.number(bytes, it), newLength_1);\n                hasChange = (numChanges > 0);\n                // FIXME: this may not be reliable. possibly need to encode this variable during serialization\n                var hasIndexChange = false;\n                // ensure current array has the same length as encoded one\n                if (value.length > newLength_1) {\n                    // decrease removed items from number of changes.\n                    // no need to iterate through them, as they\'re going to be removed.\n                    Array.prototype.splice.call(value, newLength_1).forEach(function (itemRemoved, i) {\n                        if (itemRemoved && itemRemoved.onRemove) {\n                            try {\n                                itemRemoved.onRemove();\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                        if (valueRef_1.onRemove) {\n                            try {\n                                valueRef_1.onRemove(itemRemoved, newLength_1 + i);\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                    });\n                }\n                for (var i = 0; i < numChanges; i++) {\n                    var newIndex = decode.number(bytes, it);\n                    var indexChangedFrom = void 0; // index change check\n                    if (decode.indexChangeCheck(bytes, it)) {\n                        decode.uint8(bytes, it);\n                        indexChangedFrom = decode.number(bytes, it);\n                        hasIndexChange = true;\n                    }\n                    var isNew = (!hasIndexChange && value[newIndex] === undefined) || (hasIndexChange && indexChangedFrom === undefined);\n                    if (type.prototype instanceof Schema) {\n                        var item = void 0;\n                        if (isNew) {\n                            item = this_1.createTypeInstance(bytes, it, type);\n                        }\n                        else if (indexChangedFrom !== undefined) {\n                            item = valueRef_1[indexChangedFrom];\n                        }\n                        else {\n                            item = valueRef_1[newIndex];\n                        }\n                        if (!item) {\n                            item = this_1.createTypeInstance(bytes, it, type);\n                            isNew = true;\n                        }\n                        item.decode(bytes, it);\n                        value[newIndex] = item;\n                    }\n                    else {\n                        value[newIndex] = decodePrimitiveType(type, bytes, it);\n                    }\n                    if (isNew) {\n                        if (valueRef_1.onAdd) {\n                            try {\n                                valueRef_1.onAdd(value[newIndex], newIndex);\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                    }\n                    else if (valueRef_1.onChange) {\n                        try {\n                            valueRef_1.onChange(value[newIndex], newIndex);\n                        }\n                        catch (e) {\n                            Schema.onError(e);\n                        }\n                    }\n                    change.push(value[newIndex]);\n                }\n            }\n            else if (type.map) {\n                type = type.map;\n                var valueRef = this_1[_field] || new MapSchema_1.MapSchema();\n                value = valueRef.clone(true);\n                var length = decode.number(bytes, it);\n                hasChange = (length > 0);\n                // FIXME: this may not be reliable. possibly need to encode this variable during\n                // serializagion\n                var hasIndexChange = false;\n                var previousKeys = Object.keys(valueRef);\n                for (var i = 0; i < length; i++) {\n                    // `encodeAll` may indicate a higher number of indexes it actually encodes\n                    // TODO: do not encode a higher number than actual encoded entries\n                    if (bytes[it.offset] === undefined ||\n                        bytes[it.offset] === spec_1.END_OF_STRUCTURE) {\n                        break;\n                    }\n                    var isNilItem = decode.nilCheck(bytes, it) && ++it.offset;\n                    // index change check\n                    var previousKey = void 0;\n                    if (decode.indexChangeCheck(bytes, it)) {\n                        decode.uint8(bytes, it);\n                        previousKey = previousKeys[decode.number(bytes, it)];\n                        hasIndexChange = true;\n                    }\n                    var hasMapIndex = decode.numberCheck(bytes, it);\n                    var isSchemaType = typeof (type) !== "string";\n                    var newKey = (hasMapIndex)\n                        ? previousKeys[decode.number(bytes, it)]\n                        : decode.string(bytes, it);\n                    var item = void 0;\n                    var isNew = (!hasIndexChange && valueRef[newKey] === undefined) || (hasIndexChange && previousKey === undefined && hasMapIndex);\n                    if (isNew && isSchemaType) {\n                        item = this_1.createTypeInstance(bytes, it, type);\n                    }\n                    else if (previousKey !== undefined) {\n                        item = valueRef[previousKey];\n                    }\n                    else {\n                        item = valueRef[newKey];\n                    }\n                    if (isNilItem) {\n                        if (item && item.onRemove) {\n                            try {\n                                item.onRemove();\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                        if (valueRef.onRemove) {\n                            try {\n                                valueRef.onRemove(item, newKey);\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                        delete value[newKey];\n                        continue;\n                    }\n                    else if (!isSchemaType) {\n                        value[newKey] = decodePrimitiveType(type, bytes, it);\n                    }\n                    else {\n                        item.decode(bytes, it);\n                        value[newKey] = item;\n                    }\n                    if (isNew) {\n                        if (valueRef.onAdd) {\n                            try {\n                                valueRef.onAdd(value[newKey], newKey);\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                    }\n                    else if (valueRef.onChange) {\n                        try {\n                            valueRef.onChange(value[newKey], newKey);\n                        }\n                        catch (e) {\n                            Schema.onError(e);\n                        }\n                    }\n                }\n            }\n            else {\n                value = decodePrimitiveType(type, bytes, it);\n                // FIXME: should not even have encoded if value haven\'t changed in the first place!\n                // check FilterTest.ts: "should not trigger `onChange` if field haven\'t changed"\n                hasChange = (value !== this_1[_field]);\n            }\n            if (hasChange && (this_1.onChange || this_1.$listeners[field])) {\n                changes.push({\n                    field: field,\n                    value: change || value,\n                    previousValue: this_1[_field]\n                });\n            }\n            this_1[_field] = value;\n        };\n        var this_1 = this;\n        while (it.offset < totalBytes) {\n            var state_1 = _loop_1();\n            if (state_1 === "break")\n                break;\n        }\n        this._triggerChanges(changes);\n        return this;\n    };\n    Schema.prototype.encode = function (root, encodeAll, client, bytes) {\n        var _this = this;\n        if (root === void 0) { root = this; }\n        if (encodeAll === void 0) { encodeAll = false; }\n        if (bytes === void 0) { bytes = []; }\n        // skip if nothing has changed\n        if (!this.$changes.changed && !encodeAll) {\n            this._encodeEndOfStructure(this, root, bytes);\n            return bytes;\n        }\n        var schema = this._schema;\n        var indexes = this._indexes;\n        var fieldsByIndex = this._fieldsByIndex;\n        var filters = this._filters;\n        var changes = Array.from((encodeAll) //  || client\n            ? this.$changes.allChanges\n            : this.$changes.changes).sort();\n        var _loop_2 = function (i, l) {\n            var field = fieldsByIndex[changes[i]] || changes[i];\n            var _field = "_" + field;\n            var type = schema[field];\n            var filter = (filters && filters[field]);\n            // const value = (filter && this.$allChanges[field]) || changes[field];\n            var value = this_2[_field];\n            var fieldIndex = indexes[field];\n            if (value === undefined) {\n                encode.uint8(bytes, spec_1.NIL);\n                encode.number(bytes, fieldIndex);\n            }\n            else if (type._schema) {\n                if (client && filter) {\n                    // skip if not allowed by custom filter\n                    if (!filter.call(this_2, client, value, root)) {\n                        return "continue";\n                    }\n                }\n                if (!value) {\n                    // value has been removed\n                    encode.uint8(bytes, spec_1.NIL);\n                    encode.number(bytes, fieldIndex);\n                }\n                else {\n                    // encode child object\n                    encode.number(bytes, fieldIndex);\n                    assertInstanceType(value, type, this_2, field);\n                    this_2.tryEncodeTypeId(bytes, type, value.constructor);\n                    value.encode(root, encodeAll, client, bytes);\n                }\n            }\n            else if (Array.isArray(type)) {\n                var $changes = value.$changes;\n                if (client && filter) {\n                    // skip if not allowed by custom filter\n                    if (!filter.call(this_2, client, value, root)) {\n                        return "continue";\n                    }\n                }\n                encode.number(bytes, fieldIndex);\n                // total number of items in the array\n                encode.number(bytes, value.length);\n                var arrayChanges = Array.from((encodeAll) //  || client\n                    ? $changes.allChanges\n                    : $changes.changes)\n                    .filter(function (index) { return _this[_field][index] !== undefined; })\n                    .sort(function (a, b) { return a - b; });\n                // ensure number of changes doesn\'t exceed array length\n                var numChanges = arrayChanges.length;\n                // number of changed items\n                encode.number(bytes, numChanges);\n                var isChildSchema = typeof (type[0]) !== "string";\n                // assert ArraySchema was provided\n                assertInstanceType(this_2[_field], ArraySchema_1.ArraySchema, this_2, field);\n                // encode Array of type\n                for (var j = 0; j < numChanges; j++) {\n                    var index = arrayChanges[j];\n                    var item = this_2[_field][index];\n                    /**\n                     * TODO: filter array by items instead of the whole object\n                     */\n                    // if (client && filter) {\n                    //     // skip if not allowed by custom filter\n                    //     if (!filter.call(this, client, item, root)) {\n                    //         continue;\n                    //     }\n                    // }\n                    if (isChildSchema) { // is array of Schema\n                        encode.number(bytes, index);\n                        if (!encodeAll) {\n                            var indexChange = $changes.getIndexChange(item);\n                            if (indexChange !== undefined) {\n                                encode.uint8(bytes, spec_1.INDEX_CHANGE);\n                                encode.number(bytes, indexChange);\n                            }\n                        }\n                        assertInstanceType(item, type[0], this_2, field);\n                        this_2.tryEncodeTypeId(bytes, type[0], item.constructor);\n                        item.encode(root, encodeAll, client, bytes);\n                    }\n                    else if (item !== undefined) { // is array of primitives\n                        encode.number(bytes, index);\n                        encodePrimitiveType(type[0], bytes, item, this_2, field);\n                    }\n                }\n                if (!encodeAll && !client) {\n                    $changes.discard();\n                }\n            }\n            else if (type.map) {\n                var $changes = value.$changes;\n                if (client && filter) {\n                    // skip if not allowed by custom filter\n                    if (!filter.call(this_2, client, value, root)) {\n                        return "continue";\n                    }\n                }\n                // encode Map of type\n                encode.number(bytes, fieldIndex);\n                // TODO: during `encodeAll`, removed entries are not going to be encoded\n                var keys = Array.from((encodeAll) //  || client\n                    ? $changes.allChanges\n                    : $changes.changes);\n                encode.number(bytes, keys.length);\n                // const previousKeys = Object.keys(this[_field]); // this is costly!\n                var previousKeys = Array.from($changes.allChanges);\n                var isChildSchema = typeof (type.map) !== "string";\n                var numChanges = keys.length;\n                // assert MapSchema was provided\n                assertInstanceType(this_2[_field], MapSchema_1.MapSchema, this_2, field);\n                for (var i_1 = 0; i_1 < numChanges; i_1++) {\n                    var key = keys[i_1];\n                    var item = this_2[_field][key];\n                    var mapItemIndex = undefined;\n                    /**\n                     * TODO: filter map by items instead of the whole object\n                     */\n                    // if (client && filter) {\n                    //     // skip if not allowed by custom filter\n                    //     if (!filter.call(this, client, item, root)) {\n                    //         continue;\n                    //     }\n                    // }\n                    if (encodeAll) {\n                        if (item === undefined) {\n                            // previously deleted items are skipped during `encodeAll`\n                            continue;\n                        }\n                    }\n                    else {\n                        // encode index change\n                        var indexChange = $changes.getIndexChange(item);\n                        if (item && indexChange !== undefined) {\n                            encode.uint8(bytes, spec_1.INDEX_CHANGE);\n                            encode.number(bytes, this_2[_field]._indexes.get(indexChange));\n                        }\n                        /**\n                         * - Allow item replacement\n                         * - Allow to use the index of a deleted item to encode as NIL\n                         */\n                        mapItemIndex = (!$changes.isDeleted(key) || !item)\n                            ? this_2[_field]._indexes.get(key)\n                            : undefined;\n                    }\n                    var isNil = (item === undefined);\n                    /**\n                     * Invert NIL to prevent collision with data starting with NIL byte\n                     */\n                    if (isNil) {\n                        // TODO: remove item\n                        // console.log("REMOVE KEY INDEX", { key });\n                        // this[_field]._indexes.delete(key);\n                        encode.uint8(bytes, spec_1.NIL);\n                    }\n                    if (mapItemIndex !== undefined) {\n                        encode.number(bytes, mapItemIndex);\n                    }\n                    else {\n                        encode.string(bytes, key);\n                    }\n                    if (item && isChildSchema) {\n                        assertInstanceType(item, type.map, this_2, field);\n                        this_2.tryEncodeTypeId(bytes, type.map, item.constructor);\n                        item.encode(root, encodeAll, client, bytes);\n                    }\n                    else if (!isNil) {\n                        encodePrimitiveType(type.map, bytes, item, this_2, field);\n                    }\n                }\n                if (!encodeAll && !client) {\n                    $changes.discard();\n                    // TODO: track array/map indexes per client (for filtering)?\n                    // TODO: do not iterate though all MapSchema indexes here.\n                    this_2[_field]._updateIndexes(previousKeys);\n                }\n            }\n            else {\n                if (client && filter) {\n                    // skip if not allowed by custom filter\n                    if (!filter.call(this_2, client, value, root)) {\n                        return "continue";\n                    }\n                }\n                encode.number(bytes, fieldIndex);\n                encodePrimitiveType(type, bytes, value, this_2, field);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0, l = changes.length; i < l; i++) {\n            _loop_2(i, l);\n        }\n        // flag end of Schema object structure\n        this._encodeEndOfStructure(this, root, bytes);\n        if (!encodeAll && !client) {\n            this.$changes.discard();\n        }\n        return bytes;\n    };\n    Schema.prototype.encodeFiltered = function (client, bytes) {\n        return this.encode(this, false, client, bytes);\n    };\n    Schema.prototype.encodeAll = function (bytes) {\n        return this.encode(this, true, undefined, bytes);\n    };\n    Schema.prototype.encodeAllFiltered = function (client, bytes) {\n        return this.encode(this, true, client, bytes);\n    };\n    Schema.prototype.clone = function () {\n        var cloned = new (this.constructor);\n        var schema = this._schema;\n        for (var field in schema) {\n            if (typeof (this[field]) === "object" &&\n                typeof (this[field].clone) === "function") {\n                // deep clone\n                cloned[field] = this[field].clone();\n            }\n            else {\n                // primitive values\n                cloned[field] = this[field];\n            }\n        }\n        return cloned;\n    };\n    Schema.prototype.triggerAll = function () {\n        if (!this.onChange) {\n            return;\n        }\n        var changes = [];\n        var schema = this._schema;\n        for (var field in schema) {\n            if (this[field] !== undefined) {\n                changes.push({\n                    field: field,\n                    value: this[field],\n                    previousValue: undefined\n                });\n            }\n        }\n        try {\n            this.onChange(changes);\n        }\n        catch (e) {\n            Schema.onError(e);\n        }\n    };\n    Schema.prototype.toJSON = function () {\n        var schema = this._schema;\n        var deprecated = this._deprecated;\n        var obj = {};\n        for (var field in schema) {\n            if (!deprecated[field] && this[field] !== null && typeof (this[field]) !== "undefined") {\n                obj[field] = (typeof (this[field].toJSON) === "function")\n                    ? this[field].toJSON()\n                    : this["_" + field];\n            }\n        }\n        return obj;\n    };\n    Schema.prototype.discardAllChanges = function () {\n        var schema = this._schema;\n        var changes = Array.from(this.$changes.changes);\n        var fieldsByIndex = this._fieldsByIndex;\n        for (var index in changes) {\n            var field = fieldsByIndex[index];\n            var type = schema[field];\n            var value = this[field];\n            // skip unchagned fields\n            if (value === undefined) {\n                continue;\n            }\n            if (type._schema) {\n                value.discardAllChanges();\n            }\n            else if (Array.isArray(type)) {\n                for (var i = 0, l = value.length; i < l; i++) {\n                    var index_1 = value[i];\n                    var item = this["_" + field][index_1];\n                    if (typeof (type[0]) !== "string" && item) { // is array of Schema\n                        item.discardAllChanges();\n                    }\n                }\n                value.$changes.discard();\n            }\n            else if (type.map) {\n                var keys = value;\n                var mapKeys = Object.keys(this["_" + field]);\n                for (var i = 0; i < keys.length; i++) {\n                    var key = mapKeys[keys[i]] || keys[i];\n                    var item = this["_" + field][key];\n                    if (item instanceof Schema && item) {\n                        item.discardAllChanges();\n                    }\n                }\n                value.$changes.discard();\n            }\n        }\n        this.$changes.discard();\n    };\n    Schema.prototype._encodeEndOfStructure = function (instance, root, bytes) {\n        if (instance !== root) {\n            bytes.push(spec_1.END_OF_STRUCTURE);\n        }\n    };\n    Schema.prototype.tryEncodeTypeId = function (bytes, type, targetType) {\n        if (type._typeid !== targetType._typeid) {\n            encode.uint8(bytes, spec_1.TYPE_ID);\n            encode.uint8(bytes, targetType._typeid);\n        }\n    };\n    Schema.prototype.createTypeInstance = function (bytes, it, type) {\n        if (bytes[it.offset] === spec_1.TYPE_ID) {\n            it.offset++;\n            var anotherType = this.constructor._context.get(decode.uint8(bytes, it));\n            return new anotherType();\n        }\n        else {\n            return new type();\n        }\n    };\n    Schema.prototype._triggerChanges = function (changes) {\n        if (changes.length > 0) {\n            for (var i = 0; i < changes.length; i++) {\n                var change = changes[i];\n                var listener = this.$listeners[change.field];\n                if (listener) {\n                    try {\n                        listener.invoke(change.value, change.previousValue);\n                    }\n                    catch (e) {\n                        Schema.onError(e);\n                    }\n                }\n            }\n            if (this.onChange) {\n                try {\n                    this.onChange(changes);\n                }\n                catch (e) {\n                    Schema.onError(e);\n                }\n            }\n        }\n    };\n    return Schema;\n}());\nexports.Schema = Schema;\n//# sourceMappingURL=Schema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0Bjb2x5c2V1cy9zY2hlbWEvbGliL1NjaGVtYS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0JBQWdCLHNDQUFzQyxpQkFBaUIsRUFBRTtBQUN2Riw2QkFBNkIsdURBQXVEO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNCQUFzQjtBQUM3QztBQUNBO0FBQ0EsQ0FBQztBQUNELDhDQUE4QyxjQUFjO0FBQzVELGFBQWEsbUJBQU8sQ0FBQyxFQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyxFQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMsRUFBbUI7QUFDeEMsb0JBQW9CLG1CQUFPLENBQUMsQ0FBcUI7QUFDakQsa0JBQWtCLG1CQUFPLENBQUMsQ0FBbUI7QUFDN0MsbUJBQW1CLG1CQUFPLENBQUMsRUFBYztBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyxFQUF1QjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGlDQUFpQyxFQUFFO0FBQzdEO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIsc0NBQXNDLEVBQUU7QUFDbEU7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDBCQUEwQixrQ0FBa0MsRUFBRTtBQUM5RDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMEJBQTBCLHdDQUF3QyxFQUFFO0FBQ3BFO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIsa0NBQWtDLEVBQUU7QUFDOUQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDBCQUEwQixxQ0FBcUMsRUFBRTtBQUNqRTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMEJBQTBCLDhCQUE4QixFQUFFO0FBQzFEO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsT0FBTyxhQUFhO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsK0JBQStCLGdCQUFnQjtBQUMvQztBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixZQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsYUFBYTtBQUMzQyxtQ0FBbUMsbUJBQW1CO0FBQ3RELCtCQUErQixZQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDJDQUEyQyxFQUFFO0FBQzNGLDJDQUEyQyxjQUFjLEVBQUU7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixnQkFBZ0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGtCQUFrQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsTUFBTTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxPQUFPO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0EsZ0VBQWdFO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsaUJBQWlCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLG9CQUFvQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHNwZWNfMSA9IHJlcXVpcmUoXCIuL3NwZWNcIik7XG52YXIgZW5jb2RlID0gcmVxdWlyZShcIi4vZW5jb2RpbmcvZW5jb2RlXCIpO1xudmFyIGRlY29kZSA9IHJlcXVpcmUoXCIuL2VuY29kaW5nL2RlY29kZVwiKTtcbnZhciBBcnJheVNjaGVtYV8xID0gcmVxdWlyZShcIi4vdHlwZXMvQXJyYXlTY2hlbWFcIik7XG52YXIgTWFwU2NoZW1hXzEgPSByZXF1aXJlKFwiLi90eXBlcy9NYXBTY2hlbWFcIik7XG52YXIgQ2hhbmdlVHJlZV8xID0gcmVxdWlyZShcIi4vQ2hhbmdlVHJlZVwiKTtcbnZhciBFdmVudEVtaXR0ZXJfMSA9IHJlcXVpcmUoXCIuL2V2ZW50cy9FdmVudEVtaXR0ZXJcIik7XG52YXIgRW5jb2RlU2NoZW1hRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEVuY29kZVNjaGVtYUVycm9yLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEVuY29kZVNjaGVtYUVycm9yKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBFbmNvZGVTY2hlbWFFcnJvcjtcbn0oRXJyb3IpKTtcbmZ1bmN0aW9uIGFzc2VydFR5cGUodmFsdWUsIHR5cGUsIGtsYXNzLCBmaWVsZCkge1xuICAgIHZhciB0eXBlb2ZUYXJnZXQ7XG4gICAgdmFyIGFsbG93TnVsbCA9IGZhbHNlO1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIFwibnVtYmVyXCI6XG4gICAgICAgIGNhc2UgXCJpbnQ4XCI6XG4gICAgICAgIGNhc2UgXCJ1aW50OFwiOlxuICAgICAgICBjYXNlIFwiaW50MTZcIjpcbiAgICAgICAgY2FzZSBcInVpbnQxNlwiOlxuICAgICAgICBjYXNlIFwiaW50MzJcIjpcbiAgICAgICAgY2FzZSBcInVpbnQzMlwiOlxuICAgICAgICBjYXNlIFwiaW50NjRcIjpcbiAgICAgICAgY2FzZSBcInVpbnQ2NFwiOlxuICAgICAgICBjYXNlIFwiZmxvYXQzMlwiOlxuICAgICAgICBjYXNlIFwiZmxvYXQ2NFwiOlxuICAgICAgICAgICAgdHlwZW9mVGFyZ2V0ID0gXCJudW1iZXJcIjtcbiAgICAgICAgICAgIGlmIChpc05hTih2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInRyeWluZyB0byBlbmNvZGUgXFxcIk5hTlxcXCIgaW4gXCIgKyBrbGFzcy5jb25zdHJ1Y3Rvci5uYW1lICsgXCIjXCIgKyBmaWVsZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcInN0cmluZ1wiOlxuICAgICAgICAgICAgdHlwZW9mVGFyZ2V0ID0gXCJzdHJpbmdcIjtcbiAgICAgICAgICAgIGFsbG93TnVsbCA9IHRydWU7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImJvb2xlYW5cIjpcbiAgICAgICAgICAgIC8vIGJvb2xlYW4gaXMgYWx3YXlzIGVuY29kZWQgYXMgdHJ1ZS9mYWxzZSBiYXNlZCBvbiB0cnV0aGluZXNzXG4gICAgICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0eXBlb2YgKHZhbHVlKSAhPT0gdHlwZW9mVGFyZ2V0ICYmICghYWxsb3dOdWxsIHx8IChhbGxvd051bGwgJiYgdmFsdWUgIT09IG51bGwpKSkge1xuICAgICAgICB2YXIgZm91bmRWYWx1ZSA9IFwiJ1wiICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpICsgXCInXCIgKyAodmFsdWUgJiYgdmFsdWUuY29uc3RydWN0b3IgJiYgXCIgKFwiICsgdmFsdWUuY29uc3RydWN0b3IubmFtZSArIFwiKVwiKTtcbiAgICAgICAgdGhyb3cgbmV3IEVuY29kZVNjaGVtYUVycm9yKFwiYSAnXCIgKyB0eXBlb2ZUYXJnZXQgKyBcIicgd2FzIGV4cGVjdGVkLCBidXQgXCIgKyBmb3VuZFZhbHVlICsgXCIgd2FzIHByb3ZpZGVkIGluIFwiICsga2xhc3MuY29uc3RydWN0b3IubmFtZSArIFwiI1wiICsgZmllbGQpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGFzc2VydEluc3RhbmNlVHlwZSh2YWx1ZSwgdHlwZSwga2xhc3MsIGZpZWxkKSB7XG4gICAgaWYgKCEodmFsdWUgaW5zdGFuY2VvZiB0eXBlKSkge1xuICAgICAgICB0aHJvdyBuZXcgRW5jb2RlU2NoZW1hRXJyb3IoXCJhICdcIiArIHR5cGUubmFtZSArIFwiJyB3YXMgZXhwZWN0ZWQsIGJ1dCAnXCIgKyB2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lICsgXCInIHdhcyBwcm92aWRlZCBpbiBcIiArIGtsYXNzLmNvbnN0cnVjdG9yLm5hbWUgKyBcIiNcIiArIGZpZWxkKTtcbiAgICB9XG59XG5mdW5jdGlvbiBlbmNvZGVQcmltaXRpdmVUeXBlKHR5cGUsIGJ5dGVzLCB2YWx1ZSwga2xhc3MsIGZpZWxkKSB7XG4gICAgYXNzZXJ0VHlwZSh2YWx1ZSwgdHlwZSwga2xhc3MsIGZpZWxkKTtcbiAgICB2YXIgZW5jb2RlRnVuYyA9IGVuY29kZVt0eXBlXTtcbiAgICBpZiAoZW5jb2RlRnVuYykge1xuICAgICAgICBlbmNvZGVGdW5jKGJ5dGVzLCB2YWx1ZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRW5jb2RlU2NoZW1hRXJyb3IoXCJhICdcIiArIHR5cGUgKyBcIicgd2FzIGV4cGVjdGVkLCBidXQgXCIgKyB2YWx1ZSArIFwiIHdhcyBwcm92aWRlZCBpbiBcIiArIGtsYXNzLmNvbnN0cnVjdG9yLm5hbWUgKyBcIiNcIiArIGZpZWxkKTtcbiAgICB9XG59XG5mdW5jdGlvbiBkZWNvZGVQcmltaXRpdmVUeXBlKHR5cGUsIGJ5dGVzLCBpdCkge1xuICAgIHJldHVybiBkZWNvZGVbdHlwZV0oYnl0ZXMsIGl0KTtcbn1cbi8qKlxuICogU2NoZW1hIGVuY29kZXIgLyBkZWNvZGVyXG4gKi9cbnZhciBTY2hlbWEgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgLy8gYWxsb3cgaW5oZXJpdGVkIGNsYXNzZXMgdG8gaGF2ZSBhIGNvbnN0cnVjdG9yXG4gICAgZnVuY3Rpb24gU2NoZW1hKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgYXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIC8vIGZpeCBlbnVtZXJhYmlsaXR5IG9mIGZpZWxkcyBmb3IgZW5kLXVzZXJcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywge1xuICAgICAgICAgICAgJGNoYW5nZXM6IHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogbmV3IENoYW5nZVRyZWVfMS5DaGFuZ2VUcmVlKHRoaXMuX2luZGV4ZXMpLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJGxpc3RlbmVyczoge1xuICAgICAgICAgICAgICAgIHZhbHVlOiB7fSxcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBkZXNjcmlwdG9ycyA9IHRoaXMuX2Rlc2NyaXB0b3JzO1xuICAgICAgICBpZiAoZGVzY3JpcHRvcnMpIHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIGRlc2NyaXB0b3JzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBTY2hlbWEub25FcnJvciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgfTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU2NoZW1hLnByb3RvdHlwZSwgXCJfc2NoZW1hXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmNvbnN0cnVjdG9yLl9zY2hlbWE7IH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTY2hlbWEucHJvdG90eXBlLCBcIl9kZXNjcmlwdG9yc1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvci5fZGVzY3JpcHRvcnM7IH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTY2hlbWEucHJvdG90eXBlLCBcIl9pbmRleGVzXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmNvbnN0cnVjdG9yLl9pbmRleGVzOyB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU2NoZW1hLnByb3RvdHlwZSwgXCJfZmllbGRzQnlJbmRleFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvci5fZmllbGRzQnlJbmRleDsgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNjaGVtYS5wcm90b3R5cGUsIFwiX2ZpbHRlcnNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuY29uc3RydWN0b3IuX2ZpbHRlcnM7IH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTY2hlbWEucHJvdG90eXBlLCBcIl9kZXByZWNhdGVkXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmNvbnN0cnVjdG9yLl9kZXByZWNhdGVkOyB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU2NoZW1hLnByb3RvdHlwZSwgXCIkY2hhbmdlZFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy4kY2hhbmdlcy5jaGFuZ2VkOyB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBTY2hlbWEucHJvdG90eXBlLmxpc3RlbiA9IGZ1bmN0aW9uIChhdHRyLCBjYWxsYmFjaykge1xuICAgICAgICBpZiAoIXRoaXMuJGxpc3RlbmVyc1thdHRyXSkge1xuICAgICAgICAgICAgdGhpcy4kbGlzdGVuZXJzW2F0dHJdID0gbmV3IEV2ZW50RW1pdHRlcl8xLkV2ZW50RW1pdHRlcigpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuJGxpc3RlbmVyc1thdHRyXS5yZWdpc3RlcihjYWxsYmFjayk7XG4gICAgfTtcbiAgICBTY2hlbWEucHJvdG90eXBlLmRlY29kZSA9IGZ1bmN0aW9uIChieXRlcywgaXQpIHtcbiAgICAgICAgaWYgKGl0ID09PSB2b2lkIDApIHsgaXQgPSB7IG9mZnNldDogMCB9OyB9XG4gICAgICAgIHZhciBjaGFuZ2VzID0gW107XG4gICAgICAgIHZhciBzY2hlbWEgPSB0aGlzLl9zY2hlbWE7XG4gICAgICAgIHZhciBmaWVsZHNCeUluZGV4ID0gdGhpcy5fZmllbGRzQnlJbmRleDtcbiAgICAgICAgdmFyIHRvdGFsQnl0ZXMgPSBieXRlcy5sZW5ndGg7XG4gICAgICAgIC8vIHNraXAgVFlQRV9JRCBvZiBleGlzdGluZyBpbnN0YW5jZXNcbiAgICAgICAgaWYgKGJ5dGVzW2l0Lm9mZnNldF0gPT09IHNwZWNfMS5UWVBFX0lEKSB7XG4gICAgICAgICAgICBpdC5vZmZzZXQgKz0gMjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgX2xvb3BfMSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBpc05pbCA9IGRlY29kZS5uaWxDaGVjayhieXRlcywgaXQpICYmICsraXQub2Zmc2V0O1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gYnl0ZXNbaXQub2Zmc2V0KytdO1xuICAgICAgICAgICAgaWYgKGluZGV4ID09PSBzcGVjXzEuRU5EX09GX1NUUlVDVFVSRSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcImJyZWFrXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgZmllbGQgPSBmaWVsZHNCeUluZGV4W2luZGV4XTtcbiAgICAgICAgICAgIHZhciBfZmllbGQgPSBcIl9cIiArIGZpZWxkO1xuICAgICAgICAgICAgdmFyIHR5cGUgPSBzY2hlbWFbZmllbGRdO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gdm9pZCAwO1xuICAgICAgICAgICAgdmFyIGNoYW5nZSA9IHZvaWQgMDsgLy8gZm9yIHRyaWdnZXJpbmcgb25DaGFuZ2VcbiAgICAgICAgICAgIHZhciBoYXNDaGFuZ2UgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmICghZmllbGQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJjb250aW51ZVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNOaWwpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IG51bGw7XG4gICAgICAgICAgICAgICAgaGFzQ2hhbmdlID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGUuX3NjaGVtYSkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gdGhpc18xW19maWVsZF0gfHwgdGhpc18xLmNyZWF0ZVR5cGVJbnN0YW5jZShieXRlcywgaXQsIHR5cGUpO1xuICAgICAgICAgICAgICAgIHZhbHVlLmRlY29kZShieXRlcywgaXQpO1xuICAgICAgICAgICAgICAgIGhhc0NoYW5nZSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgdHlwZSA9IHR5cGVbMF07XG4gICAgICAgICAgICAgICAgY2hhbmdlID0gW107XG4gICAgICAgICAgICAgICAgdmFyIHZhbHVlUmVmXzEgPSB0aGlzXzFbX2ZpZWxkXSB8fCBuZXcgQXJyYXlTY2hlbWFfMS5BcnJheVNjaGVtYSgpO1xuICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWVSZWZfMS5jbG9uZSh0cnVlKTtcbiAgICAgICAgICAgICAgICB2YXIgbmV3TGVuZ3RoXzEgPSBkZWNvZGUubnVtYmVyKGJ5dGVzLCBpdCk7XG4gICAgICAgICAgICAgICAgdmFyIG51bUNoYW5nZXMgPSBNYXRoLm1pbihkZWNvZGUubnVtYmVyKGJ5dGVzLCBpdCksIG5ld0xlbmd0aF8xKTtcbiAgICAgICAgICAgICAgICBoYXNDaGFuZ2UgPSAobnVtQ2hhbmdlcyA+IDApO1xuICAgICAgICAgICAgICAgIC8vIEZJWE1FOiB0aGlzIG1heSBub3QgYmUgcmVsaWFibGUuIHBvc3NpYmx5IG5lZWQgdG8gZW5jb2RlIHRoaXMgdmFyaWFibGUgZHVyaW5nIHNlcmlhbGl6YXRpb25cbiAgICAgICAgICAgICAgICB2YXIgaGFzSW5kZXhDaGFuZ2UgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAvLyBlbnN1cmUgY3VycmVudCBhcnJheSBoYXMgdGhlIHNhbWUgbGVuZ3RoIGFzIGVuY29kZWQgb25lXG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA+IG5ld0xlbmd0aF8xKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGRlY3JlYXNlIHJlbW92ZWQgaXRlbXMgZnJvbSBudW1iZXIgb2YgY2hhbmdlcy5cbiAgICAgICAgICAgICAgICAgICAgLy8gbm8gbmVlZCB0byBpdGVyYXRlIHRocm91Z2ggdGhlbSwgYXMgdGhleSdyZSBnb2luZyB0byBiZSByZW1vdmVkLlxuICAgICAgICAgICAgICAgICAgICBBcnJheS5wcm90b3R5cGUuc3BsaWNlLmNhbGwodmFsdWUsIG5ld0xlbmd0aF8xKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtUmVtb3ZlZCwgaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW1SZW1vdmVkICYmIGl0ZW1SZW1vdmVkLm9uUmVtb3ZlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbVJlbW92ZWQub25SZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2NoZW1hLm9uRXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlUmVmXzEub25SZW1vdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVJlZl8xLm9uUmVtb3ZlKGl0ZW1SZW1vdmVkLCBuZXdMZW5ndGhfMSArIGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTY2hlbWEub25FcnJvcihlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bUNoYW5nZXM7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3SW5kZXggPSBkZWNvZGUubnVtYmVyKGJ5dGVzLCBpdCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbmRleENoYW5nZWRGcm9tID0gdm9pZCAwOyAvLyBpbmRleCBjaGFuZ2UgY2hlY2tcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRlY29kZS5pbmRleENoYW5nZUNoZWNrKGJ5dGVzLCBpdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlY29kZS51aW50OChieXRlcywgaXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXhDaGFuZ2VkRnJvbSA9IGRlY29kZS5udW1iZXIoYnl0ZXMsIGl0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0luZGV4Q2hhbmdlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgaXNOZXcgPSAoIWhhc0luZGV4Q2hhbmdlICYmIHZhbHVlW25ld0luZGV4XSA9PT0gdW5kZWZpbmVkKSB8fCAoaGFzSW5kZXhDaGFuZ2UgJiYgaW5kZXhDaGFuZ2VkRnJvbSA9PT0gdW5kZWZpbmVkKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGUucHJvdG90eXBlIGluc3RhbmNlb2YgU2NoZW1hKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IHZvaWQgMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc05ldykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gPSB0aGlzXzEuY3JlYXRlVHlwZUluc3RhbmNlKGJ5dGVzLCBpdCwgdHlwZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChpbmRleENoYW5nZWRGcm9tICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtID0gdmFsdWVSZWZfMVtpbmRleENoYW5nZWRGcm9tXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gPSB2YWx1ZVJlZl8xW25ld0luZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0gPSB0aGlzXzEuY3JlYXRlVHlwZUluc3RhbmNlKGJ5dGVzLCBpdCwgdHlwZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNOZXcgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5kZWNvZGUoYnl0ZXMsIGl0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlW25ld0luZGV4XSA9IGl0ZW07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVtuZXdJbmRleF0gPSBkZWNvZGVQcmltaXRpdmVUeXBlKHR5cGUsIGJ5dGVzLCBpdCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTmV3KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWVSZWZfMS5vbkFkZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlUmVmXzEub25BZGQodmFsdWVbbmV3SW5kZXhdLCBuZXdJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNjaGVtYS5vbkVycm9yKGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICh2YWx1ZVJlZl8xLm9uQ2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlUmVmXzEub25DaGFuZ2UodmFsdWVbbmV3SW5kZXhdLCBuZXdJbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNjaGVtYS5vbkVycm9yKGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNoYW5nZS5wdXNoKHZhbHVlW25ld0luZGV4XSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZS5tYXApIHtcbiAgICAgICAgICAgICAgICB0eXBlID0gdHlwZS5tYXA7XG4gICAgICAgICAgICAgICAgdmFyIHZhbHVlUmVmID0gdGhpc18xW19maWVsZF0gfHwgbmV3IE1hcFNjaGVtYV8xLk1hcFNjaGVtYSgpO1xuICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWVSZWYuY2xvbmUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgdmFyIGxlbmd0aCA9IGRlY29kZS5udW1iZXIoYnl0ZXMsIGl0KTtcbiAgICAgICAgICAgICAgICBoYXNDaGFuZ2UgPSAobGVuZ3RoID4gMCk7XG4gICAgICAgICAgICAgICAgLy8gRklYTUU6IHRoaXMgbWF5IG5vdCBiZSByZWxpYWJsZS4gcG9zc2libHkgbmVlZCB0byBlbmNvZGUgdGhpcyB2YXJpYWJsZSBkdXJpbmdcbiAgICAgICAgICAgICAgICAvLyBzZXJpYWxpemFnaW9uXG4gICAgICAgICAgICAgICAgdmFyIGhhc0luZGV4Q2hhbmdlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdmFyIHByZXZpb3VzS2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlUmVmKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGBlbmNvZGVBbGxgIG1heSBpbmRpY2F0ZSBhIGhpZ2hlciBudW1iZXIgb2YgaW5kZXhlcyBpdCBhY3R1YWxseSBlbmNvZGVzXG4gICAgICAgICAgICAgICAgICAgIC8vIFRPRE86IGRvIG5vdCBlbmNvZGUgYSBoaWdoZXIgbnVtYmVyIHRoYW4gYWN0dWFsIGVuY29kZWQgZW50cmllc1xuICAgICAgICAgICAgICAgICAgICBpZiAoYnl0ZXNbaXQub2Zmc2V0XSA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBieXRlc1tpdC5vZmZzZXRdID09PSBzcGVjXzEuRU5EX09GX1NUUlVDVFVSRSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdmFyIGlzTmlsSXRlbSA9IGRlY29kZS5uaWxDaGVjayhieXRlcywgaXQpICYmICsraXQub2Zmc2V0O1xuICAgICAgICAgICAgICAgICAgICAvLyBpbmRleCBjaGFuZ2UgY2hlY2tcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByZXZpb3VzS2V5ID0gdm9pZCAwO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGVjb2RlLmluZGV4Q2hhbmdlQ2hlY2soYnl0ZXMsIGl0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVjb2RlLnVpbnQ4KGJ5dGVzLCBpdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91c0tleSA9IHByZXZpb3VzS2V5c1tkZWNvZGUubnVtYmVyKGJ5dGVzLCBpdCldO1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFzSW5kZXhDaGFuZ2UgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBoYXNNYXBJbmRleCA9IGRlY29kZS5udW1iZXJDaGVjayhieXRlcywgaXQpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgaXNTY2hlbWFUeXBlID0gdHlwZW9mICh0eXBlKSAhPT0gXCJzdHJpbmdcIjtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld0tleSA9IChoYXNNYXBJbmRleClcbiAgICAgICAgICAgICAgICAgICAgICAgID8gcHJldmlvdXNLZXlzW2RlY29kZS5udW1iZXIoYnl0ZXMsIGl0KV1cbiAgICAgICAgICAgICAgICAgICAgICAgIDogZGVjb2RlLnN0cmluZyhieXRlcywgaXQpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IHZvaWQgMDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGlzTmV3ID0gKCFoYXNJbmRleENoYW5nZSAmJiB2YWx1ZVJlZltuZXdLZXldID09PSB1bmRlZmluZWQpIHx8IChoYXNJbmRleENoYW5nZSAmJiBwcmV2aW91c0tleSA9PT0gdW5kZWZpbmVkICYmIGhhc01hcEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTmV3ICYmIGlzU2NoZW1hVHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSA9IHRoaXNfMS5jcmVhdGVUeXBlSW5zdGFuY2UoYnl0ZXMsIGl0LCB0eXBlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChwcmV2aW91c0tleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtID0gdmFsdWVSZWZbcHJldmlvdXNLZXldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSA9IHZhbHVlUmVmW25ld0tleV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTmlsSXRlbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0gJiYgaXRlbS5vblJlbW92ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ub25SZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2NoZW1hLm9uRXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlUmVmLm9uUmVtb3ZlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVSZWYub25SZW1vdmUoaXRlbSwgbmV3S2V5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2NoZW1hLm9uRXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHZhbHVlW25ld0tleV07XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICghaXNTY2hlbWFUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVtuZXdLZXldID0gZGVjb2RlUHJpbWl0aXZlVHlwZSh0eXBlLCBieXRlcywgaXQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5kZWNvZGUoYnl0ZXMsIGl0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlW25ld0tleV0gPSBpdGVtO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc05ldykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlUmVmLm9uQWRkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVSZWYub25BZGQodmFsdWVbbmV3S2V5XSwgbmV3S2V5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2NoZW1hLm9uRXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHZhbHVlUmVmLm9uQ2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlUmVmLm9uQ2hhbmdlKHZhbHVlW25ld0tleV0sIG5ld0tleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNjaGVtYS5vbkVycm9yKGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBkZWNvZGVQcmltaXRpdmVUeXBlKHR5cGUsIGJ5dGVzLCBpdCk7XG4gICAgICAgICAgICAgICAgLy8gRklYTUU6IHNob3VsZCBub3QgZXZlbiBoYXZlIGVuY29kZWQgaWYgdmFsdWUgaGF2ZW4ndCBjaGFuZ2VkIGluIHRoZSBmaXJzdCBwbGFjZSFcbiAgICAgICAgICAgICAgICAvLyBjaGVjayBGaWx0ZXJUZXN0LnRzOiBcInNob3VsZCBub3QgdHJpZ2dlciBgb25DaGFuZ2VgIGlmIGZpZWxkIGhhdmVuJ3QgY2hhbmdlZFwiXG4gICAgICAgICAgICAgICAgaGFzQ2hhbmdlID0gKHZhbHVlICE9PSB0aGlzXzFbX2ZpZWxkXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaGFzQ2hhbmdlICYmICh0aGlzXzEub25DaGFuZ2UgfHwgdGhpc18xLiRsaXN0ZW5lcnNbZmllbGRdKSkge1xuICAgICAgICAgICAgICAgIGNoYW5nZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkOiBmaWVsZCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNoYW5nZSB8fCB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNWYWx1ZTogdGhpc18xW19maWVsZF1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXNfMVtfZmllbGRdID0gdmFsdWU7XG4gICAgICAgIH07XG4gICAgICAgIHZhciB0aGlzXzEgPSB0aGlzO1xuICAgICAgICB3aGlsZSAoaXQub2Zmc2V0IDwgdG90YWxCeXRlcykge1xuICAgICAgICAgICAgdmFyIHN0YXRlXzEgPSBfbG9vcF8xKCk7XG4gICAgICAgICAgICBpZiAoc3RhdGVfMSA9PT0gXCJicmVha1wiKVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3RyaWdnZXJDaGFuZ2VzKGNoYW5nZXMpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIFNjaGVtYS5wcm90b3R5cGUuZW5jb2RlID0gZnVuY3Rpb24gKHJvb3QsIGVuY29kZUFsbCwgY2xpZW50LCBieXRlcykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAocm9vdCA9PT0gdm9pZCAwKSB7IHJvb3QgPSB0aGlzOyB9XG4gICAgICAgIGlmIChlbmNvZGVBbGwgPT09IHZvaWQgMCkgeyBlbmNvZGVBbGwgPSBmYWxzZTsgfVxuICAgICAgICBpZiAoYnl0ZXMgPT09IHZvaWQgMCkgeyBieXRlcyA9IFtdOyB9XG4gICAgICAgIC8vIHNraXAgaWYgbm90aGluZyBoYXMgY2hhbmdlZFxuICAgICAgICBpZiAoIXRoaXMuJGNoYW5nZXMuY2hhbmdlZCAmJiAhZW5jb2RlQWxsKSB7XG4gICAgICAgICAgICB0aGlzLl9lbmNvZGVFbmRPZlN0cnVjdHVyZSh0aGlzLCByb290LCBieXRlcyk7XG4gICAgICAgICAgICByZXR1cm4gYnl0ZXM7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHNjaGVtYSA9IHRoaXMuX3NjaGVtYTtcbiAgICAgICAgdmFyIGluZGV4ZXMgPSB0aGlzLl9pbmRleGVzO1xuICAgICAgICB2YXIgZmllbGRzQnlJbmRleCA9IHRoaXMuX2ZpZWxkc0J5SW5kZXg7XG4gICAgICAgIHZhciBmaWx0ZXJzID0gdGhpcy5fZmlsdGVycztcbiAgICAgICAgdmFyIGNoYW5nZXMgPSBBcnJheS5mcm9tKChlbmNvZGVBbGwpIC8vICB8fCBjbGllbnRcbiAgICAgICAgICAgID8gdGhpcy4kY2hhbmdlcy5hbGxDaGFuZ2VzXG4gICAgICAgICAgICA6IHRoaXMuJGNoYW5nZXMuY2hhbmdlcykuc29ydCgpO1xuICAgICAgICB2YXIgX2xvb3BfMiA9IGZ1bmN0aW9uIChpLCBsKSB7XG4gICAgICAgICAgICB2YXIgZmllbGQgPSBmaWVsZHNCeUluZGV4W2NoYW5nZXNbaV1dIHx8IGNoYW5nZXNbaV07XG4gICAgICAgICAgICB2YXIgX2ZpZWxkID0gXCJfXCIgKyBmaWVsZDtcbiAgICAgICAgICAgIHZhciB0eXBlID0gc2NoZW1hW2ZpZWxkXTtcbiAgICAgICAgICAgIHZhciBmaWx0ZXIgPSAoZmlsdGVycyAmJiBmaWx0ZXJzW2ZpZWxkXSk7XG4gICAgICAgICAgICAvLyBjb25zdCB2YWx1ZSA9IChmaWx0ZXIgJiYgdGhpcy4kYWxsQ2hhbmdlc1tmaWVsZF0pIHx8IGNoYW5nZXNbZmllbGRdO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gdGhpc18yW19maWVsZF07XG4gICAgICAgICAgICB2YXIgZmllbGRJbmRleCA9IGluZGV4ZXNbZmllbGRdO1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBlbmNvZGUudWludDgoYnl0ZXMsIHNwZWNfMS5OSUwpO1xuICAgICAgICAgICAgICAgIGVuY29kZS5udW1iZXIoYnl0ZXMsIGZpZWxkSW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZS5fc2NoZW1hKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNsaWVudCAmJiBmaWx0ZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gc2tpcCBpZiBub3QgYWxsb3dlZCBieSBjdXN0b20gZmlsdGVyXG4gICAgICAgICAgICAgICAgICAgIGlmICghZmlsdGVyLmNhbGwodGhpc18yLCBjbGllbnQsIHZhbHVlLCByb290KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiY29udGludWVcIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHZhbHVlIGhhcyBiZWVuIHJlbW92ZWRcbiAgICAgICAgICAgICAgICAgICAgZW5jb2RlLnVpbnQ4KGJ5dGVzLCBzcGVjXzEuTklMKTtcbiAgICAgICAgICAgICAgICAgICAgZW5jb2RlLm51bWJlcihieXRlcywgZmllbGRJbmRleCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvLyBlbmNvZGUgY2hpbGQgb2JqZWN0XG4gICAgICAgICAgICAgICAgICAgIGVuY29kZS5udW1iZXIoYnl0ZXMsIGZpZWxkSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICBhc3NlcnRJbnN0YW5jZVR5cGUodmFsdWUsIHR5cGUsIHRoaXNfMiwgZmllbGQpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzXzIudHJ5RW5jb2RlVHlwZUlkKGJ5dGVzLCB0eXBlLCB2YWx1ZS5jb25zdHJ1Y3Rvcik7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlLmVuY29kZShyb290LCBlbmNvZGVBbGwsIGNsaWVudCwgYnl0ZXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodHlwZSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgJGNoYW5nZXMgPSB2YWx1ZS4kY2hhbmdlcztcbiAgICAgICAgICAgICAgICBpZiAoY2xpZW50ICYmIGZpbHRlcikge1xuICAgICAgICAgICAgICAgICAgICAvLyBza2lwIGlmIG5vdCBhbGxvd2VkIGJ5IGN1c3RvbSBmaWx0ZXJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFmaWx0ZXIuY2FsbCh0aGlzXzIsIGNsaWVudCwgdmFsdWUsIHJvb3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJjb250aW51ZVwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVuY29kZS5udW1iZXIoYnl0ZXMsIGZpZWxkSW5kZXgpO1xuICAgICAgICAgICAgICAgIC8vIHRvdGFsIG51bWJlciBvZiBpdGVtcyBpbiB0aGUgYXJyYXlcbiAgICAgICAgICAgICAgICBlbmNvZGUubnVtYmVyKGJ5dGVzLCB2YWx1ZS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgIHZhciBhcnJheUNoYW5nZXMgPSBBcnJheS5mcm9tKChlbmNvZGVBbGwpIC8vICB8fCBjbGllbnRcbiAgICAgICAgICAgICAgICAgICAgPyAkY2hhbmdlcy5hbGxDaGFuZ2VzXG4gICAgICAgICAgICAgICAgICAgIDogJGNoYW5nZXMuY2hhbmdlcylcbiAgICAgICAgICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoaW5kZXgpIHsgcmV0dXJuIF90aGlzW19maWVsZF1baW5kZXhdICE9PSB1bmRlZmluZWQ7IH0pXG4gICAgICAgICAgICAgICAgICAgIC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBhIC0gYjsgfSk7XG4gICAgICAgICAgICAgICAgLy8gZW5zdXJlIG51bWJlciBvZiBjaGFuZ2VzIGRvZXNuJ3QgZXhjZWVkIGFycmF5IGxlbmd0aFxuICAgICAgICAgICAgICAgIHZhciBudW1DaGFuZ2VzID0gYXJyYXlDaGFuZ2VzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAvLyBudW1iZXIgb2YgY2hhbmdlZCBpdGVtc1xuICAgICAgICAgICAgICAgIGVuY29kZS5udW1iZXIoYnl0ZXMsIG51bUNoYW5nZXMpO1xuICAgICAgICAgICAgICAgIHZhciBpc0NoaWxkU2NoZW1hID0gdHlwZW9mICh0eXBlWzBdKSAhPT0gXCJzdHJpbmdcIjtcbiAgICAgICAgICAgICAgICAvLyBhc3NlcnQgQXJyYXlTY2hlbWEgd2FzIHByb3ZpZGVkXG4gICAgICAgICAgICAgICAgYXNzZXJ0SW5zdGFuY2VUeXBlKHRoaXNfMltfZmllbGRdLCBBcnJheVNjaGVtYV8xLkFycmF5U2NoZW1hLCB0aGlzXzIsIGZpZWxkKTtcbiAgICAgICAgICAgICAgICAvLyBlbmNvZGUgQXJyYXkgb2YgdHlwZVxuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbnVtQ2hhbmdlczsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IGFycmF5Q2hhbmdlc1tqXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB0aGlzXzJbX2ZpZWxkXVtpbmRleF07XG4gICAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICAgKiBUT0RPOiBmaWx0ZXIgYXJyYXkgYnkgaXRlbXMgaW5zdGVhZCBvZiB0aGUgd2hvbGUgb2JqZWN0XG4gICAgICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgICAgICAvLyBpZiAoY2xpZW50ICYmIGZpbHRlcikge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgLy8gc2tpcCBpZiBub3QgYWxsb3dlZCBieSBjdXN0b20gZmlsdGVyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBpZiAoIWZpbHRlci5jYWxsKHRoaXMsIGNsaWVudCwgaXRlbSwgcm9vdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgICAgICBpZiAoaXNDaGlsZFNjaGVtYSkgeyAvLyBpcyBhcnJheSBvZiBTY2hlbWFcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuY29kZS5udW1iZXIoYnl0ZXMsIGluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZW5jb2RlQWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4Q2hhbmdlID0gJGNoYW5nZXMuZ2V0SW5kZXhDaGFuZ2UoaXRlbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluZGV4Q2hhbmdlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2RlLnVpbnQ4KGJ5dGVzLCBzcGVjXzEuSU5ERVhfQ0hBTkdFKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2RlLm51bWJlcihieXRlcywgaW5kZXhDaGFuZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGFzc2VydEluc3RhbmNlVHlwZShpdGVtLCB0eXBlWzBdLCB0aGlzXzIsIGZpZWxkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNfMi50cnlFbmNvZGVUeXBlSWQoYnl0ZXMsIHR5cGVbMF0sIGl0ZW0uY29uc3RydWN0b3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5lbmNvZGUocm9vdCwgZW5jb2RlQWxsLCBjbGllbnQsIGJ5dGVzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChpdGVtICE9PSB1bmRlZmluZWQpIHsgLy8gaXMgYXJyYXkgb2YgcHJpbWl0aXZlc1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2RlLm51bWJlcihieXRlcywgaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2RlUHJpbWl0aXZlVHlwZSh0eXBlWzBdLCBieXRlcywgaXRlbSwgdGhpc18yLCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFlbmNvZGVBbGwgJiYgIWNsaWVudCkge1xuICAgICAgICAgICAgICAgICAgICAkY2hhbmdlcy5kaXNjYXJkKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZS5tYXApIHtcbiAgICAgICAgICAgICAgICB2YXIgJGNoYW5nZXMgPSB2YWx1ZS4kY2hhbmdlcztcbiAgICAgICAgICAgICAgICBpZiAoY2xpZW50ICYmIGZpbHRlcikge1xuICAgICAgICAgICAgICAgICAgICAvLyBza2lwIGlmIG5vdCBhbGxvd2VkIGJ5IGN1c3RvbSBmaWx0ZXJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFmaWx0ZXIuY2FsbCh0aGlzXzIsIGNsaWVudCwgdmFsdWUsIHJvb3QpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJjb250aW51ZVwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGVuY29kZSBNYXAgb2YgdHlwZVxuICAgICAgICAgICAgICAgIGVuY29kZS5udW1iZXIoYnl0ZXMsIGZpZWxkSW5kZXgpO1xuICAgICAgICAgICAgICAgIC8vIFRPRE86IGR1cmluZyBgZW5jb2RlQWxsYCwgcmVtb3ZlZCBlbnRyaWVzIGFyZSBub3QgZ29pbmcgdG8gYmUgZW5jb2RlZFxuICAgICAgICAgICAgICAgIHZhciBrZXlzID0gQXJyYXkuZnJvbSgoZW5jb2RlQWxsKSAvLyAgfHwgY2xpZW50XG4gICAgICAgICAgICAgICAgICAgID8gJGNoYW5nZXMuYWxsQ2hhbmdlc1xuICAgICAgICAgICAgICAgICAgICA6ICRjaGFuZ2VzLmNoYW5nZXMpO1xuICAgICAgICAgICAgICAgIGVuY29kZS5udW1iZXIoYnl0ZXMsIGtleXMubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAvLyBjb25zdCBwcmV2aW91c0tleXMgPSBPYmplY3Qua2V5cyh0aGlzW19maWVsZF0pOyAvLyB0aGlzIGlzIGNvc3RseSFcbiAgICAgICAgICAgICAgICB2YXIgcHJldmlvdXNLZXlzID0gQXJyYXkuZnJvbSgkY2hhbmdlcy5hbGxDaGFuZ2VzKTtcbiAgICAgICAgICAgICAgICB2YXIgaXNDaGlsZFNjaGVtYSA9IHR5cGVvZiAodHlwZS5tYXApICE9PSBcInN0cmluZ1wiO1xuICAgICAgICAgICAgICAgIHZhciBudW1DaGFuZ2VzID0ga2V5cy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgLy8gYXNzZXJ0IE1hcFNjaGVtYSB3YXMgcHJvdmlkZWRcbiAgICAgICAgICAgICAgICBhc3NlcnRJbnN0YW5jZVR5cGUodGhpc18yW19maWVsZF0sIE1hcFNjaGVtYV8xLk1hcFNjaGVtYSwgdGhpc18yLCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaV8xID0gMDsgaV8xIDwgbnVtQ2hhbmdlczsgaV8xKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV8xXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB0aGlzXzJbX2ZpZWxkXVtrZXldO1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWFwSXRlbUluZGV4ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICogVE9ETzogZmlsdGVyIG1hcCBieSBpdGVtcyBpbnN0ZWFkIG9mIHRoZSB3aG9sZSBvYmplY3RcbiAgICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIChjbGllbnQgJiYgZmlsdGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAvLyBza2lwIGlmIG5vdCBhbGxvd2VkIGJ5IGN1c3RvbSBmaWx0ZXJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIGlmICghZmlsdGVyLmNhbGwodGhpcywgY2xpZW50LCBpdGVtLCByb290KSkge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChlbmNvZGVBbGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBwcmV2aW91c2x5IGRlbGV0ZWQgaXRlbXMgYXJlIHNraXBwZWQgZHVyaW5nIGBlbmNvZGVBbGxgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBlbmNvZGUgaW5kZXggY2hhbmdlXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5kZXhDaGFuZ2UgPSAkY2hhbmdlcy5nZXRJbmRleENoYW5nZShpdGVtKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtICYmIGluZGV4Q2hhbmdlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmNvZGUudWludDgoYnl0ZXMsIHNwZWNfMS5JTkRFWF9DSEFOR0UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuY29kZS5udW1iZXIoYnl0ZXMsIHRoaXNfMltfZmllbGRdLl9pbmRleGVzLmdldChpbmRleENoYW5nZSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgICAgICAgKiAtIEFsbG93IGl0ZW0gcmVwbGFjZW1lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAqIC0gQWxsb3cgdG8gdXNlIHRoZSBpbmRleCBvZiBhIGRlbGV0ZWQgaXRlbSB0byBlbmNvZGUgYXMgTklMXG4gICAgICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcEl0ZW1JbmRleCA9ICghJGNoYW5nZXMuaXNEZWxldGVkKGtleSkgfHwgIWl0ZW0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB0aGlzXzJbX2ZpZWxkXS5faW5kZXhlcy5nZXQoa2V5KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBpc05pbCA9IChpdGVtID09PSB1bmRlZmluZWQpO1xuICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICogSW52ZXJ0IE5JTCB0byBwcmV2ZW50IGNvbGxpc2lvbiB3aXRoIGRhdGEgc3RhcnRpbmcgd2l0aCBOSUwgYnl0ZVxuICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTmlsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiByZW1vdmUgaXRlbVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJSRU1PVkUgS0VZIElOREVYXCIsIHsga2V5IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpc1tfZmllbGRdLl9pbmRleGVzLmRlbGV0ZShrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2RlLnVpbnQ4KGJ5dGVzLCBzcGVjXzEuTklMKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAobWFwSXRlbUluZGV4ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuY29kZS5udW1iZXIoYnl0ZXMsIG1hcEl0ZW1JbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbmNvZGUuc3RyaW5nKGJ5dGVzLCBrZXkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtICYmIGlzQ2hpbGRTY2hlbWEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFzc2VydEluc3RhbmNlVHlwZShpdGVtLCB0eXBlLm1hcCwgdGhpc18yLCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzXzIudHJ5RW5jb2RlVHlwZUlkKGJ5dGVzLCB0eXBlLm1hcCwgaXRlbS5jb25zdHJ1Y3Rvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmVuY29kZShyb290LCBlbmNvZGVBbGwsIGNsaWVudCwgYnl0ZXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKCFpc05pbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5jb2RlUHJpbWl0aXZlVHlwZSh0eXBlLm1hcCwgYnl0ZXMsIGl0ZW0sIHRoaXNfMiwgZmllbGQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghZW5jb2RlQWxsICYmICFjbGllbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgJGNoYW5nZXMuZGlzY2FyZCgpO1xuICAgICAgICAgICAgICAgICAgICAvLyBUT0RPOiB0cmFjayBhcnJheS9tYXAgaW5kZXhlcyBwZXIgY2xpZW50IChmb3IgZmlsdGVyaW5nKT9cbiAgICAgICAgICAgICAgICAgICAgLy8gVE9ETzogZG8gbm90IGl0ZXJhdGUgdGhvdWdoIGFsbCBNYXBTY2hlbWEgaW5kZXhlcyBoZXJlLlxuICAgICAgICAgICAgICAgICAgICB0aGlzXzJbX2ZpZWxkXS5fdXBkYXRlSW5kZXhlcyhwcmV2aW91c0tleXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChjbGllbnQgJiYgZmlsdGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHNraXAgaWYgbm90IGFsbG93ZWQgYnkgY3VzdG9tIGZpbHRlclxuICAgICAgICAgICAgICAgICAgICBpZiAoIWZpbHRlci5jYWxsKHRoaXNfMiwgY2xpZW50LCB2YWx1ZSwgcm9vdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcImNvbnRpbnVlXCI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZW5jb2RlLm51bWJlcihieXRlcywgZmllbGRJbmRleCk7XG4gICAgICAgICAgICAgICAgZW5jb2RlUHJpbWl0aXZlVHlwZSh0eXBlLCBieXRlcywgdmFsdWUsIHRoaXNfMiwgZmllbGQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB2YXIgdGhpc18yID0gdGhpcztcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBjaGFuZ2VzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgX2xvb3BfMihpLCBsKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBmbGFnIGVuZCBvZiBTY2hlbWEgb2JqZWN0IHN0cnVjdHVyZVxuICAgICAgICB0aGlzLl9lbmNvZGVFbmRPZlN0cnVjdHVyZSh0aGlzLCByb290LCBieXRlcyk7XG4gICAgICAgIGlmICghZW5jb2RlQWxsICYmICFjbGllbnQpIHtcbiAgICAgICAgICAgIHRoaXMuJGNoYW5nZXMuZGlzY2FyZCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBieXRlcztcbiAgICB9O1xuICAgIFNjaGVtYS5wcm90b3R5cGUuZW5jb2RlRmlsdGVyZWQgPSBmdW5jdGlvbiAoY2xpZW50LCBieXRlcykge1xuICAgICAgICByZXR1cm4gdGhpcy5lbmNvZGUodGhpcywgZmFsc2UsIGNsaWVudCwgYnl0ZXMpO1xuICAgIH07XG4gICAgU2NoZW1hLnByb3RvdHlwZS5lbmNvZGVBbGwgPSBmdW5jdGlvbiAoYnl0ZXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW5jb2RlKHRoaXMsIHRydWUsIHVuZGVmaW5lZCwgYnl0ZXMpO1xuICAgIH07XG4gICAgU2NoZW1hLnByb3RvdHlwZS5lbmNvZGVBbGxGaWx0ZXJlZCA9IGZ1bmN0aW9uIChjbGllbnQsIGJ5dGVzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVuY29kZSh0aGlzLCB0cnVlLCBjbGllbnQsIGJ5dGVzKTtcbiAgICB9O1xuICAgIFNjaGVtYS5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjbG9uZWQgPSBuZXcgKHRoaXMuY29uc3RydWN0b3IpO1xuICAgICAgICB2YXIgc2NoZW1hID0gdGhpcy5fc2NoZW1hO1xuICAgICAgICBmb3IgKHZhciBmaWVsZCBpbiBzY2hlbWEpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgKHRoaXNbZmllbGRdKSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgICAgIHR5cGVvZiAodGhpc1tmaWVsZF0uY2xvbmUpID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAvLyBkZWVwIGNsb25lXG4gICAgICAgICAgICAgICAgY2xvbmVkW2ZpZWxkXSA9IHRoaXNbZmllbGRdLmNsb25lKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBwcmltaXRpdmUgdmFsdWVzXG4gICAgICAgICAgICAgICAgY2xvbmVkW2ZpZWxkXSA9IHRoaXNbZmllbGRdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjbG9uZWQ7XG4gICAgfTtcbiAgICBTY2hlbWEucHJvdG90eXBlLnRyaWdnZXJBbGwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5vbkNoYW5nZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjaGFuZ2VzID0gW107XG4gICAgICAgIHZhciBzY2hlbWEgPSB0aGlzLl9zY2hlbWE7XG4gICAgICAgIGZvciAodmFyIGZpZWxkIGluIHNjaGVtYSkge1xuICAgICAgICAgICAgaWYgKHRoaXNbZmllbGRdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjaGFuZ2VzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBmaWVsZDogZmllbGQsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzW2ZpZWxkXSxcbiAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNWYWx1ZTogdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMub25DaGFuZ2UoY2hhbmdlcyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIFNjaGVtYS5vbkVycm9yKGUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY2hlbWEucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHNjaGVtYSA9IHRoaXMuX3NjaGVtYTtcbiAgICAgICAgdmFyIGRlcHJlY2F0ZWQgPSB0aGlzLl9kZXByZWNhdGVkO1xuICAgICAgICB2YXIgb2JqID0ge307XG4gICAgICAgIGZvciAodmFyIGZpZWxkIGluIHNjaGVtYSkge1xuICAgICAgICAgICAgaWYgKCFkZXByZWNhdGVkW2ZpZWxkXSAmJiB0aGlzW2ZpZWxkXSAhPT0gbnVsbCAmJiB0eXBlb2YgKHRoaXNbZmllbGRdKSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgICAgIG9ialtmaWVsZF0gPSAodHlwZW9mICh0aGlzW2ZpZWxkXS50b0pTT04pID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICAgICAgICAgID8gdGhpc1tmaWVsZF0udG9KU09OKClcbiAgICAgICAgICAgICAgICAgICAgOiB0aGlzW1wiX1wiICsgZmllbGRdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfTtcbiAgICBTY2hlbWEucHJvdG90eXBlLmRpc2NhcmRBbGxDaGFuZ2VzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc2NoZW1hID0gdGhpcy5fc2NoZW1hO1xuICAgICAgICB2YXIgY2hhbmdlcyA9IEFycmF5LmZyb20odGhpcy4kY2hhbmdlcy5jaGFuZ2VzKTtcbiAgICAgICAgdmFyIGZpZWxkc0J5SW5kZXggPSB0aGlzLl9maWVsZHNCeUluZGV4O1xuICAgICAgICBmb3IgKHZhciBpbmRleCBpbiBjaGFuZ2VzKSB7XG4gICAgICAgICAgICB2YXIgZmllbGQgPSBmaWVsZHNCeUluZGV4W2luZGV4XTtcbiAgICAgICAgICAgIHZhciB0eXBlID0gc2NoZW1hW2ZpZWxkXTtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHRoaXNbZmllbGRdO1xuICAgICAgICAgICAgLy8gc2tpcCB1bmNoYWduZWQgZmllbGRzXG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGUuX3NjaGVtYSkge1xuICAgICAgICAgICAgICAgIHZhbHVlLmRpc2NhcmRBbGxDaGFuZ2VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSB2YWx1ZS5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGluZGV4XzEgPSB2YWx1ZVtpXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB0aGlzW1wiX1wiICsgZmllbGRdW2luZGV4XzFdO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mICh0eXBlWzBdKSAhPT0gXCJzdHJpbmdcIiAmJiBpdGVtKSB7IC8vIGlzIGFycmF5IG9mIFNjaGVtYVxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5kaXNjYXJkQWxsQ2hhbmdlcygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhbHVlLiRjaGFuZ2VzLmRpc2NhcmQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGUubWFwKSB7XG4gICAgICAgICAgICAgICAgdmFyIGtleXMgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICB2YXIgbWFwS2V5cyA9IE9iamVjdC5rZXlzKHRoaXNbXCJfXCIgKyBmaWVsZF0pO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIga2V5ID0gbWFwS2V5c1trZXlzW2ldXSB8fCBrZXlzW2ldO1xuICAgICAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IHRoaXNbXCJfXCIgKyBmaWVsZF1ba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0gaW5zdGFuY2VvZiBTY2hlbWEgJiYgaXRlbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5kaXNjYXJkQWxsQ2hhbmdlcygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhbHVlLiRjaGFuZ2VzLmRpc2NhcmQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLiRjaGFuZ2VzLmRpc2NhcmQoKTtcbiAgICB9O1xuICAgIFNjaGVtYS5wcm90b3R5cGUuX2VuY29kZUVuZE9mU3RydWN0dXJlID0gZnVuY3Rpb24gKGluc3RhbmNlLCByb290LCBieXRlcykge1xuICAgICAgICBpZiAoaW5zdGFuY2UgIT09IHJvb3QpIHtcbiAgICAgICAgICAgIGJ5dGVzLnB1c2goc3BlY18xLkVORF9PRl9TVFJVQ1RVUkUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY2hlbWEucHJvdG90eXBlLnRyeUVuY29kZVR5cGVJZCA9IGZ1bmN0aW9uIChieXRlcywgdHlwZSwgdGFyZ2V0VHlwZSkge1xuICAgICAgICBpZiAodHlwZS5fdHlwZWlkICE9PSB0YXJnZXRUeXBlLl90eXBlaWQpIHtcbiAgICAgICAgICAgIGVuY29kZS51aW50OChieXRlcywgc3BlY18xLlRZUEVfSUQpO1xuICAgICAgICAgICAgZW5jb2RlLnVpbnQ4KGJ5dGVzLCB0YXJnZXRUeXBlLl90eXBlaWQpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY2hlbWEucHJvdG90eXBlLmNyZWF0ZVR5cGVJbnN0YW5jZSA9IGZ1bmN0aW9uIChieXRlcywgaXQsIHR5cGUpIHtcbiAgICAgICAgaWYgKGJ5dGVzW2l0Lm9mZnNldF0gPT09IHNwZWNfMS5UWVBFX0lEKSB7XG4gICAgICAgICAgICBpdC5vZmZzZXQrKztcbiAgICAgICAgICAgIHZhciBhbm90aGVyVHlwZSA9IHRoaXMuY29uc3RydWN0b3IuX2NvbnRleHQuZ2V0KGRlY29kZS51aW50OChieXRlcywgaXQpKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgYW5vdGhlclR5cGUoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgdHlwZSgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY2hlbWEucHJvdG90eXBlLl90cmlnZ2VyQ2hhbmdlcyA9IGZ1bmN0aW9uIChjaGFuZ2VzKSB7XG4gICAgICAgIGlmIChjaGFuZ2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hhbmdlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBjaGFuZ2UgPSBjaGFuZ2VzW2ldO1xuICAgICAgICAgICAgICAgIHZhciBsaXN0ZW5lciA9IHRoaXMuJGxpc3RlbmVyc1tjaGFuZ2UuZmllbGRdO1xuICAgICAgICAgICAgICAgIGlmIChsaXN0ZW5lcikge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGlzdGVuZXIuaW52b2tlKGNoYW5nZS52YWx1ZSwgY2hhbmdlLnByZXZpb3VzVmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBTY2hlbWEub25FcnJvcihlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLm9uQ2hhbmdlKSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkNoYW5nZShjaGFuZ2VzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgU2NoZW1hLm9uRXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gU2NoZW1hO1xufSgpKTtcbmV4cG9ydHMuU2NoZW1hID0gU2NoZW1hO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2NoZW1hLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){"use strict";eval('\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nvar decode_1 = __importDefault(__webpack_require__(29));\nvar encode_1 = __importDefault(__webpack_require__(30));\nexports.decode = decode_1.default;\nexports.encode = encode_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9tc2dwYWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RCwrQkFBK0IsbUJBQU8sQ0FBQyxFQUFrQjtBQUN6RCwrQkFBK0IsbUJBQU8sQ0FBQyxFQUFrQjtBQUN6RDtBQUNBIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBkZWNvZGVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9tc2dwYWNrL2RlY29kZVwiKSk7XG52YXIgZW5jb2RlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vbXNncGFjay9lbmNvZGVcIikpO1xuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGVfMS5kZWZhdWx0O1xuZXhwb3J0cy5lbmNvZGUgPSBlbmNvZGVfMS5kZWZhdWx0O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.CountDown = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _global = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CountDown = exports.CountDown = function (_Phaser$Group) {\n    _inherits(CountDown, _Phaser$Group);\n\n    function CountDown(game, onFinish, QnInd) {\n        _classCallCheck(this, CountDown);\n\n        var _this = _possibleConstructorReturn(this, (CountDown.__proto__ || Object.getPrototypeOf(CountDown)).call(this, game));\n\n        _this.QnInd = QnInd;\n        _this.onFinish = onFinish;\n        _this.countDownFrames = ["one", "two", "start"];\n        _this.frameInd = 0;\n        _this.elapsedTime = 0;\n        _this.prevSec = 0;\n        _this.sec = 0;\n        _this.isActive = false;\n        _this.cntDn = null;\n\n        _this.addCountDown = _this.addCountDown.bind(_this);\n        return _this;\n    }\n\n    _createClass(CountDown, [{\n        key: "addCountDown",\n        value: function addCountDown(data) {\n            this.isActive = true;\n            if (this.cntDn == null) {\n                this.cntDn = this.game.add.sprite(data.x, data.y, "sprite", this.countDownFrames[this.frameInd]);\n                this.cntDn.anchor.setTo(0.5);\n                this.cntDn.name = "countdown-" + String(data.Ind);\n                this.cntDn.resizeFactor = 1;\n\n                _global.Global.responsiveObj.notify("item-fill-and-resize-all", {\n                    scene: this\n                });\n            } else {\n                this.cntDn.revive();\n                this.frameInd = -1;\n                this.updateFrame();\n            }\n        }\n    }, {\n        key: "updateFrame",\n        value: function updateFrame() {\n            this.frameInd++;\n            if (this.frameInd >= this.countDownFrames.length) {\n                this.isActive = false;\n                this.onFinish();\n                //this.shutdown();\n            } else {\n                this.cntDn.frameName = this.countDownFrames[this.frameInd];\n            }\n        }\n    }, {\n        key: "update",\n        value: function update() {\n            if (this.isActive) {\n                this.elapsedTime += 33 / 2;\n                this.sec = Math.floor(this.elapsedTime / 1000 % 60);\n                if (this.sec != this.prevSec) {\n                    this.updateFrame();\n                }\n                this.prevSec = this.sec;\n            }\n        }\n    }, {\n        key: "removeCountDown",\n        value: function removeCountDown() {\n            this.cntDn.kill();\n        }\n    }]);\n\n    return CountDown;\n}(Phaser.Group);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vc3JjL3BhcnRpYWwvY291bnRkb3duLmpzIl0sIm5hbWVzIjpbIkNvdW50RG93biIsImdhbWUiLCJvbkZpbmlzaCIsIlFuSW5kIiwiY291bnREb3duRnJhbWVzIiwiZnJhbWVJbmQiLCJlbGFwc2VkVGltZSIsInByZXZTZWMiLCJzZWMiLCJpc0FjdGl2ZSIsImNudERuIiwiYWRkQ291bnREb3duIiwiYmluZCIsImRhdGEiLCJhZGQiLCJzcHJpdGUiLCJ4IiwieSIsImFuY2hvciIsInNldFRvIiwibmFtZSIsIlN0cmluZyIsIkluZCIsInJlc2l6ZUZhY3RvciIsIkdsb2JhbCIsInJlc3BvbnNpdmVPYmoiLCJub3RpZnkiLCJzY2VuZSIsInJldml2ZSIsInVwZGF0ZUZyYW1lIiwibGVuZ3RoIiwiZnJhbWVOYW1lIiwiTWF0aCIsImZsb29yIiwia2lsbCIsIlBoYXNlciIsIkdyb3VwIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7SUFDYUEsUyxXQUFBQSxTOzs7QUFDVCx1QkFBWUMsSUFBWixFQUFrQkMsUUFBbEIsRUFBMkJDLEtBQTNCLEVBQWtDO0FBQUE7O0FBQUEsMEhBQ3hCRixJQUR3Qjs7QUFHOUIsY0FBS0UsS0FBTCxHQUFXQSxLQUFYO0FBQ0EsY0FBS0QsUUFBTCxHQUFnQkEsUUFBaEI7QUFDQSxjQUFLRSxlQUFMLEdBQXVCLENBQUMsS0FBRCxFQUFRLEtBQVIsRUFBZSxPQUFmLENBQXZCO0FBQ0EsY0FBS0MsUUFBTCxHQUFnQixDQUFoQjtBQUNBLGNBQUtDLFdBQUwsR0FBbUIsQ0FBbkI7QUFDQSxjQUFLQyxPQUFMLEdBQWUsQ0FBZjtBQUNBLGNBQUtDLEdBQUwsR0FBVyxDQUFYO0FBQ0EsY0FBS0MsUUFBTCxHQUFjLEtBQWQ7QUFDQSxjQUFLQyxLQUFMLEdBQVcsSUFBWDs7QUFFQSxjQUFLQyxZQUFMLEdBQW1CLE1BQUtBLFlBQUwsQ0FBa0JDLElBQWxCLE9BQW5CO0FBYjhCO0FBY2pDOzs7O3FDQUVZQyxJLEVBQU07QUFDZixpQkFBS0osUUFBTCxHQUFjLElBQWQ7QUFDQSxnQkFBRyxLQUFLQyxLQUFMLElBQVksSUFBZixFQUFvQjtBQUNoQixxQkFBS0EsS0FBTCxHQUFhLEtBQUtULElBQUwsQ0FBVWEsR0FBVixDQUFjQyxNQUFkLENBQXFCRixLQUFLRyxDQUExQixFQUE0QkgsS0FBS0ksQ0FBakMsRUFBb0MsUUFBcEMsRUFBOEMsS0FBS2IsZUFBTCxDQUFxQixLQUFLQyxRQUExQixDQUE5QyxDQUFiO0FBQ0EscUJBQUtLLEtBQUwsQ0FBV1EsTUFBWCxDQUFrQkMsS0FBbEIsQ0FBd0IsR0FBeEI7QUFDQSxxQkFBS1QsS0FBTCxDQUFXVSxJQUFYLEdBQWdCLGVBQWFDLE9BQU9SLEtBQUtTLEdBQVosQ0FBN0I7QUFDQSxxQkFBS1osS0FBTCxDQUFXYSxZQUFYLEdBQXdCLENBQXhCOztBQUVBQywrQkFBT0MsYUFBUCxDQUFxQkMsTUFBckIsQ0FBNEIsMEJBQTVCLEVBQXdEO0FBQ3BEQywyQkFBTztBQUQ2QyxpQkFBeEQ7QUFHSCxhQVRELE1BU0s7QUFDRCxxQkFBS2pCLEtBQUwsQ0FBV2tCLE1BQVg7QUFDQSxxQkFBS3ZCLFFBQUwsR0FBYyxDQUFDLENBQWY7QUFDQSxxQkFBS3dCLFdBQUw7QUFDSDtBQUVKOzs7c0NBQ2E7QUFDVixpQkFBS3hCLFFBQUw7QUFDQSxnQkFBRyxLQUFLQSxRQUFMLElBQWUsS0FBS0QsZUFBTCxDQUFxQjBCLE1BQXZDLEVBQThDO0FBQzFDLHFCQUFLckIsUUFBTCxHQUFjLEtBQWQ7QUFDQSxxQkFBS1AsUUFBTDtBQUNBO0FBQ0gsYUFKRCxNQUlLO0FBQ0QscUJBQUtRLEtBQUwsQ0FBV3FCLFNBQVgsR0FBdUIsS0FBSzNCLGVBQUwsQ0FBcUIsS0FBS0MsUUFBMUIsQ0FBdkI7QUFFSDtBQUNKOzs7aUNBQ1E7QUFDTCxnQkFBRyxLQUFLSSxRQUFSLEVBQWlCO0FBQ2IscUJBQUtILFdBQUwsSUFBb0IsS0FBSyxDQUF6QjtBQUNBLHFCQUFLRSxHQUFMLEdBQVd3QixLQUFLQyxLQUFMLENBQVksS0FBSzNCLFdBQUwsR0FBbUIsSUFBcEIsR0FBNEIsRUFBdkMsQ0FBWDtBQUNBLG9CQUFJLEtBQUtFLEdBQUwsSUFBWSxLQUFLRCxPQUFyQixFQUE4QjtBQUMxQix5QkFBS3NCLFdBQUw7QUFDSDtBQUNELHFCQUFLdEIsT0FBTCxHQUFlLEtBQUtDLEdBQXBCO0FBQ0g7QUFFSjs7OzBDQUNnQjtBQUNiLGlCQUFLRSxLQUFMLENBQVd3QixJQUFYO0FBQ0g7Ozs7RUEzRDBCQyxPQUFPQyxLIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHbG9iYWwgfSBmcm9tICcuLi91dGlsL2dsb2JhbCc7XHJcbmV4cG9ydCBjbGFzcyBDb3VudERvd24gZXh0ZW5kcyBQaGFzZXIuR3JvdXAge1xyXG4gICAgY29uc3RydWN0b3IoZ2FtZSwgb25GaW5pc2gsUW5JbmQpIHtcclxuICAgICAgICBzdXBlcihnYW1lKTtcclxuXHJcbiAgICAgICAgdGhpcy5RbkluZD1RbkluZDtcclxuICAgICAgICB0aGlzLm9uRmluaXNoID0gb25GaW5pc2g7XHJcbiAgICAgICAgdGhpcy5jb3VudERvd25GcmFtZXMgPSBbXCJvbmVcIiwgXCJ0d29cIiwgXCJzdGFydFwiXTtcclxuICAgICAgICB0aGlzLmZyYW1lSW5kID0gMDtcclxuICAgICAgICB0aGlzLmVsYXBzZWRUaW1lID0gMDtcclxuICAgICAgICB0aGlzLnByZXZTZWMgPSAwO1xyXG4gICAgICAgIHRoaXMuc2VjID0gMDtcclxuICAgICAgICB0aGlzLmlzQWN0aXZlPWZhbHNlO1xyXG4gICAgICAgIHRoaXMuY250RG49bnVsbDtcclxuXHJcbiAgICAgICAgdGhpcy5hZGRDb3VudERvd249IHRoaXMuYWRkQ291bnREb3duLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkQ291bnREb3duKGRhdGEpIHtcclxuICAgICAgICB0aGlzLmlzQWN0aXZlPXRydWU7XHJcbiAgICAgICAgaWYodGhpcy5jbnREbj09bnVsbCl7XHJcbiAgICAgICAgICAgIHRoaXMuY250RG4gPSB0aGlzLmdhbWUuYWRkLnNwcml0ZShkYXRhLngsZGF0YS55LCBcInNwcml0ZVwiLCB0aGlzLmNvdW50RG93bkZyYW1lc1t0aGlzLmZyYW1lSW5kXSlcclxuICAgICAgICAgICAgdGhpcy5jbnREbi5hbmNob3Iuc2V0VG8oMC41KTtcclxuICAgICAgICAgICAgdGhpcy5jbnREbi5uYW1lPVwiY291bnRkb3duLVwiK1N0cmluZyhkYXRhLkluZCk7XHJcbiAgICAgICAgICAgIHRoaXMuY250RG4ucmVzaXplRmFjdG9yPTE7XHJcbiAgICBcclxuICAgICAgICAgICAgR2xvYmFsLnJlc3BvbnNpdmVPYmoubm90aWZ5KFwiaXRlbS1maWxsLWFuZC1yZXNpemUtYWxsXCIsIHtcclxuICAgICAgICAgICAgICAgIHNjZW5lOiB0aGlzXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0aGlzLmNudERuLnJldml2ZSgpO1xyXG4gICAgICAgICAgICB0aGlzLmZyYW1lSW5kPS0xO1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUZyYW1lKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgdXBkYXRlRnJhbWUoKSB7XHJcbiAgICAgICAgdGhpcy5mcmFtZUluZCsrO1xyXG4gICAgICAgIGlmKHRoaXMuZnJhbWVJbmQ+PXRoaXMuY291bnREb3duRnJhbWVzLmxlbmd0aCl7XHJcbiAgICAgICAgICAgIHRoaXMuaXNBY3RpdmU9ZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMub25GaW5pc2goKTtcclxuICAgICAgICAgICAgLy90aGlzLnNodXRkb3duKCk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMuY250RG4uZnJhbWVOYW1lID0gdGhpcy5jb3VudERvd25GcmFtZXNbdGhpcy5mcmFtZUluZF1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgdXBkYXRlKCkge1xyXG4gICAgICAgIGlmKHRoaXMuaXNBY3RpdmUpe1xyXG4gICAgICAgICAgICB0aGlzLmVsYXBzZWRUaW1lICs9IDMzIC8gMjtcclxuICAgICAgICAgICAgdGhpcy5zZWMgPSBNYXRoLmZsb29yKCh0aGlzLmVsYXBzZWRUaW1lIC8gMTAwMCkgJSA2MCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNlYyAhPSB0aGlzLnByZXZTZWMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRnJhbWUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLnByZXZTZWMgPSB0aGlzLnNlYztcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgcmVtb3ZlQ291bnREb3duKCl7XHJcbiAgICAgICAgdGhpcy5jbnREbi5raWxsKCk7XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"send\", function() { return send; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"post\", function() { return post; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"patch\", function() { return patch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"del\", function() { return del; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"put\", function() { return put; });\nfunction apply(src, tar) {\n\ttar.headers = src.headers || {};\n\ttar.statusMessage = src.statusText;\n\ttar.statusCode = src.status;\n\ttar.data = src.response;\n}\n\nfunction send(method, uri, opts) {\n\treturn new Promise(function (res, rej) {\n\t\topts = opts || {};\n\t\tvar k, str, tmp, arr;\n\t\tvar req = new XMLHttpRequest;\n\t\tvar headers = opts.headers || {};\n\n\t\t// IE compatible\n\t\tif (opts.timeout) req.timeout = opts.timeout;\n\t\treq.ontimeout = req.onerror = function (err) {\n\t\t\terr.timeout = err.type == 'timeout';\n\t\t\trej(err);\n\t\t}\n\n\t\treq.open(method, uri);\n\n\t\treq.onload = function () {\n\t\t\tarr = req.getAllResponseHeaders().trim().split(/[\\r\\n]+/);\n\t\t\tapply(req, req); //=> req.headers\n\n\t\t\twhile (tmp = arr.shift()) {\n\t\t\t\ttmp = tmp.split(': ');\n\t\t\t\treq.headers[tmp.shift().toLowerCase()] = tmp.join(': ');\n\t\t\t}\n\n\t\t\ttmp = req.headers['content-type'];\n\t\t\tif (tmp && !!~tmp.indexOf('application/json')) {\n\t\t\t\ttry {\n\t\t\t\t\treq.data = JSON.parse(req.data, opts.reviver);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tapply(req, err);\n\t\t\t\t\treturn rej(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t(req.status >= 400 ? rej : res)(req);\n\t\t};\n\n\t\tif ((str = opts.body) && typeof str == 'object') {\n\t\t\theaders['content-type'] = 'application/json';\n\t\t\tstr = JSON.stringify(str);\n\t\t}\n\n\t\treq.withCredentials = !!opts.withCredentials;\n\n\t\tfor (k in headers) {\n\t\t\treq.setRequestHeader(k, headers[k]);\n\t\t}\n\n\t\treq.send(str);\n\t});\n}\n\nvar get = send.bind(send, 'GET');\nvar post = send.bind(send, 'POST');\nvar patch = send.bind(send, 'PATCH');\nvar del = send.bind(send, 'DELETE');\nvar put = send.bind(send, 'PUT');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2h0dHBpZS9kaXN0L2luZGV4LmVzbS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUI7O0FBRW5CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRTtBQUNGOztBQUVPO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFwcGx5KHNyYywgdGFyKSB7XG5cdHRhci5oZWFkZXJzID0gc3JjLmhlYWRlcnMgfHwge307XG5cdHRhci5zdGF0dXNNZXNzYWdlID0gc3JjLnN0YXR1c1RleHQ7XG5cdHRhci5zdGF0dXNDb2RlID0gc3JjLnN0YXR1cztcblx0dGFyLmRhdGEgPSBzcmMucmVzcG9uc2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZW5kKG1ldGhvZCwgdXJpLCBvcHRzKSB7XG5cdHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzLCByZWopIHtcblx0XHRvcHRzID0gb3B0cyB8fCB7fTtcblx0XHR2YXIgaywgc3RyLCB0bXAsIGFycjtcblx0XHR2YXIgcmVxID0gbmV3IFhNTEh0dHBSZXF1ZXN0O1xuXHRcdHZhciBoZWFkZXJzID0gb3B0cy5oZWFkZXJzIHx8IHt9O1xuXG5cdFx0Ly8gSUUgY29tcGF0aWJsZVxuXHRcdGlmIChvcHRzLnRpbWVvdXQpIHJlcS50aW1lb3V0ID0gb3B0cy50aW1lb3V0O1xuXHRcdHJlcS5vbnRpbWVvdXQgPSByZXEub25lcnJvciA9IGZ1bmN0aW9uIChlcnIpIHtcblx0XHRcdGVyci50aW1lb3V0ID0gZXJyLnR5cGUgPT0gJ3RpbWVvdXQnO1xuXHRcdFx0cmVqKGVycik7XG5cdFx0fVxuXG5cdFx0cmVxLm9wZW4obWV0aG9kLCB1cmkpO1xuXG5cdFx0cmVxLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdGFyciA9IHJlcS5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKS50cmltKCkuc3BsaXQoL1tcXHJcXG5dKy8pO1xuXHRcdFx0YXBwbHkocmVxLCByZXEpOyAvLz0+IHJlcS5oZWFkZXJzXG5cblx0XHRcdHdoaWxlICh0bXAgPSBhcnIuc2hpZnQoKSkge1xuXHRcdFx0XHR0bXAgPSB0bXAuc3BsaXQoJzogJyk7XG5cdFx0XHRcdHJlcS5oZWFkZXJzW3RtcC5zaGlmdCgpLnRvTG93ZXJDYXNlKCldID0gdG1wLmpvaW4oJzogJyk7XG5cdFx0XHR9XG5cblx0XHRcdHRtcCA9IHJlcS5oZWFkZXJzWydjb250ZW50LXR5cGUnXTtcblx0XHRcdGlmICh0bXAgJiYgISF+dG1wLmluZGV4T2YoJ2FwcGxpY2F0aW9uL2pzb24nKSkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdHJlcS5kYXRhID0gSlNPTi5wYXJzZShyZXEuZGF0YSwgb3B0cy5yZXZpdmVyKTtcblx0XHRcdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRcdFx0YXBwbHkocmVxLCBlcnIpO1xuXHRcdFx0XHRcdHJldHVybiByZWooZXJyKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQocmVxLnN0YXR1cyA+PSA0MDAgPyByZWogOiByZXMpKHJlcSk7XG5cdFx0fTtcblxuXHRcdGlmICgoc3RyID0gb3B0cy5ib2R5KSAmJiB0eXBlb2Ygc3RyID09ICdvYmplY3QnKSB7XG5cdFx0XHRoZWFkZXJzWydjb250ZW50LXR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJztcblx0XHRcdHN0ciA9IEpTT04uc3RyaW5naWZ5KHN0cik7XG5cdFx0fVxuXG5cdFx0cmVxLndpdGhDcmVkZW50aWFscyA9ICEhb3B0cy53aXRoQ3JlZGVudGlhbHM7XG5cblx0XHRmb3IgKGsgaW4gaGVhZGVycykge1xuXHRcdFx0cmVxLnNldFJlcXVlc3RIZWFkZXIoaywgaGVhZGVyc1trXSk7XG5cdFx0fVxuXG5cdFx0cmVxLnNlbmQoc3RyKTtcblx0fSk7XG59XG5cbmV4cG9ydCB2YXIgZ2V0ID0gc2VuZC5iaW5kKHNlbmQsICdHRVQnKTtcbmV4cG9ydCB2YXIgcG9zdCA9IHNlbmQuYmluZChzZW5kLCAnUE9TVCcpO1xuZXhwb3J0IHZhciBwYXRjaCA9IHNlbmQuYmluZChzZW5kLCAnUEFUQ0gnKTtcbmV4cG9ydCB2YXIgZGVsID0gc2VuZC5iaW5kKHNlbmQsICdERUxFVEUnKTtcbmV4cG9ydCB2YXIgcHV0ID0gc2VuZC5iaW5kKHNlbmQsICdQVVQnKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n")},function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nvar msgpack = __importStar(__webpack_require__(4));\nvar strong_events_1 = __webpack_require__(31);\nvar Connection_1 = __webpack_require__(32);\nvar Serializer_1 = __webpack_require__(8);\nvar Protocol_1 = __webpack_require__(9);\nvar Room = /** @class */ (function () {\n    function Room(name, rootSchema) {\n        var _this = this;\n        // Public signals\n        this.onJoin = strong_events_1.createSignal();\n        this.onStateChange = strong_events_1.createSignal();\n        this.onMessage = strong_events_1.createSignal();\n        this.onError = strong_events_1.createSignal();\n        this.onLeave = strong_events_1.createSignal();\n        this.hasJoined = false;\n        this.id = null;\n        this.name = name;\n        if (rootSchema) {\n            this.serializer = new (Serializer_1.getSerializer("schema"));\n            this.rootSchema = rootSchema;\n            this.serializer.state = new rootSchema();\n        }\n        else {\n            // TODO: remove default serializer. it should arrive only after JOIN_ROOM.\n            this.serializer = new (Serializer_1.getSerializer("fossil-delta"));\n        }\n        this.onError(function (message) { return console.error(message); });\n        this.onLeave(function () { return _this.removeAllListeners(); });\n    }\n    Room.prototype.connect = function (endpoint) {\n        var _this = this;\n        this.connection = new Connection_1.Connection(endpoint, false);\n        this.connection.reconnectEnabled = false;\n        this.connection.onmessage = this.onMessageCallback.bind(this);\n        this.connection.onclose = function (e) {\n            if (!_this.hasJoined) {\n                console.error("Room connection was closed unexpectedly (" + e.code + "): " + e.reason);\n                _this.onError.invoke(e.reason);\n                return;\n            }\n            _this.onLeave.invoke(e.code);\n        };\n        this.connection.onerror = function (e) {\n            console.warn("Room, onError (" + e.code + "): " + e.reason);\n            _this.onError.invoke(e.reason);\n        };\n        this.connection.open();\n    };\n    Room.prototype.leave = function (consented) {\n        if (consented === void 0) { consented = true; }\n        if (this.connection) {\n            if (consented) {\n                this.connection.send([Protocol_1.Protocol.LEAVE_ROOM]);\n            }\n            else {\n                this.connection.close();\n            }\n        }\n        else {\n            this.onLeave.invoke(4000); // "consented" code\n        }\n    };\n    Room.prototype.send = function (data) {\n        this.connection.send([Protocol_1.Protocol.ROOM_DATA, data]);\n    };\n    Object.defineProperty(Room.prototype, "state", {\n        get: function () {\n            return this.serializer.getState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // TODO: deprecate / move somewhere else\n    // this method is useful only for FossilDeltaSerializer\n    Room.prototype.listen = function (segments, callback, immediate) {\n        if (this.serializerId === "schema") {\n            console.error("\'" + this.serializerId + "\' serializer doesn\'t support .listen() method.");\n            return;\n        }\n        else if (!this.serializerId) {\n            console.warn("room.Listen() should be called after room.onJoin has been called (DEPRECATION WARNING)");\n        }\n        return this.serializer.api.listen(segments, callback, immediate);\n    };\n    // TODO: deprecate / move somewhere else\n    // this method is useful only for FossilDeltaSerializer\n    Room.prototype.removeListener = function (listener) {\n        return this.serializer.api.removeListener(listener);\n    };\n    Room.prototype.removeAllListeners = function () {\n        if (this.serializer) {\n            this.serializer.teardown();\n        }\n        this.onJoin.clear();\n        this.onStateChange.clear();\n        this.onMessage.clear();\n        this.onError.clear();\n        this.onLeave.clear();\n    };\n    Room.prototype.onMessageCallback = function (event) {\n        var bytes = Array.from(new Uint8Array(event.data));\n        var code = bytes[0];\n        if (code === Protocol_1.Protocol.JOIN_ROOM) {\n            var offset = 1;\n            this.serializerId = Protocol_1.utf8Read(bytes, offset);\n            offset += Protocol_1.utf8Length(this.serializerId);\n            // get serializer implementation\n            var serializer = Serializer_1.getSerializer(this.serializerId);\n            if (!serializer) {\n                throw new Error("missing serializer: " + this.serializerId);\n            }\n            // TODO: remove this check\n            if (this.serializerId !== "fossil-delta" && !this.rootSchema) {\n                this.serializer = new serializer();\n            }\n            if (bytes.length > offset && this.serializer.handshake) {\n                this.serializer.handshake(bytes, { offset: 1 });\n            }\n            this.hasJoined = true;\n            this.onJoin.invoke();\n            // acknowledge successfull JOIN_ROOM\n            this.connection.send([Protocol_1.Protocol.JOIN_ROOM]);\n        }\n        else if (code === Protocol_1.Protocol.JOIN_ERROR) {\n            this.onError.invoke(Protocol_1.utf8Read(bytes, 1));\n        }\n        else if (code === Protocol_1.Protocol.LEAVE_ROOM) {\n            this.leave();\n        }\n        else if (code === Protocol_1.Protocol.ROOM_DATA_SCHEMA) {\n            var context_1 = this.serializer.getState().constructor._context;\n            var type = context_1.get(bytes[1]);\n            var message = new type();\n            message.decode(bytes, { offset: 2 });\n            this.onMessage.invoke(message);\n        }\n        else if (code === Protocol_1.Protocol.ROOM_STATE) {\n            bytes.shift(); // drop `code` byte\n            this.setState(bytes);\n        }\n        else if (code === Protocol_1.Protocol.ROOM_STATE_PATCH) {\n            bytes.shift(); // drop `code` byte\n            this.patch(bytes);\n        }\n        else if (code === Protocol_1.Protocol.ROOM_DATA) {\n            this.onMessage.invoke(msgpack.decode(event.data, 1));\n        }\n    };\n    Room.prototype.setState = function (encodedState) {\n        this.serializer.setState(encodedState);\n        this.onStateChange.invoke(this.serializer.getState());\n    };\n    Room.prototype.patch = function (binaryPatch) {\n        this.serializer.patch(binaryPatch);\n        this.onStateChange.invoke(this.serializer.getState());\n    };\n    return Room;\n}());\nexports.Room = Room;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n')},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar serializers = {};\nfunction registerSerializer(id, serializer) {\n    serializers[id] = serializer;\n}\nexports.registerSerializer = registerSerializer;\nfunction getSerializer(id) {\n    return serializers[id];\n}\nexports.getSerializer = getSerializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9zZXJpYWxpemVyL1NlcmlhbGl6ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHNlcmlhbGl6ZXJzID0ge307XG5mdW5jdGlvbiByZWdpc3RlclNlcmlhbGl6ZXIoaWQsIHNlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVyc1tpZF0gPSBzZXJpYWxpemVyO1xufVxuZXhwb3J0cy5yZWdpc3RlclNlcmlhbGl6ZXIgPSByZWdpc3RlclNlcmlhbGl6ZXI7XG5mdW5jdGlvbiBnZXRTZXJpYWxpemVyKGlkKSB7XG4gICAgcmV0dXJuIHNlcmlhbGl6ZXJzW2lkXTtcbn1cbmV4cG9ydHMuZ2V0U2VyaWFsaXplciA9IGdldFNlcmlhbGl6ZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n')},function(module,exports,__webpack_require__){"use strict";eval('\n// Use codes between 0~127 for lesser throughput (1 byte)\nObject.defineProperty(exports, "__esModule", { value: true });\nvar Protocol;\n(function (Protocol) {\n    // Room-related (10~19)\n    Protocol[Protocol["HANDSHAKE"] = 9] = "HANDSHAKE";\n    Protocol[Protocol["JOIN_ROOM"] = 10] = "JOIN_ROOM";\n    Protocol[Protocol["JOIN_ERROR"] = 11] = "JOIN_ERROR";\n    Protocol[Protocol["LEAVE_ROOM"] = 12] = "LEAVE_ROOM";\n    Protocol[Protocol["ROOM_DATA"] = 13] = "ROOM_DATA";\n    Protocol[Protocol["ROOM_STATE"] = 14] = "ROOM_STATE";\n    Protocol[Protocol["ROOM_STATE_PATCH"] = 15] = "ROOM_STATE_PATCH";\n    Protocol[Protocol["ROOM_DATA_SCHEMA"] = 16] = "ROOM_DATA_SCHEMA";\n})(Protocol = exports.Protocol || (exports.Protocol = {}));\nfunction utf8Read(view, offset) {\n    var length = view[offset++];\n    var string = \'\', chr = 0;\n    for (var i = offset, end = offset + length; i < end; i++) {\n        var byte = view[i];\n        if ((byte & 0x80) === 0x00) {\n            string += String.fromCharCode(byte);\n            continue;\n        }\n        if ((byte & 0xe0) === 0xc0) {\n            string += String.fromCharCode(((byte & 0x1f) << 6) |\n                (view[++i] & 0x3f));\n            continue;\n        }\n        if ((byte & 0xf0) === 0xe0) {\n            string += String.fromCharCode(((byte & 0x0f) << 12) |\n                ((view[++i] & 0x3f) << 6) |\n                ((view[++i] & 0x3f) << 0));\n            continue;\n        }\n        if ((byte & 0xf8) === 0xf0) {\n            chr = ((byte & 0x07) << 18) |\n                ((view[++i] & 0x3f) << 12) |\n                ((view[++i] & 0x3f) << 6) |\n                ((view[++i] & 0x3f) << 0);\n            if (chr >= 0x010000) { // surrogate pair\n                chr -= 0x010000;\n                string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n            }\n            else {\n                string += String.fromCharCode(chr);\n            }\n            continue;\n        }\n        throw new Error(\'Invalid byte \' + byte.toString(16));\n    }\n    return string;\n}\nexports.utf8Read = utf8Read;\n// Faster for short strings than Buffer.byteLength\nfunction utf8Length(str) {\n    if (str === void 0) { str = \'\'; }\n    var c = 0;\n    var length = 0;\n    for (var i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length + 1;\n}\nexports.utf8Length = utf8Length;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9Qcm90b2NvbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsdURBQXVEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxTQUFTO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0EsbUNBQW1DLE9BQU87QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIFVzZSBjb2RlcyBiZXR3ZWVuIDB+MTI3IGZvciBsZXNzZXIgdGhyb3VnaHB1dCAoMSBieXRlKVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFByb3RvY29sO1xuKGZ1bmN0aW9uIChQcm90b2NvbCkge1xuICAgIC8vIFJvb20tcmVsYXRlZCAoMTB+MTkpXG4gICAgUHJvdG9jb2xbUHJvdG9jb2xbXCJIQU5EU0hBS0VcIl0gPSA5XSA9IFwiSEFORFNIQUtFXCI7XG4gICAgUHJvdG9jb2xbUHJvdG9jb2xbXCJKT0lOX1JPT01cIl0gPSAxMF0gPSBcIkpPSU5fUk9PTVwiO1xuICAgIFByb3RvY29sW1Byb3RvY29sW1wiSk9JTl9FUlJPUlwiXSA9IDExXSA9IFwiSk9JTl9FUlJPUlwiO1xuICAgIFByb3RvY29sW1Byb3RvY29sW1wiTEVBVkVfUk9PTVwiXSA9IDEyXSA9IFwiTEVBVkVfUk9PTVwiO1xuICAgIFByb3RvY29sW1Byb3RvY29sW1wiUk9PTV9EQVRBXCJdID0gMTNdID0gXCJST09NX0RBVEFcIjtcbiAgICBQcm90b2NvbFtQcm90b2NvbFtcIlJPT01fU1RBVEVcIl0gPSAxNF0gPSBcIlJPT01fU1RBVEVcIjtcbiAgICBQcm90b2NvbFtQcm90b2NvbFtcIlJPT01fU1RBVEVfUEFUQ0hcIl0gPSAxNV0gPSBcIlJPT01fU1RBVEVfUEFUQ0hcIjtcbiAgICBQcm90b2NvbFtQcm90b2NvbFtcIlJPT01fREFUQV9TQ0hFTUFcIl0gPSAxNl0gPSBcIlJPT01fREFUQV9TQ0hFTUFcIjtcbn0pKFByb3RvY29sID0gZXhwb3J0cy5Qcm90b2NvbCB8fCAoZXhwb3J0cy5Qcm90b2NvbCA9IHt9KSk7XG5mdW5jdGlvbiB1dGY4UmVhZCh2aWV3LCBvZmZzZXQpIHtcbiAgICB2YXIgbGVuZ3RoID0gdmlld1tvZmZzZXQrK107XG4gICAgdmFyIHN0cmluZyA9ICcnLCBjaHIgPSAwO1xuICAgIGZvciAodmFyIGkgPSBvZmZzZXQsIGVuZCA9IG9mZnNldCArIGxlbmd0aDsgaSA8IGVuZDsgaSsrKSB7XG4gICAgICAgIHZhciBieXRlID0gdmlld1tpXTtcbiAgICAgICAgaWYgKChieXRlICYgMHg4MCkgPT09IDB4MDApIHtcbiAgICAgICAgICAgIHN0cmluZyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ5dGUpO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChieXRlICYgMHhlMCkgPT09IDB4YzApIHtcbiAgICAgICAgICAgIHN0cmluZyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKCgoYnl0ZSAmIDB4MWYpIDw8IDYpIHxcbiAgICAgICAgICAgICAgICAodmlld1srK2ldICYgMHgzZikpO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChieXRlICYgMHhmMCkgPT09IDB4ZTApIHtcbiAgICAgICAgICAgIHN0cmluZyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKCgoYnl0ZSAmIDB4MGYpIDw8IDEyKSB8XG4gICAgICAgICAgICAgICAgKCh2aWV3WysraV0gJiAweDNmKSA8PCA2KSB8XG4gICAgICAgICAgICAgICAgKCh2aWV3WysraV0gJiAweDNmKSA8PCAwKSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKGJ5dGUgJiAweGY4KSA9PT0gMHhmMCkge1xuICAgICAgICAgICAgY2hyID0gKChieXRlICYgMHgwNykgPDwgMTgpIHxcbiAgICAgICAgICAgICAgICAoKHZpZXdbKytpXSAmIDB4M2YpIDw8IDEyKSB8XG4gICAgICAgICAgICAgICAgKCh2aWV3WysraV0gJiAweDNmKSA8PCA2KSB8XG4gICAgICAgICAgICAgICAgKCh2aWV3WysraV0gJiAweDNmKSA8PCAwKTtcbiAgICAgICAgICAgIGlmIChjaHIgPj0gMHgwMTAwMDApIHsgLy8gc3Vycm9nYXRlIHBhaXJcbiAgICAgICAgICAgICAgICBjaHIgLT0gMHgwMTAwMDA7XG4gICAgICAgICAgICAgICAgc3RyaW5nICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoKGNociA+Pj4gMTApICsgMHhEODAwLCAoY2hyICYgMHgzRkYpICsgMHhEQzAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHN0cmluZyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGNocik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgYnl0ZSAnICsgYnl0ZS50b1N0cmluZygxNikpO1xuICAgIH1cbiAgICByZXR1cm4gc3RyaW5nO1xufVxuZXhwb3J0cy51dGY4UmVhZCA9IHV0ZjhSZWFkO1xuLy8gRmFzdGVyIGZvciBzaG9ydCBzdHJpbmdzIHRoYW4gQnVmZmVyLmJ5dGVMZW5ndGhcbmZ1bmN0aW9uIHV0ZjhMZW5ndGgoc3RyKSB7XG4gICAgaWYgKHN0ciA9PT0gdm9pZCAwKSB7IHN0ciA9ICcnOyB9XG4gICAgdmFyIGMgPSAwO1xuICAgIHZhciBsZW5ndGggPSAwO1xuICAgIGZvciAodmFyIGkgPSAwLCBsID0gc3RyLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBjID0gc3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIGlmIChjIDwgMHg4MCkge1xuICAgICAgICAgICAgbGVuZ3RoICs9IDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYyA8IDB4ODAwKSB7XG4gICAgICAgICAgICBsZW5ndGggKz0gMjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjIDwgMHhkODAwIHx8IGMgPj0gMHhlMDAwKSB7XG4gICAgICAgICAgICBsZW5ndGggKz0gMztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgIGxlbmd0aCArPSA0O1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBsZW5ndGggKyAxO1xufVxuZXhwb3J0cy51dGY4TGVuZ3RoID0gdXRmOExlbmd0aDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9\n')},function(module,exports,__webpack_require__){"use strict";eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar http = __importStar(__webpack_require__(6));\nvar Storage_1 = __webpack_require__(36);\nvar TOKEN_STORAGE = \"colyseus-auth-token\";\nvar Platform;\n(function (Platform) {\n    Platform[\"ios\"] = \"ios\";\n    Platform[\"android\"] = \"android\";\n})(Platform = exports.Platform || (exports.Platform = {}));\nvar Auth = /** @class */ (function () {\n    function Auth(endpoint) {\n        var _this = this;\n        this._id = undefined;\n        this.username = undefined;\n        this.displayName = undefined;\n        this.avatarUrl = undefined;\n        this.isAnonymous = undefined;\n        this.email = undefined;\n        this.lang = undefined;\n        this.location = undefined;\n        this.timezone = undefined;\n        this.metadata = undefined;\n        this.devices = undefined;\n        this.facebookId = undefined;\n        this.twitterId = undefined;\n        this.googleId = undefined;\n        this.gameCenterId = undefined;\n        this.steamId = undefined;\n        this.friendIds = undefined;\n        this.blockedUserIds = undefined;\n        this.createdAt = undefined;\n        this.updatedAt = undefined;\n        // auth token\n        this.token = undefined;\n        this.endpoint = endpoint.replace(\"ws\", \"http\");\n        Storage_1.getItem(TOKEN_STORAGE, function (token) { return _this.token = token; });\n    }\n    Object.defineProperty(Auth.prototype, \"hasToken\", {\n        get: function () {\n            return !!this.token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Auth.prototype.login = function (options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var queryParams, data, attr;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryParams = Object.assign({}, options);\n                        if (this.hasToken) {\n                            queryParams.token = this.token;\n                        }\n                        return [4 /*yield*/, this.request('post', '/auth', queryParams)];\n                    case 1:\n                        data = _a.sent();\n                        // set & cache token\n                        this.token = data.token;\n                        Storage_1.setItem(TOKEN_STORAGE, this.token);\n                        for (attr in data) {\n                            if (this.hasOwnProperty(attr)) {\n                                this[attr] = data[attr];\n                            }\n                        }\n                        this.registerPingService();\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    Auth.prototype.save = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.request('put', '/auth', {}, {\n                            username: this.username,\n                            displayName: this.displayName,\n                            avatarUrl: this.avatarUrl,\n                            lang: this.lang,\n                            location: this.location,\n                            timezone: this.timezone,\n                        })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    Auth.prototype.getFriends = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.request('get', '/friends/all')];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    Auth.prototype.getOnlineFriends = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.request('get', '/friends/online')];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    Auth.prototype.getFriendRequests = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.request('get', '/friends/requests')];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    Auth.prototype.sendFriendRequest = function (friendId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.request('post', '/friends/requests', { userId: friendId })];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    Auth.prototype.acceptFriendRequest = function (friendId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.request('put', '/friends/requests', { userId: friendId })];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    Auth.prototype.declineFriendRequest = function (friendId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.request('del', '/friends/requests', { userId: friendId })];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    Auth.prototype.blockUser = function (friendId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.request('post', '/friends/block', { userId: friendId })];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    Auth.prototype.unblockUser = function (friendId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.request('put', '/friends/block', { userId: friendId })];\n                    case 1: return [2 /*return*/, (_a.sent())];\n                }\n            });\n        });\n    };\n    Auth.prototype.request = function (method, segments, query, body, headers) {\n        if (query === void 0) { query = {}; }\n        if (headers === void 0) { headers = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var queryParams, name_1, queryString, opts;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        headers['Accept'] = 'application/json';\n                        if (this.hasToken) {\n                            headers['Authorization'] = 'Bearer ' + this.token;\n                        }\n                        queryParams = [];\n                        for (name_1 in query) {\n                            queryParams.push(name_1 + \"=\" + query[name_1]);\n                        }\n                        queryString = (queryParams.length > 0)\n                            ? \"?\" + queryParams.join(\"&\")\n                            : '';\n                        opts = { headers: headers };\n                        if (body) {\n                            opts.body = body;\n                        }\n                        return [4 /*yield*/, http[method](\"\" + this.endpoint + segments + queryString, opts)];\n                    case 1: return [2 /*return*/, (_a.sent()).data];\n                }\n            });\n        });\n    };\n    Auth.prototype.logout = function () {\n        this.token = undefined;\n        Storage_1.removeItem(TOKEN_STORAGE);\n        this.unregisterPingService();\n    };\n    Auth.prototype.registerPingService = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = 15000; }\n        this.unregisterPingService();\n        this.keepOnlineInterval = setInterval(function () { return _this.request('get', '/auth'); }, timeout);\n    };\n    Auth.prototype.unregisterPingService = function () {\n        clearInterval(this.keepOnlineInterval);\n    };\n    return Auth;\n}());\nexports.Auth = Auth;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9BdXRoLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLG1DQUFtQyxNQUFNLDZCQUE2QixFQUFFLFlBQVksV0FBVyxFQUFFO0FBQ2pHLGtDQUFrQyxNQUFNLGlDQUFpQyxFQUFFLFlBQVksV0FBVyxFQUFFO0FBQ3BHLCtCQUErQixpRUFBaUUsdUJBQXVCLEVBQUUsNEJBQTRCO0FBQ3JKO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxhQUFhLDZCQUE2QiwwQkFBMEIsYUFBYSxFQUFFLHFCQUFxQjtBQUN4RyxnQkFBZ0IscURBQXFELG9FQUFvRSxhQUFhLEVBQUU7QUFDeEosc0JBQXNCLHNCQUFzQixxQkFBcUIsR0FBRztBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsa0NBQWtDLFNBQVM7QUFDM0Msa0NBQWtDLFdBQVcsVUFBVTtBQUN2RCx5Q0FBeUMsY0FBYztBQUN2RDtBQUNBLDZHQUE2RyxPQUFPLFVBQVU7QUFDOUgsZ0ZBQWdGLGlCQUFpQixPQUFPO0FBQ3hHLHdEQUF3RCxnQkFBZ0IsUUFBUSxPQUFPO0FBQ3ZGLDhDQUE4QyxnQkFBZ0IsZ0JBQWdCLE9BQU87QUFDckY7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBLFNBQVMsWUFBWSxhQUFhLE9BQU8sRUFBRSxVQUFVLFdBQVc7QUFDaEUsbUNBQW1DLFNBQVM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsd0JBQXdCLG1CQUFPLENBQUMsQ0FBUTtBQUN4QyxnQkFBZ0IsbUJBQU8sQ0FBQyxFQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHVEQUF1RDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELDRCQUE0QixFQUFFO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxpQ0FBaUMsY0FBYztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNEO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRkFBZ0Y7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEZBQTRGLG1CQUFtQjtBQUMvRztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkZBQTJGLG1CQUFtQjtBQUM5RztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkZBQTJGLG1CQUFtQjtBQUM5RztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUZBQXlGLG1CQUFtQjtBQUM1RztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0ZBQXdGLG1CQUFtQjtBQUMzRztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsK0JBQStCLFlBQVk7QUFDM0MsaUNBQWlDLGNBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGlCQUFpQjtBQUNsRDtBQUNBLDJEQUEyRCxzQ0FBc0MsRUFBRTtBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6IjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHJlc3VsdC52YWx1ZSk7IH0pLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIHJlc3VsdFtrXSA9IG1vZFtrXTtcbiAgICByZXN1bHRbXCJkZWZhdWx0XCJdID0gbW9kO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGh0dHAgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcImh0dHBpZVwiKSk7XG52YXIgU3RvcmFnZV8xID0gcmVxdWlyZShcIi4vU3RvcmFnZVwiKTtcbnZhciBUT0tFTl9TVE9SQUdFID0gXCJjb2x5c2V1cy1hdXRoLXRva2VuXCI7XG52YXIgUGxhdGZvcm07XG4oZnVuY3Rpb24gKFBsYXRmb3JtKSB7XG4gICAgUGxhdGZvcm1bXCJpb3NcIl0gPSBcImlvc1wiO1xuICAgIFBsYXRmb3JtW1wiYW5kcm9pZFwiXSA9IFwiYW5kcm9pZFwiO1xufSkoUGxhdGZvcm0gPSBleHBvcnRzLlBsYXRmb3JtIHx8IChleHBvcnRzLlBsYXRmb3JtID0ge30pKTtcbnZhciBBdXRoID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEF1dGgoZW5kcG9pbnQpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5faWQgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMudXNlcm5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuZGlzcGxheU5hbWUgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuYXZhdGFyVXJsID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmlzQW5vbnltb3VzID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmVtYWlsID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmxhbmcgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMubG9jYXRpb24gPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMudGltZXpvbmUgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMubWV0YWRhdGEgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuZGV2aWNlcyA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5mYWNlYm9va0lkID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnR3aXR0ZXJJZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5nb29nbGVJZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5nYW1lQ2VudGVySWQgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuc3RlYW1JZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5mcmllbmRJZHMgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuYmxvY2tlZFVzZXJJZHMgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuY3JlYXRlZEF0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnVwZGF0ZWRBdCA9IHVuZGVmaW5lZDtcbiAgICAgICAgLy8gYXV0aCB0b2tlblxuICAgICAgICB0aGlzLnRva2VuID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmVuZHBvaW50ID0gZW5kcG9pbnQucmVwbGFjZShcIndzXCIsIFwiaHR0cFwiKTtcbiAgICAgICAgU3RvcmFnZV8xLmdldEl0ZW0oVE9LRU5fU1RPUkFHRSwgZnVuY3Rpb24gKHRva2VuKSB7IHJldHVybiBfdGhpcy50b2tlbiA9IHRva2VuOyB9KTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEF1dGgucHJvdG90eXBlLCBcImhhc1Rva2VuXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gISF0aGlzLnRva2VuO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBBdXRoLnByb3RvdHlwZS5sb2dpbiA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBxdWVyeVBhcmFtcywgZGF0YSwgYXR0cjtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1zID0gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5oYXNUb2tlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1zLnRva2VuID0gdGhpcy50b2tlbjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMucmVxdWVzdCgncG9zdCcsICcvYXV0aCcsIHF1ZXJ5UGFyYW1zKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBzZXQgJiBjYWNoZSB0b2tlblxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50b2tlbiA9IGRhdGEudG9rZW47XG4gICAgICAgICAgICAgICAgICAgICAgICBTdG9yYWdlXzEuc2V0SXRlbShUT0tFTl9TVE9SQUdFLCB0aGlzLnRva2VuKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoYXR0ciBpbiBkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaGFzT3duUHJvcGVydHkoYXR0cikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1thdHRyXSA9IGRhdGFbYXR0cl07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWdpc3RlclBpbmdTZXJ2aWNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgdGhpc107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQXV0aC5wcm90b3R5cGUuc2F2ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLnJlcXVlc3QoJ3B1dCcsICcvYXV0aCcsIHt9LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6IHRoaXMuZGlzcGxheU5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXZhdGFyVXJsOiB0aGlzLmF2YXRhclVybCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5nOiB0aGlzLmxhbmcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb246IHRoaXMubG9jYXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZXpvbmU6IHRoaXMudGltZXpvbmUsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCB0aGlzXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBBdXRoLnByb3RvdHlwZS5nZXRGcmllbmRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMucmVxdWVzdCgnZ2V0JywgJy9mcmllbmRzL2FsbCcpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gWzIgLypyZXR1cm4qLywgKF9hLnNlbnQoKSldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEF1dGgucHJvdG90eXBlLmdldE9ubGluZUZyaWVuZHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5yZXF1ZXN0KCdnZXQnLCAnL2ZyaWVuZHMvb25saW5lJyldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6IHJldHVybiBbMiAvKnJldHVybiovLCAoX2Euc2VudCgpKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQXV0aC5wcm90b3R5cGUuZ2V0RnJpZW5kUmVxdWVzdHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5yZXF1ZXN0KCdnZXQnLCAnL2ZyaWVuZHMvcmVxdWVzdHMnKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIChfYS5zZW50KCkpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBBdXRoLnByb3RvdHlwZS5zZW5kRnJpZW5kUmVxdWVzdCA9IGZ1bmN0aW9uIChmcmllbmRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMucmVxdWVzdCgncG9zdCcsICcvZnJpZW5kcy9yZXF1ZXN0cycsIHsgdXNlcklkOiBmcmllbmRJZCB9KV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIChfYS5zZW50KCkpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBBdXRoLnByb3RvdHlwZS5hY2NlcHRGcmllbmRSZXF1ZXN0ID0gZnVuY3Rpb24gKGZyaWVuZElkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5yZXF1ZXN0KCdwdXQnLCAnL2ZyaWVuZHMvcmVxdWVzdHMnLCB7IHVzZXJJZDogZnJpZW5kSWQgfSldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6IHJldHVybiBbMiAvKnJldHVybiovLCAoX2Euc2VudCgpKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQXV0aC5wcm90b3R5cGUuZGVjbGluZUZyaWVuZFJlcXVlc3QgPSBmdW5jdGlvbiAoZnJpZW5kSWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLnJlcXVlc3QoJ2RlbCcsICcvZnJpZW5kcy9yZXF1ZXN0cycsIHsgdXNlcklkOiBmcmllbmRJZCB9KV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIChfYS5zZW50KCkpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBBdXRoLnByb3RvdHlwZS5ibG9ja1VzZXIgPSBmdW5jdGlvbiAoZnJpZW5kSWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLnJlcXVlc3QoJ3Bvc3QnLCAnL2ZyaWVuZHMvYmxvY2snLCB7IHVzZXJJZDogZnJpZW5kSWQgfSldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6IHJldHVybiBbMiAvKnJldHVybiovLCAoX2Euc2VudCgpKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQXV0aC5wcm90b3R5cGUudW5ibG9ja1VzZXIgPSBmdW5jdGlvbiAoZnJpZW5kSWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLnJlcXVlc3QoJ3B1dCcsICcvZnJpZW5kcy9ibG9jaycsIHsgdXNlcklkOiBmcmllbmRJZCB9KV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIChfYS5zZW50KCkpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBBdXRoLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gKG1ldGhvZCwgc2VnbWVudHMsIHF1ZXJ5LCBib2R5LCBoZWFkZXJzKSB7XG4gICAgICAgIGlmIChxdWVyeSA9PT0gdm9pZCAwKSB7IHF1ZXJ5ID0ge307IH1cbiAgICAgICAgaWYgKGhlYWRlcnMgPT09IHZvaWQgMCkgeyBoZWFkZXJzID0ge307IH1cbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHF1ZXJ5UGFyYW1zLCBuYW1lXzEsIHF1ZXJ5U3RyaW5nLCBvcHRzO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1snQWNjZXB0J10gPSAnYXBwbGljYXRpb24vanNvbic7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5oYXNUb2tlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnNbJ0F1dGhvcml6YXRpb24nXSA9ICdCZWFyZXIgJyArIHRoaXMudG9rZW47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBxdWVyeVBhcmFtcyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChuYW1lXzEgaW4gcXVlcnkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWVyeVBhcmFtcy5wdXNoKG5hbWVfMSArIFwiPVwiICsgcXVlcnlbbmFtZV8xXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBxdWVyeVN0cmluZyA9IChxdWVyeVBhcmFtcy5sZW5ndGggPiAwKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gXCI/XCIgKyBxdWVyeVBhcmFtcy5qb2luKFwiJlwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJyc7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcHRzID0geyBoZWFkZXJzOiBoZWFkZXJzIH07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYm9keSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdHMuYm9keSA9IGJvZHk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCBodHRwW21ldGhvZF0oXCJcIiArIHRoaXMuZW5kcG9pbnQgKyBzZWdtZW50cyArIHF1ZXJ5U3RyaW5nLCBvcHRzKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIChfYS5zZW50KCkpLmRhdGFdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEF1dGgucHJvdG90eXBlLmxvZ291dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy50b2tlbiA9IHVuZGVmaW5lZDtcbiAgICAgICAgU3RvcmFnZV8xLnJlbW92ZUl0ZW0oVE9LRU5fU1RPUkFHRSk7XG4gICAgICAgIHRoaXMudW5yZWdpc3RlclBpbmdTZXJ2aWNlKCk7XG4gICAgfTtcbiAgICBBdXRoLnByb3RvdHlwZS5yZWdpc3RlclBpbmdTZXJ2aWNlID0gZnVuY3Rpb24gKHRpbWVvdXQpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKHRpbWVvdXQgPT09IHZvaWQgMCkgeyB0aW1lb3V0ID0gMTUwMDA7IH1cbiAgICAgICAgdGhpcy51bnJlZ2lzdGVyUGluZ1NlcnZpY2UoKTtcbiAgICAgICAgdGhpcy5rZWVwT25saW5lSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5yZXF1ZXN0KCdnZXQnLCAnL2F1dGgnKTsgfSwgdGltZW91dCk7XG4gICAgfTtcbiAgICBBdXRoLnByb3RvdHlwZS51bnJlZ2lzdGVyUGluZ1NlcnZpY2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5rZWVwT25saW5lSW50ZXJ2YWwpO1xuICAgIH07XG4gICAgcmV0dXJuIEF1dGg7XG59KCkpO1xuZXhwb3J0cy5BdXRoID0gQXV0aDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n")},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar Schema_1 = __webpack_require__(3);\nexports.Schema = Schema_1.Schema;\nvar MapSchema_1 = __webpack_require__(2);\nexports.MapSchema = MapSchema_1.MapSchema;\nvar ArraySchema_1 = __webpack_require__(1);\nexports.ArraySchema = ArraySchema_1.ArraySchema;\n// Utils\nvar utils_1 = __webpack_require__(47);\nexports.dumpChanges = utils_1.dumpChanges;\n// Reflection\nvar Reflection_1 = __webpack_require__(48);\nexports.Reflection = Reflection_1.Reflection;\nexports.ReflectionType = Reflection_1.ReflectionType;\nexports.ReflectionField = Reflection_1.ReflectionField;\nvar annotations_1 = __webpack_require__(14);\n// Annotations\nexports.type = annotations_1.type;\nexports.deprecated = annotations_1.deprecated;\nexports.filter = annotations_1.filter;\nexports.defineTypes = annotations_1.defineTypes;\n// Types\nexports.Context = annotations_1.Context;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0Bjb2x5c2V1cy9zY2hlbWEvbGliL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsZUFBZSxtQkFBTyxDQUFDLENBQVU7QUFDakM7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyxDQUFtQjtBQUM3QztBQUNBLG9CQUFvQixtQkFBTyxDQUFDLENBQXFCO0FBQ2pEO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsRUFBUztBQUMvQjtBQUNBO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsRUFBYztBQUN6QztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQU8sQ0FBQyxFQUFlO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBTY2hlbWFfMSA9IHJlcXVpcmUoXCIuL1NjaGVtYVwiKTtcbmV4cG9ydHMuU2NoZW1hID0gU2NoZW1hXzEuU2NoZW1hO1xudmFyIE1hcFNjaGVtYV8xID0gcmVxdWlyZShcIi4vdHlwZXMvTWFwU2NoZW1hXCIpO1xuZXhwb3J0cy5NYXBTY2hlbWEgPSBNYXBTY2hlbWFfMS5NYXBTY2hlbWE7XG52YXIgQXJyYXlTY2hlbWFfMSA9IHJlcXVpcmUoXCIuL3R5cGVzL0FycmF5U2NoZW1hXCIpO1xuZXhwb3J0cy5BcnJheVNjaGVtYSA9IEFycmF5U2NoZW1hXzEuQXJyYXlTY2hlbWE7XG4vLyBVdGlsc1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmV4cG9ydHMuZHVtcENoYW5nZXMgPSB1dGlsc18xLmR1bXBDaGFuZ2VzO1xuLy8gUmVmbGVjdGlvblxudmFyIFJlZmxlY3Rpb25fMSA9IHJlcXVpcmUoXCIuL1JlZmxlY3Rpb25cIik7XG5leHBvcnRzLlJlZmxlY3Rpb24gPSBSZWZsZWN0aW9uXzEuUmVmbGVjdGlvbjtcbmV4cG9ydHMuUmVmbGVjdGlvblR5cGUgPSBSZWZsZWN0aW9uXzEuUmVmbGVjdGlvblR5cGU7XG5leHBvcnRzLlJlZmxlY3Rpb25GaWVsZCA9IFJlZmxlY3Rpb25fMS5SZWZsZWN0aW9uRmllbGQ7XG52YXIgYW5ub3RhdGlvbnNfMSA9IHJlcXVpcmUoXCIuL2Fubm90YXRpb25zXCIpO1xuLy8gQW5ub3RhdGlvbnNcbmV4cG9ydHMudHlwZSA9IGFubm90YXRpb25zXzEudHlwZTtcbmV4cG9ydHMuZGVwcmVjYXRlZCA9IGFubm90YXRpb25zXzEuZGVwcmVjYXRlZDtcbmV4cG9ydHMuZmlsdGVyID0gYW5ub3RhdGlvbnNfMS5maWx0ZXI7XG5leHBvcnRzLmRlZmluZVR5cGVzID0gYW5ub3RhdGlvbnNfMS5kZWZpbmVUeXBlcztcbi8vIFR5cGVzXG5leHBvcnRzLkNvbnRleHQgPSBhbm5vdGF0aW9uc18xLkNvbnRleHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n')},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.END_OF_STRUCTURE = 0xc1; // (msgpack spec: never used)\nexports.NIL = 0xc0;\nexports.INDEX_CHANGE = 0xd4;\nexports.TYPE_ID = 0xd5;\n//# sourceMappingURL=spec.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0Bjb2x5c2V1cy9zY2hlbWEvbGliL3NwZWMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRU5EX09GX1NUUlVDVFVSRSA9IDB4YzE7IC8vIChtc2dwYWNrIHNwZWM6IG5ldmVyIHVzZWQpXG5leHBvcnRzLk5JTCA9IDB4YzA7XG5leHBvcnRzLklOREVYX0NIQU5HRSA9IDB4ZDQ7XG5leHBvcnRzLlRZUEVfSUQgPSAweGQ1O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BlYy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///12\n')},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar Schema_1 = __webpack_require__(3);\nvar ArraySchema_1 = __webpack_require__(1);\nvar MapSchema_1 = __webpack_require__(2);\nvar ChangeTree = /** @class */ (function () {\n    function ChangeTree(indexes, parentField, parent) {\n        if (indexes === void 0) { indexes = {}; }\n        if (parentField === void 0) { parentField = null; }\n        this.changed = false;\n        this.changes = new Set();\n        this.allChanges = new Set();\n        this.deletedKeys = {};\n        this.fieldIndexes = indexes;\n        this.parent = parent;\n        this.parentField = parentField;\n    }\n    ChangeTree.prototype.change = function (fieldName, isDelete) {\n        if (isDelete === void 0) { isDelete = false; }\n        var fieldIndex = this.fieldIndexes[fieldName];\n        var field = (typeof (fieldIndex) === "number") ? fieldIndex : fieldName;\n        if (!isDelete) {\n            this.changed = true;\n            this.changes.add(field);\n            this.allChanges.add(field);\n        }\n        else if (isDelete) {\n            // if (this.changes.has(field))  {\n            //     /**\n            //      * un-flag a change if item has been added AND removed in the same patch.\n            //      * (https://github.com/colyseus/colyseus-unity3d/issues/103)\n            //      */\n            //     this.changes.delete(field);\n            // } else {\n            this.changed = true;\n            this.changes.add(field);\n            // }\n            // discard all-changes for removed items.\n            this.allChanges.delete(field);\n        }\n        if (this.parent) {\n            this.parent.change(this.parentField);\n        }\n    };\n    ChangeTree.prototype.mapIndex = function (instance, key) {\n        if (typeof instance === "object") {\n            if (!this.indexMap) {\n                this.indexMap = new Map();\n                this.indexChange = new Map();\n            }\n            this.indexMap.set(instance, key);\n        }\n    };\n    ChangeTree.prototype.getIndex = function (instance) {\n        return this.indexMap && this.indexMap.get(instance);\n    };\n    ChangeTree.prototype.deleteIndex = function (instance) {\n        if (typeof instance === "object") {\n            this.deletedKeys[this.indexMap.get(instance)] = true;\n            this.indexMap.delete(instance);\n        }\n    };\n    ChangeTree.prototype.isDeleted = function (key) {\n        return this.deletedKeys[key] !== undefined;\n    };\n    ChangeTree.prototype.mapIndexChange = function (instance, previousKey) {\n        if (typeof instance === "object" && !this.indexChange.has(instance)) {\n            this.indexChange.set(instance, previousKey);\n        }\n    };\n    ChangeTree.prototype.getIndexChange = function (instance) {\n        return this.indexChange && this.indexChange.get(instance);\n    };\n    ChangeTree.prototype.deleteIndexChange = function (instance) {\n        if (typeof instance === "object") {\n            this.indexChange.delete(instance);\n        }\n    };\n    ChangeTree.prototype.changeAll = function (obj) {\n        if (obj instanceof Schema_1.Schema) {\n            var schema = obj[\'_schema\'];\n            for (var field in schema) {\n                // ensure ArraySchema and MapSchema already initialized\n                // on its structure have a valid parent.\n                if ((obj[field] instanceof Schema_1.Schema ||\n                    obj[field] instanceof ArraySchema_1.ArraySchema ||\n                    obj[field] instanceof MapSchema_1.MapSchema) &&\n                    !obj[field].$changes.parent.parent) {\n                    obj[field].$changes.parent = this;\n                }\n                if (obj[field] !== undefined) {\n                    this.change(field);\n                }\n            }\n        }\n        else {\n            var keys = Object.keys(obj);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (obj[key] !== undefined) {\n                    this.change(key);\n                }\n            }\n        }\n    };\n    ChangeTree.prototype.discard = function () {\n        this.changed = false;\n        this.changes.clear();\n        this.deletedKeys = {};\n        if (this.indexChange) {\n            this.indexChange.clear();\n        }\n    };\n    return ChangeTree;\n}());\nexports.ChangeTree = ChangeTree;\n//# sourceMappingURL=ChangeTree.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0Bjb2x5c2V1cy9zY2hlbWEvbGliL0NoYW5nZVRyZWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxlQUFlLG1CQUFPLENBQUMsQ0FBVTtBQUNqQyxvQkFBb0IsbUJBQU8sQ0FBQyxDQUFxQjtBQUNqRCxrQkFBa0IsbUJBQU8sQ0FBQyxDQUFtQjtBQUM3QztBQUNBO0FBQ0EsaUNBQWlDLGNBQWM7QUFDL0MscUNBQXFDLG9CQUFvQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msa0JBQWtCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLG9CQUFvQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBIiwiZmlsZSI6IjEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgU2NoZW1hXzEgPSByZXF1aXJlKFwiLi9TY2hlbWFcIik7XG52YXIgQXJyYXlTY2hlbWFfMSA9IHJlcXVpcmUoXCIuL3R5cGVzL0FycmF5U2NoZW1hXCIpO1xudmFyIE1hcFNjaGVtYV8xID0gcmVxdWlyZShcIi4vdHlwZXMvTWFwU2NoZW1hXCIpO1xudmFyIENoYW5nZVRyZWUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ2hhbmdlVHJlZShpbmRleGVzLCBwYXJlbnRGaWVsZCwgcGFyZW50KSB7XG4gICAgICAgIGlmIChpbmRleGVzID09PSB2b2lkIDApIHsgaW5kZXhlcyA9IHt9OyB9XG4gICAgICAgIGlmIChwYXJlbnRGaWVsZCA9PT0gdm9pZCAwKSB7IHBhcmVudEZpZWxkID0gbnVsbDsgfVxuICAgICAgICB0aGlzLmNoYW5nZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jaGFuZ2VzID0gbmV3IFNldCgpO1xuICAgICAgICB0aGlzLmFsbENoYW5nZXMgPSBuZXcgU2V0KCk7XG4gICAgICAgIHRoaXMuZGVsZXRlZEtleXMgPSB7fTtcbiAgICAgICAgdGhpcy5maWVsZEluZGV4ZXMgPSBpbmRleGVzO1xuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgdGhpcy5wYXJlbnRGaWVsZCA9IHBhcmVudEZpZWxkO1xuICAgIH1cbiAgICBDaGFuZ2VUcmVlLnByb3RvdHlwZS5jaGFuZ2UgPSBmdW5jdGlvbiAoZmllbGROYW1lLCBpc0RlbGV0ZSkge1xuICAgICAgICBpZiAoaXNEZWxldGUgPT09IHZvaWQgMCkgeyBpc0RlbGV0ZSA9IGZhbHNlOyB9XG4gICAgICAgIHZhciBmaWVsZEluZGV4ID0gdGhpcy5maWVsZEluZGV4ZXNbZmllbGROYW1lXTtcbiAgICAgICAgdmFyIGZpZWxkID0gKHR5cGVvZiAoZmllbGRJbmRleCkgPT09IFwibnVtYmVyXCIpID8gZmllbGRJbmRleCA6IGZpZWxkTmFtZTtcbiAgICAgICAgaWYgKCFpc0RlbGV0ZSkge1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlcy5hZGQoZmllbGQpO1xuICAgICAgICAgICAgdGhpcy5hbGxDaGFuZ2VzLmFkZChmaWVsZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNEZWxldGUpIHtcbiAgICAgICAgICAgIC8vIGlmICh0aGlzLmNoYW5nZXMuaGFzKGZpZWxkKSkgIHtcbiAgICAgICAgICAgIC8vICAgICAvKipcbiAgICAgICAgICAgIC8vICAgICAgKiB1bi1mbGFnIGEgY2hhbmdlIGlmIGl0ZW0gaGFzIGJlZW4gYWRkZWQgQU5EIHJlbW92ZWQgaW4gdGhlIHNhbWUgcGF0Y2guXG4gICAgICAgICAgICAvLyAgICAgICogKGh0dHBzOi8vZ2l0aHViLmNvbS9jb2x5c2V1cy9jb2x5c2V1cy11bml0eTNkL2lzc3Vlcy8xMDMpXG4gICAgICAgICAgICAvLyAgICAgICovXG4gICAgICAgICAgICAvLyAgICAgdGhpcy5jaGFuZ2VzLmRlbGV0ZShmaWVsZCk7XG4gICAgICAgICAgICAvLyB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5jaGFuZ2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlcy5hZGQoZmllbGQpO1xuICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgLy8gZGlzY2FyZCBhbGwtY2hhbmdlcyBmb3IgcmVtb3ZlZCBpdGVtcy5cbiAgICAgICAgICAgIHRoaXMuYWxsQ2hhbmdlcy5kZWxldGUoZmllbGQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnBhcmVudCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQuY2hhbmdlKHRoaXMucGFyZW50RmllbGQpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDaGFuZ2VUcmVlLnByb3RvdHlwZS5tYXBJbmRleCA9IGZ1bmN0aW9uIChpbnN0YW5jZSwga2V5KSB7XG4gICAgICAgIGlmICh0eXBlb2YgaW5zdGFuY2UgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5pbmRleE1hcCkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5kZXhNYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5pbmRleENoYW5nZSA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuaW5kZXhNYXAuc2V0KGluc3RhbmNlLCBrZXkpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDaGFuZ2VUcmVlLnByb3RvdHlwZS5nZXRJbmRleCA9IGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5pbmRleE1hcCAmJiB0aGlzLmluZGV4TWFwLmdldChpbnN0YW5jZSk7XG4gICAgfTtcbiAgICBDaGFuZ2VUcmVlLnByb3RvdHlwZS5kZWxldGVJbmRleCA9IGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuICAgICAgICBpZiAodHlwZW9mIGluc3RhbmNlID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICB0aGlzLmRlbGV0ZWRLZXlzW3RoaXMuaW5kZXhNYXAuZ2V0KGluc3RhbmNlKV0gPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5pbmRleE1hcC5kZWxldGUoaW5zdGFuY2UpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDaGFuZ2VUcmVlLnByb3RvdHlwZS5pc0RlbGV0ZWQgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRlbGV0ZWRLZXlzW2tleV0gIT09IHVuZGVmaW5lZDtcbiAgICB9O1xuICAgIENoYW5nZVRyZWUucHJvdG90eXBlLm1hcEluZGV4Q2hhbmdlID0gZnVuY3Rpb24gKGluc3RhbmNlLCBwcmV2aW91c0tleSkge1xuICAgICAgICBpZiAodHlwZW9mIGluc3RhbmNlID09PSBcIm9iamVjdFwiICYmICF0aGlzLmluZGV4Q2hhbmdlLmhhcyhpbnN0YW5jZSkpIHtcbiAgICAgICAgICAgIHRoaXMuaW5kZXhDaGFuZ2Uuc2V0KGluc3RhbmNlLCBwcmV2aW91c0tleSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENoYW5nZVRyZWUucHJvdG90eXBlLmdldEluZGV4Q2hhbmdlID0gZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmluZGV4Q2hhbmdlICYmIHRoaXMuaW5kZXhDaGFuZ2UuZ2V0KGluc3RhbmNlKTtcbiAgICB9O1xuICAgIENoYW5nZVRyZWUucHJvdG90eXBlLmRlbGV0ZUluZGV4Q2hhbmdlID0gZnVuY3Rpb24gKGluc3RhbmNlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaW5zdGFuY2UgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIHRoaXMuaW5kZXhDaGFuZ2UuZGVsZXRlKGluc3RhbmNlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ2hhbmdlVHJlZS5wcm90b3R5cGUuY2hhbmdlQWxsID0gZnVuY3Rpb24gKG9iaikge1xuICAgICAgICBpZiAob2JqIGluc3RhbmNlb2YgU2NoZW1hXzEuU2NoZW1hKSB7XG4gICAgICAgICAgICB2YXIgc2NoZW1hID0gb2JqWydfc2NoZW1hJ107XG4gICAgICAgICAgICBmb3IgKHZhciBmaWVsZCBpbiBzY2hlbWEpIHtcbiAgICAgICAgICAgICAgICAvLyBlbnN1cmUgQXJyYXlTY2hlbWEgYW5kIE1hcFNjaGVtYSBhbHJlYWR5IGluaXRpYWxpemVkXG4gICAgICAgICAgICAgICAgLy8gb24gaXRzIHN0cnVjdHVyZSBoYXZlIGEgdmFsaWQgcGFyZW50LlxuICAgICAgICAgICAgICAgIGlmICgob2JqW2ZpZWxkXSBpbnN0YW5jZW9mIFNjaGVtYV8xLlNjaGVtYSB8fFxuICAgICAgICAgICAgICAgICAgICBvYmpbZmllbGRdIGluc3RhbmNlb2YgQXJyYXlTY2hlbWFfMS5BcnJheVNjaGVtYSB8fFxuICAgICAgICAgICAgICAgICAgICBvYmpbZmllbGRdIGluc3RhbmNlb2YgTWFwU2NoZW1hXzEuTWFwU2NoZW1hKSAmJlxuICAgICAgICAgICAgICAgICAgICAhb2JqW2ZpZWxkXS4kY2hhbmdlcy5wYXJlbnQucGFyZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIG9ialtmaWVsZF0uJGNoYW5nZXMucGFyZW50ID0gdGhpcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG9ialtmaWVsZF0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZShmaWVsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBrZXlzXzEgPSBrZXlzOyBfaSA8IGtleXNfMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgICAgICB2YXIga2V5ID0ga2V5c18xW19pXTtcbiAgICAgICAgICAgICAgICBpZiAob2JqW2tleV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZShrZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgQ2hhbmdlVHJlZS5wcm90b3R5cGUuZGlzY2FyZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2VkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY2hhbmdlcy5jbGVhcigpO1xuICAgICAgICB0aGlzLmRlbGV0ZWRLZXlzID0ge307XG4gICAgICAgIGlmICh0aGlzLmluZGV4Q2hhbmdlKSB7XG4gICAgICAgICAgICB0aGlzLmluZGV4Q2hhbmdlLmNsZWFyKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBDaGFuZ2VUcmVlO1xufSgpKTtcbmV4cG9ydHMuQ2hhbmdlVHJlZSA9IENoYW5nZVRyZWU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DaGFuZ2VUcmVlLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///13\n')},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar ChangeTree_1 = __webpack_require__(13);\nvar Schema_1 = __webpack_require__(3);\nvar Context = /** @class */ (function () {\n    function Context() {\n        this.types = {};\n        this.schemas = new Map();\n    }\n    Context.prototype.has = function (schema) {\n        return this.schemas.has(schema);\n    };\n    Context.prototype.get = function (typeid) {\n        return this.types[typeid];\n    };\n    Context.prototype.add = function (schema) {\n        schema._typeid = this.schemas.size;\n        this.types[schema._typeid] = schema;\n        this.schemas.set(schema, schema._typeid);\n    };\n    return Context;\n}());\nexports.Context = Context;\nexports.globalContext = new Context();\n/**\n * `@type()` decorator for proxies\n */\nfunction type(type, context) {\n    if (context === void 0) { context = exports.globalContext; }\n    return function (target, field) {\n        var constructor = target.constructor;\n        constructor._context = context;\n        /*\n         * static schema\n         */\n        if (!context.has(constructor)) {\n            context.add(constructor);\n            // support inheritance\n            constructor._schema = Object.assign({}, constructor._schema || {});\n            constructor._indexes = Object.assign({}, constructor._indexes || {});\n            constructor._fieldsByIndex = Object.assign({}, constructor._fieldsByIndex || {});\n            constructor._descriptors = Object.assign({}, constructor._descriptors || {});\n            constructor._deprecated = Object.assign({}, constructor._deprecated || {});\n        }\n        var index = Object.keys(constructor._schema).length;\n        constructor._fieldsByIndex[index] = field;\n        constructor._indexes[field] = index;\n        constructor._schema[field] = type;\n        /**\n         * skip if descriptor already exists for this field (`@deprecated()`)\n         */\n        if (constructor._descriptors[field]) {\n            return;\n        }\n        /**\n         * TODO: `isSchema` / `isArray` / `isMap` is repeated on many places!\n         * need to refactor all of them.\n         */\n        var isArray = Array.isArray(type);\n        var isMap = !isArray && type.map;\n        var isSchema = (typeof (constructor._schema[field]) === "function");\n        var fieldCached = "_" + field;\n        constructor._descriptors[fieldCached] = {\n            enumerable: false,\n            configurable: false,\n            writable: true,\n        };\n        constructor._descriptors[field] = {\n            get: function () {\n                return this[fieldCached];\n            },\n            set: function (value) {\n                /**\n                 * Create Proxy for array or map items\n                 */\n                if (isArray || isMap) {\n                    value = new Proxy(value, {\n                        get: function (obj, prop) { return obj[prop]; },\n                        set: function (obj, prop, setValue) {\n                            if (prop !== "length" && prop.indexOf("$") !== 0) {\n                                // ensure new value has a parent\n                                var key = (isArray) ? Number(prop) : String(prop);\n                                if (!obj.$sorting) {\n                                    // track index change\n                                    var previousIndex = obj.$changes.getIndex(setValue);\n                                    if (previousIndex !== undefined) {\n                                        obj.$changes.mapIndexChange(setValue, previousIndex);\n                                    }\n                                    obj.$changes.mapIndex(setValue, key);\n                                }\n                                // if (isMap) {\n                                //     obj._indexes.delete(prop);\n                                // }\n                                if (setValue instanceof Schema_1.Schema) {\n                                    // new items are flagged with all changes\n                                    if (!setValue.$changes.parent) {\n                                        setValue.$changes = new ChangeTree_1.ChangeTree(setValue._indexes, key, obj.$changes);\n                                        setValue.$changes.changeAll(setValue);\n                                    }\n                                }\n                                else {\n                                    obj[prop] = setValue;\n                                }\n                                // apply change on ArraySchema / MapSchema\n                                obj.$changes.change(key);\n                            }\n                            else if (setValue !== obj[prop]) {\n                                // console.log("SET NEW LENGTH:", setValue);\n                                // console.log("PREVIOUS LENGTH: ", obj[prop]);\n                            }\n                            obj[prop] = setValue;\n                            return true;\n                        },\n                        deleteProperty: function (obj, prop) {\n                            var deletedValue = obj[prop];\n                            if (isMap && deletedValue !== undefined) {\n                                obj.$changes.deleteIndex(deletedValue);\n                                obj.$changes.deleteIndexChange(deletedValue);\n                                if (deletedValue.$changes) { // deletedValue may be a primitive value\n                                    delete deletedValue.$changes.parent;\n                                }\n                                // obj._indexes.delete(prop);\n                            }\n                            delete obj[prop];\n                            var key = (isArray) ? Number(prop) : String(prop);\n                            obj.$changes.change(key, true);\n                            return true;\n                        },\n                    });\n                }\n                // skip if value is the same as cached.\n                if (value === this[fieldCached]) {\n                    return;\n                }\n                this[fieldCached] = value;\n                if (isArray) {\n                    // directly assigning an array of items as value.\n                    this.$changes.change(field);\n                    value.$changes = new ChangeTree_1.ChangeTree({}, field, this.$changes);\n                    for (var i = 0; i < value.length; i++) {\n                        if (value[i] instanceof Schema_1.Schema) {\n                            value[i].$changes = new ChangeTree_1.ChangeTree(value[i]._indexes, i, value.$changes);\n                            value[i].$changes.changeAll(value[i]);\n                        }\n                        value.$changes.mapIndex(value[i], i);\n                        value.$changes.change(i);\n                    }\n                }\n                else if (isMap) {\n                    // directly assigning a map\n                    value.$changes = new ChangeTree_1.ChangeTree({}, field, this.$changes);\n                    this.$changes.change(field);\n                    for (var key in value) {\n                        if (value[key] instanceof Schema_1.Schema) {\n                            value[key].$changes = new ChangeTree_1.ChangeTree(value[key]._indexes, key, value.$changes);\n                            value[key].$changes.changeAll(value[key]);\n                        }\n                        value.$changes.mapIndex(value[key], key);\n                        value.$changes.change(key);\n                    }\n                }\n                else if (isSchema) {\n                    // directly assigning a `Schema` object\n                    // value may be set to null\n                    this.$changes.change(field);\n                    if (value) {\n                        value.$changes = new ChangeTree_1.ChangeTree(value._indexes, field, this.$changes);\n                        value.$changes.changeAll(value);\n                    }\n                }\n                else {\n                    // directly assigning a primitive type\n                    this.$changes.change(field);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        };\n    };\n}\nexports.type = type;\n/**\n * `@filter()` decorator for defining data filters per client\n */\nfunction filter(cb) {\n    return function (target, field) {\n        var constructor = target.constructor;\n        /*\n         * static filters\n         */\n        if (!constructor._filters) {\n            constructor._filters = {};\n        }\n        constructor._filters[field] = cb;\n    };\n}\nexports.filter = filter;\n/**\n * `@deprecated()` flag a field as deprecated.\n * The previous `@type()` annotation should remain along with this one.\n */\nfunction deprecated(throws, context) {\n    if (throws === void 0) { throws = true; }\n    if (context === void 0) { context = exports.globalContext; }\n    return function (target, field) {\n        var constructor = target.constructor;\n        constructor._deprecated[field] = true;\n        if (throws) {\n            constructor._descriptors[field] = {\n                get: function () { throw new Error(field + " is deprecated."); },\n                set: function (value) { },\n                enumerable: false,\n                configurable: true\n            };\n        }\n    };\n}\nexports.deprecated = deprecated;\nfunction defineTypes(target, fields, context) {\n    if (context === void 0) { context = exports.globalContext; }\n    for (var field in fields) {\n        type(fields[field], context)(target.prototype, field);\n    }\n    return target;\n}\nexports.defineTypes = defineTypes;\n//# sourceMappingURL=annotations.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n')},function(I,g,C){I.exports=C(16)},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _responsiveUtil = __webpack_require__(17);\n\nvar _global = __webpack_require__(0);\n\nvar _Loader = __webpack_require__(18);\n\nvar _Game = __webpack_require__(19);\n\nvar _socketApi = __webpack_require__(25);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar Boot = function () {\n    function Boot() {\n        _classCallCheck(this, Boot);\n    }\n\n    _createClass(Boot, [{\n        key: \'init\',\n        value: function init() {\n            setTimeout(function () {\n                _global.Global.connectionEP = new _socketApi.SocketAPI();\n                _global.Global.connectionEP.open();\n            }, 2000);\n            _global.Global.responsiveObj = new _responsiveUtil.ResponsiveGame();\n            _global.Global.defaultDimension = _global.Global.responsiveObj.init({\n                orientation: "portrait",\n                defaultDimension: {\n                    width: 1080,\n                    height: 1920\n                }\n\n            });\n            this.g = new Phaser.Game(_global.Global.defaultDimension.width, _global.Global.defaultDimension.height, navigator.userAgent.toLowerCase().indexOf(\'firefox\') > -1 ? Phaser.AUTO : Phaser.CANVAS, "game-sec", {\n                preload: this.preload,\n                create: this.create\n            }, true, true);\n        }\n    }, {\n        key: \'preload\',\n        value: function preload() {\n\n            this.game.state.add("Loader", _Loader.Loader);\n            this.game.state.add("Game", _Game.Game);\n            this.game.load.image(\'loaderBG\', \'assets/loaderBG.jpg\');\n            this.game.load.image(\'loaderDots\', \'assets/loaderDots.png\');\n        }\n    }, {\n        key: \'create\',\n        value: function create() {\n            _global.Global.responsiveObj.notify("subscribe", {\n                scene: this\n            });\n            this.game.state.start("Loader");\n        }\n    }]);\n\n    return Boot;\n}();\n\nexports.default = Boot;\n\n\nvar bootObj = new Boot();\nbootObj.init();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbIkJvb3QiLCJzZXRUaW1lb3V0IiwiR2xvYmFsIiwiY29ubmVjdGlvbkVQIiwiU29ja2V0QVBJIiwib3BlbiIsInJlc3BvbnNpdmVPYmoiLCJSZXNwb25zaXZlR2FtZSIsImRlZmF1bHREaW1lbnNpb24iLCJpbml0Iiwib3JpZW50YXRpb24iLCJ3aWR0aCIsImhlaWdodCIsImciLCJQaGFzZXIiLCJHYW1lIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidG9Mb3dlckNhc2UiLCJpbmRleE9mIiwiQVVUTyIsIkNBTlZBUyIsInByZWxvYWQiLCJjcmVhdGUiLCJnYW1lIiwic3RhdGUiLCJhZGQiLCJMb2FkZXIiLCJsb2FkIiwiaW1hZ2UiLCJub3RpZnkiLCJzY2VuZSIsInN0YXJ0IiwiYm9vdE9iaiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztJQUdxQkEsSTtBQUNqQixvQkFBYztBQUFBO0FBRWI7Ozs7K0JBQ007QUFDSEMsdUJBQVcsWUFBWTtBQUNuQkMsK0JBQU9DLFlBQVAsR0FBc0IsSUFBSUMsb0JBQUosRUFBdEI7QUFDQUYsK0JBQU9DLFlBQVAsQ0FBb0JFLElBQXBCO0FBQ0gsYUFIRCxFQUdHLElBSEg7QUFJQUgsMkJBQU9JLGFBQVAsR0FBdUIsSUFBSUMsOEJBQUosRUFBdkI7QUFDQUwsMkJBQU9NLGdCQUFQLEdBQTBCTixlQUFPSSxhQUFQLENBQXFCRyxJQUFyQixDQUEwQjtBQUNoREMsNkJBQWEsVUFEbUM7QUFFaERGLGtDQUFrQjtBQUNkRywyQkFBTyxJQURPO0FBRWRDLDRCQUFRO0FBRk07O0FBRjhCLGFBQTFCLENBQTFCO0FBUUEsaUJBQUtDLENBQUwsR0FBUyxJQUFJQyxPQUFPQyxJQUFYLENBQWdCYixlQUFPTSxnQkFBUCxDQUF3QkcsS0FBeEMsRUFBK0NULGVBQU9NLGdCQUFQLENBQXdCSSxNQUF2RSxFQUFnRkksVUFBVUMsU0FBVixDQUFvQkMsV0FBcEIsR0FBa0NDLE9BQWxDLENBQTBDLFNBQTFDLElBQXVELENBQUMsQ0FBeEQsR0FBNERMLE9BQU9NLElBQW5FLEdBQTBFTixPQUFPTyxNQUFqSyxFQUEwSyxVQUExSyxFQUFzTDtBQUMzTEMseUJBQVMsS0FBS0EsT0FENks7QUFFM0xDLHdCQUFRLEtBQUtBO0FBRjhLLGFBQXRMLEVBR04sSUFITSxFQUdBLElBSEEsQ0FBVDtBQUlIOzs7a0NBQ1M7O0FBRU4saUJBQUtDLElBQUwsQ0FBVUMsS0FBVixDQUFnQkMsR0FBaEIsQ0FBb0IsUUFBcEIsRUFBOEJDLGNBQTlCO0FBQ0EsaUJBQUtILElBQUwsQ0FBVUMsS0FBVixDQUFnQkMsR0FBaEIsQ0FBb0IsTUFBcEIsRUFBNEJYLFVBQTVCO0FBQ0EsaUJBQUtTLElBQUwsQ0FBVUksSUFBVixDQUFlQyxLQUFmLENBQXFCLFVBQXJCLEVBQWlDLHFCQUFqQztBQUNBLGlCQUFLTCxJQUFMLENBQVVJLElBQVYsQ0FBZUMsS0FBZixDQUFxQixZQUFyQixFQUFtQyx1QkFBbkM7QUFDSDs7O2lDQUNRO0FBQ0wzQiwyQkFBT0ksYUFBUCxDQUFxQndCLE1BQXJCLENBQTRCLFdBQTVCLEVBQXlDO0FBQ3JDQyx1QkFBTztBQUQ4QixhQUF6QztBQUdBLGlCQUFLUCxJQUFMLENBQVVDLEtBQVYsQ0FBZ0JPLEtBQWhCLENBQXNCLFFBQXRCO0FBQ0g7Ozs7OztrQkFuQ2dCaEMsSTs7O0FBdUNyQixJQUFJaUMsVUFBVSxJQUFJakMsSUFBSixFQUFkO0FBQ0FpQyxRQUFReEIsSUFBUiIsImZpbGUiOiIxNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgeyBSZXNwb25zaXZlR2FtZSB9IGZyb20gJy4vdXRpbC9yZXNwb25zaXZlLXV0aWwnO1xyXG5pbXBvcnQgeyBHbG9iYWwgfSBmcm9tICcuL3V0aWwvZ2xvYmFsJztcclxuaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSAnLi9zdGF0ZXMvTG9hZGVyJztcclxuaW1wb3J0IHsgR2FtZSB9IGZyb20gJy4vc3RhdGVzL0dhbWUnO1xyXG5pbXBvcnQgeyBTb2NrZXRBUEkgfSBmcm9tICcuL3NvY2tldEFwaS9zb2NrZXRBcGknO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvb3Qge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcblxyXG4gICAgfVxyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgR2xvYmFsLmNvbm5lY3Rpb25FUCA9IG5ldyBTb2NrZXRBUEkoKTtcclxuICAgICAgICAgICAgR2xvYmFsLmNvbm5lY3Rpb25FUC5vcGVuKCk7XHJcbiAgICAgICAgfSwgMjAwMClcclxuICAgICAgICBHbG9iYWwucmVzcG9uc2l2ZU9iaiA9IG5ldyBSZXNwb25zaXZlR2FtZSgpO1xyXG4gICAgICAgIEdsb2JhbC5kZWZhdWx0RGltZW5zaW9uID0gR2xvYmFsLnJlc3BvbnNpdmVPYmouaW5pdCh7XHJcbiAgICAgICAgICAgIG9yaWVudGF0aW9uOiBcInBvcnRyYWl0XCIsXHJcbiAgICAgICAgICAgIGRlZmF1bHREaW1lbnNpb246IHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDgwLFxyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxOTIwXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5nID0gbmV3IFBoYXNlci5HYW1lKEdsb2JhbC5kZWZhdWx0RGltZW5zaW9uLndpZHRoLCBHbG9iYWwuZGVmYXVsdERpbWVuc2lvbi5oZWlnaHQsIChuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignZmlyZWZveCcpID4gLTEgPyBQaGFzZXIuQVVUTyA6IFBoYXNlci5DQU5WQVMpLCBcImdhbWUtc2VjXCIsIHtcclxuICAgICAgICAgICAgcHJlbG9hZDogdGhpcy5wcmVsb2FkLFxyXG4gICAgICAgICAgICBjcmVhdGU6IHRoaXMuY3JlYXRlXHJcbiAgICAgICAgfSwgdHJ1ZSwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgICBwcmVsb2FkKCkge1xyXG5cclxuICAgICAgICB0aGlzLmdhbWUuc3RhdGUuYWRkKFwiTG9hZGVyXCIsIExvYWRlcik7XHJcbiAgICAgICAgdGhpcy5nYW1lLnN0YXRlLmFkZChcIkdhbWVcIiwgR2FtZSk7XHJcbiAgICAgICAgdGhpcy5nYW1lLmxvYWQuaW1hZ2UoJ2xvYWRlckJHJywgJ2Fzc2V0cy9sb2FkZXJCRy5qcGcnKTtcclxuICAgICAgICB0aGlzLmdhbWUubG9hZC5pbWFnZSgnbG9hZGVyRG90cycsICdhc3NldHMvbG9hZGVyRG90cy5wbmcnKVxyXG4gICAgfVxyXG4gICAgY3JlYXRlKCkge1xyXG4gICAgICAgIEdsb2JhbC5yZXNwb25zaXZlT2JqLm5vdGlmeShcInN1YnNjcmliZVwiLCB7XHJcbiAgICAgICAgICAgIHNjZW5lOiB0aGlzXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5nYW1lLnN0YXRlLnN0YXJ0KFwiTG9hZGVyXCIpO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxudmFyIGJvb3RPYmogPSBuZXcgQm9vdCgpO1xyXG5ib290T2JqLmluaXQoKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SignalHub = function (_Phaser$Signal) {\n    _inherits(SignalHub, _Phaser$Signal);\n\n    function SignalHub() {\n        _classCallCheck(this, SignalHub);\n\n        var _this = _possibleConstructorReturn(this, (SignalHub.__proto__ || Object.getPrototypeOf(SignalHub)).call(this));\n\n        _this.onSignal = _this.onSignal.bind(_this);\n        return _this;\n    }\n\n    _createClass(SignalHub, [{\n        key: "initSignal",\n        value: function initSignal() {\n            this.add(this.onSignal);\n            /*  this.on("set-bg", this.onSignal);\r\n             this.on("item-fill-and-resize-all", this.onSignal); */\n        }\n    }, {\n        key: "onSignal",\n        value: function onSignal(_data) {\n            switch (_data.type) {\n                case "subscribe":\n                    this.subscribe(_data.data);\n                    break;\n                case "unsubscribe":\n                    this.unsubscribe(_data.data);\n                    break;\n                case "clear":\n                    this.clearData();\n                    break;\n                case "item-fill":\n                    this.fillDimensionArr(_data.data, false);\n                    break;\n                case "item-fill-and-resize-all":\n                    this.fillDimensionArr(_data.data, true);\n                    break;\n                case "item-fill-and-resize-one":\n                    this.fillDimensionArr(_data.data, true, _data.data.props.item);\n                    break;\n                case "item-resize":\n                    this.resizeElements(_data.data.scene, null, true);\n                    break;\n                case "set-bg":\n                    this.setBG(_data.data.BG);\n                    break;\n                case "item-move-by":\n                    this.moveItem(_data.data);\n                    break;\n                case "item-move-to":\n                    this.moveItemTo(_data.data);\n                    break;\n                case "item-tween-by-X":\n                    this.tweenXItem(_data.data, true);\n                    break;\n                case "item-tween-to-X":\n                    this.tweenXItem(_data.data, false);\n                    break;\n                case "item-tween-by-Y":\n                    this.tweenYItem(_data.data, true);\n                    break;\n                case "item-tween-to-Y":\n                    this.tweenYItem(_data.data, false);\n                    break;\n                case "item-tween-by":\n                    this.tweenItem(_data.data, true);\n                    break;\n                case "item-tween-to":\n                    this.tweenItem(_data.data, false);\n                    break;\n                case "item-scale-by":\n                    this.scaleItem(_data.data, true, true);\n                    break;\n                case "item-scale-to":\n                    this.scaleItem(_data.data, false, true);\n                    break;\n                case "item-scale-to-keep-def":\n                    this.scaleItem(_data.data, false, false);\n                    break;\n                case "item-follow-unlock":\n                    this.unlockItem(_data.data);\n                    break;\n                case "item-follow-lock":\n                    this.lockItem(_data.data);\n                    break;\n                case "item-scale-direction-update":\n                    this.updateScaleDirection(_data.data, _data.data.props.item);\n                    break;\n                case "item-change-follow":\n                    _data.data.props.item.followFixed = false;\n                    this.initFollowersFix(_data.data.props.item);\n                    break;\n                case "item-update":\n                    this.updateItemPoint(_data.data.scene.game, _data.data.props.item);\n                    break;\n                case "item-apply-velocity":\n                    this.applyVelocity(_data.data.scene, _data.data.props);\n                    break;\n                case "item-nullify":\n                    this.nullifyItem(_data.data.props);\n                    break;\n\n            }\n        }\n    }]);\n\n    return SignalHub;\n}(Phaser.Signal);\n\nvar ResponsiveGame = function (_SignalHub) {\n    _inherits(ResponsiveGame, _SignalHub);\n\n    function ResponsiveGame() {\n        _classCallCheck(this, ResponsiveGame);\n\n        var _this2 = _possibleConstructorReturn(this, (ResponsiveGame.__proto__ || Object.getPrototypeOf(ResponsiveGame)).call(this));\n\n        _this2.responsiveTypes = [0, 1, 4, 6];\n        _this2.dimensionArr = {};\n        _this2.orientation = "";\n        _this2.followitemIndex = 0;\n        _this2.mainBG = null;\n        _this2.move_twn = null;\n        _this2.infos = [];\n        _this2._scaleFact = 1;\n        _this2.refreshed = false;\n        _this2.resizeCnt = 0;\n        _this2.enablePhysicsTimeout = null;\n\n        /* ResponsiveGame.prototype.constructor.call(this); */\n\n        return _this2;\n    }\n\n    _createClass(ResponsiveGame, [{\n        key: "init",\n        value: function init(dafaultData) {\n            this.orientation = dafaultData.orientation;\n            this.defaultVal = dafaultData;\n            this.initSignal();\n            this.deviceDetector = function () {\n                var b = navigator.userAgent.toLowerCase(),\n                    a = function a(_a) {\n                    void 0 !== _a && (b = _a.toLowerCase());\n                    return (/(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/.test(b) ? "tablet" : /(mobi|ipod|phone|blackberry|opera mini|fennec|minimo|symbian|psp|nintendo ds|archos|skyfire|puffin|blazer|bolt|gobrowser|iris|maemo|semc|teashark|uzard)/.test(b) ? "phone" : "desktop"\n                    );\n                };\n                return {\n                    device: a(),\n                    detect: a,\n                    isMobile: "desktop" != a() ? !0 : !1,\n                    userAgent: b\n                };\n            }();\n            this.isMobile = !(this.deviceDetector.device == "desktop");\n\n            var c_width = (this.isMobile ? this.orientation == "portrait" ? Math.min(window.innerWidth, window.innerHeight) : Math.max(window.innerWidth, window.innerHeight) : this.orientation == "portrait" ? dafaultData.defaultDimension.width : window.innerWidth) * window.devicePixelRatio;\n            var c_height = (this.isMobile ? this.orientation == "portrait" ? Math.max(window.innerWidth, window.innerHeight) : Math.min(window.innerWidth, window.innerHeight) : this.orientation == "portrait" ? dafaultData.defaultDimension.height : window.innerHeight) * window.devicePixelRatio;\n            this.showOrHideBlackCover();\n            if (this.isMobile || !this.isMobile && this.orientation == "portrait") {\n                window.addEventListener("resize", this.showOrHideBlackCover.bind(this));\n            }\n            return {\n                width: c_width,\n                height: c_height\n            };\n        }\n    }, {\n        key: "showOrHideBlackCover",\n        value: function showOrHideBlackCover(e, _width, _height) {\n            setTimeout(function (_width, _height) {\n                var _width = _width || window.innerWidth;\n                var _height = _height || window.innerHeight;\n\n                if (!this.isMobile && _width * .75 <= _height) {\n                    document.getElementById("rotate").classList.add("active");\n                } else if (!this.isMobile) {\n                    document.getElementById("rotate").classList.remove("active");\n                }\n                if (this.isMobile && (_width >= _height && this.orientation == "portrait" || _width <= _height && this.orientation == "landscape")) {\n                    document.getElementById("rotate").classList.add("active");\n                } else if (this.isMobile) {\n                    document.getElementById("rotate").classList.remove("active");\n                }\n            }.bind(this, _width, _height), 100);\n        }\n    }, {\n        key: "subscribe",\n        value: function subscribe(__data) {\n\n            if (this.isMobile || !this.isMobile && this.orientation == "portrait") {\n                __data.scene.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n                __data.scene.game.scale.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL;\n            } else {\n                __data.scene.game.scale.scaleMode = Phaser.ScaleManager.RESIZE;\n                __data.scene.game.scale.fullScreenScaleMode = Phaser.ScaleManager.RESIZE;\n            }\n\n            __data.scene.game.scale.pageAlignVertically = true;\n            __data.scene.game.time.advancedTiming = true;\n            __data.scene.game.scale.fullScreenTarget = document.body;\n\n            this.c_width = window.innerWidth * window.devicePixelRatio;\n            this.c_height = window.innerHeight * window.devicePixelRatio;\n            this.gameResizeFactor = {\n                w: this.defaultVal.defaultDimension.width,\n                h: this.defaultVal.defaultDimension.height\n\n            };\n        }\n    }, {\n        key: "getHelp",\n        value: function getHelp() {\n            if (this.infos.length == 0) {\n                /* this.infos.push(new Newsfeed.Info("clear", "Use this signal before switching between states.", "no arguments"));\r\n                this.infos.push(new Newsfeed.Info("set-bg", "If there is background image for state, use this signal", "{BG:\' Backgound image used in current state\'}"));\r\n                this.infos.push(new Newsfeed.Info("item-fill-and-resize", "Use this signal each time any element created and added in game. By calling this, the responsive library will store reference to all elements in scene, it will be used to resize elements accoring to screen size changes.", "{scene:this}"));\r\n                this.infos.push(new Newsfeed.Info("item-resize", "Use this signal in \'resize\' function of state", "{scene:this}"));\r\n                this.infos.push(new Newsfeed.Info("item-move-by", "Use this signal , so the final position of item will be [x=>(item x value + game.width * xFact% value send in argument),y=>(item y value + game.height * yFact% value send in argument)]", "{scene:this,props:{item:\'element\',x:\'in%\',y:\'in%\'}}"));\r\n                this.infos.push(new Newsfeed.Info("item-move-to", "Use this signal , so the final position of item will be [x=>(game.width * xFact% value send in argument),y=>(game.height * yFact% value send in argument)]", "{scene:this,props:{item:\'element\',x:\'in%\',y:\'in%\'}}"));\r\n                this.infos.push(new Newsfeed.Info("item-scale-by", "Use this signal , so the final scale of item will be [x=>(\'resizeFactor\' * scaleVal% value send in argument),y=>(\'resizeFactor\' * scaleVal% value send in argument)]", "{scene:this,props:{item:\'element\',scaleVal:\'in%\',time:number,Ease:Phaser.Ease,delay:number,doOnComplete:Function}}"));\r\n                this.infos.push(new Newsfeed.Info("item-follow-unlock", "Use this signal , If any item which has \'follows\' object and needs to move. use this before moving the item", "{scene:this,props:{item:\'element\'}}"));\r\n                this.infos.push(new Newsfeed.Info("item-follow-lock", "Use this signal , If any item which has \'follows\' object and movement is completed. use this after moving the item", "{scene:this,props:{item:\'element\'}}")); */\n\n            }\n\n            console.table(this.infos);\n        }\n    }, {\n        key: "notify",\n        value: function notify(_type, _data) {\n            /* this.emit(_type, {\r\n                type: _type,\r\n                data: _data\r\n            }); */\n            this.dispatch({\n                type: _type,\n                data: _data\n            });\n        }\n    }, {\n        key: "clearData",\n        value: function clearData() {\n            Object.keys(this.dimensionArr).forEach(function (key) {\n                this.dimensionArr[key]._item.name = null;\n                this.dimensionArr[key]._item.destroy();\n            }.bind(this));\n            this.dimensionArr = {};\n            this.followitemIndex = 0;\n            this.mainBG = null;\n        }\n    }, {\n        key: "setBG",\n        value: function setBG(_BG) {\n            this.mainBG = _BG;\n            /* this.mainBG.dimensions = {\r\n                "w": _BG.width,\r\n                "h": _BG.height\r\n            }; */\n            _BG.isBG = true;\n        }\n    }, {\n        key: "isEligibleForResponsiveness",\n        value: function isEligibleForResponsiveness(_type) {\n            return this.responsiveTypes.indexOf(_type) == -1 ? false : true;\n        }\n    }, {\n        key: "nullifyItem",\n        value: function nullifyItem(props) {\n            if (this.dimensionArr[props.item.name]) {\n                if (props.item.name == "item_0") {\n                    console.log("Removing first item");\n                }\n                delete this.dimensionArr.item_0; //[props.item.name];\n            }\n        }\n    }, {\n        key: "fillDimensionArr",\n        value: function fillDimensionArr(_scene, _shouldResize, _item) {\n\n            _item = _item || null;\n            _scene = _scene.scene;\n            Object.keys(_scene).forEach(function (key) {\n                if (_scene[key]) {\n                    if (this.isEligibleForResponsiveness(_scene[key].type) && !(_scene[key].name in this.dimensionArr)) {\n                        _scene[key].dimension = {\n                            w: _scene[key].width,\n                            h: _scene[key].height\n\n                            //alert("Adding")\n                        };this.dimensionArr[_scene[key].name] = {\n                            _item: _scene[key],\n                            _wDef: _scene[key].width / this.gameResizeFactor.w * _scene[key].resizeFactor,\n                            _hDef: _scene[key].height / this.gameResizeFactor.h * Math.abs(_scene[key].resizeFactor),\n                            _w: _scene[key].type == 4 ? _scene[key].fontSize / this.gameResizeFactor.w : _scene[key].width / this.gameResizeFactor.w * _scene[key].resizeFactor,\n                            _h: _scene[key].type == 4 ? _scene[key].fontSize / this.gameResizeFactor.h : _scene[key].height / this.gameResizeFactor.h * Math.abs(_scene[key].resizeFactor),\n                            _x: _scene[key].x / _scene.game.canvas.width,\n                            _y: _scene[key].y / _scene.game.canvas.height,\n                            _isBG: _scene[key].isBG || false\n                        };\n                        if (_scene[key].type == 4) {\n                            _scene[key].initFontSize = _scene[key].fontSize;\n                        }\n                        if (_scene[key].follows) {\n                            _scene[key].followFixed = false;\n                            _scene[key].followLocked = true;\n                            _scene[key].needToFollow = true;\n                        }\n                        _scene[key].antialiasing = true;\n                        /*  if(_scene[key].smoothed!=undefined){\r\n                             _scene[key].smoothed=false;\r\n                         } */\n                    } else if (this.isEligibleForResponsiveness(_scene[key].type) && _scene[key].name in this.dimensionArr) {}\n                }\n            }.bind(this));\n            if (_item != null) _item.followFixed = false;\n            if (_shouldResize) {\n                this.resizeElements(_scene, _item, false);\n            }\n        }\n    }, {\n        key: "updateScaleDirection",\n        value: function updateScaleDirection(_scene, _item) {\n            this.dimensionArr[_item.name]._wDef = Math.abs(this.dimensionArr[_item.name]._wDef) * Math.sign(_item.resizeFactor);\n        }\n    }, {\n        key: "resizeElements",\n        value: function resizeElements(__scene, __item, isActualResize) {\n            clearTimeout(this.enablePhysicsTimeout);\n            var _width = __scene.game.canvas.width;\n            var _height = __scene.game.canvas.height;\n            if (isActualResize) {\n                this.resizeCnt++;\n                this.showOrHideBlackCover();\n            }\n            Object.keys(this.dimensionArr).forEach(function (_item, key) {\n\n                if (_item == null || _item.name == key && _item.alive) {\n                    var ele = this.dimensionArr[key];\n                    if (_item == null) ele._item.followFixed = false;\n                    ele._item.followers = [];\n                    if (ele._item.bodyType) {\n                        ele._item.isStaticBody = ele._item.body && ele._item.body.data.m_mass == 0 || ele._item.isStatic ? true : false;\n                        if (ele._item.body) {\n                            ele._item.body.destroy();\n                            ele._item.body = null;\n                        }\n                    }\n                }\n            }.bind(this, __item));\n            Object.keys(this.dimensionArr).forEach(function (_item, key) {\n                if (_item == null || _item.name == key && _item.alive) {\n                    var ele = this.dimensionArr[key];\n                    if (ele._isBG) {\n                        this.scaleSprite(ele._item, _width, _height, 0, 1, true);\n                        if (ele._item.body) {\n                            // alert("A")\n                            ele._item.body.x = (_width - ele._item.width) / 2;\n                            ele._item.body.y = (_height - ele._item.height) / 2;\n                        } else {\n                            // console.log(ele._item,"---\x3e>>")\n                            //alert("B")\n                            /*  ele._item.setPosition(_width/2,_height/2) */\n                            ele._item.x = (_width - ele._item.width) / 2;\n                            ele._item.y = (_height - ele._item.height) / 2;\n                        }\n                    } else {\n                        if (ele._item.type == 4) {\n                            ele._item.fontSize = ele._item.initFontSize * _width / this.gameResizeFactor.w;\n                        } else {\n                            /*          ele._item.setScale(ele._w * _width / 1000,ele._w * _width / 1000) */\n                            ele._item.scale.setTo(ele._w * _width / 1000);\n                        }\n                        if (!ele._item._tween) {\n                            if (ele._item.body) {\n                                ele._item.body.velocity.x == 0 && (ele._item.body.x = ele._x * _width);\n                                ele._item.body.velocity.y == 0 && (ele._item.body.y = ele._x * _height);\n                            } else {\n                                if (ele._item.type == 4) {\n                                    ele._item.x = Math.round(ele._x * _width);\n                                    ele._item.y = Math.round(ele._y * _height);\n                                } else {\n                                    ele._item.x = ele._x * _width;\n                                    ele._item.y = ele._y * _height;\n                                }\n                            }\n                        }\n                        if (ele._item._tween) {\n                            ele._item._tween.stop();\n                            __scene.game.tweens.remove(ele._item._tween);\n                            ele._item._tween.timeline[0].percent = 1;\n                            if (ele._item.tweenType == "move") {\n                                if (ele._item.body) {\n                                    ele._item.body.x = ele._x * _width + (ele._item._tween.timeline[0].vEnd.x - ele._item._tween.timeline[0].vStart.x) / ele._item.sizeRef.w * __scene.game.canvas.width;\n                                    ele._item.body.y = ele._y * _height + (ele._item._tween.timeline[0].vEnd.y - ele._item._tween.timeline[0].vStart.y) / ele._item.sizeRef.h * __scene.game.canvas.height;\n                                } else {\n                                    ele._item.x = ele._x * _width + (ele._item._tween.timeline[0].vEnd.x - ele._item._tween.timeline[0].vStart.x) / ele._item.sizeRef.w * __scene.game.canvas.width;\n                                    ele._item.y = ele._y * _height + (ele._item._tween.timeline[0].vEnd.y - ele._item._tween.timeline[0].vStart.y) / ele._item.sizeRef.h * __scene.game.canvas.height;\n                                }\n                            } else if (ele._item.tweenType == "scale") {\n                                if (ele._item.body) {\n                                    ele._item.body.x = ele._x * _width;\n                                    ele._item.body.y = ele._y * _height;\n                                } else {\n                                    ele._item.x = ele._x * _width;\n                                    ele._item.y = ele._y * _height;\n                                }\n                            }\n                            ele._item._tween.onComplete.dispatch();\n                            ele._item._tween = null;\n                        }\n                        if (ele._item.bodyType) {\n                            ele._item.body = null;\n                        }\n                    }\n                }\n            }.bind(this, __item));\n            //this.followitemIndex = 1;\n            if (__item == null || __item != undefined && __item != null && __item.follows && __item.alive) {\n                //console.log(__item," Sending");\n                this.initFollowersFix(__item);\n            }\n\n            this.enablePhysicsTimeout = setTimeout(function (__scene) {\n\n                Object.keys(this.dimensionArr).forEach(function (key) {\n                    var ele = this.dimensionArr[key];\n                    if (!ele._item.isBG && ele._item.bodyType && ele._item.alive) {\n                        ele._item.body && ele._item.body.destroy();\n                        ele._item.body = null;\n                        this.enableBody.call(__scene, ele._item);\n                        ele._item.body.static = ele._item.isStaticBody;\n                    }\n                }.bind(this));\n            }.bind(this, __scene), 10);\n            if (!this.refreshed || isActualResize) {\n                this.refreshed = true;\n                __scene.game.scale.refresh();\n            }\n        }\n    }, {\n        key: "initFollowersFix",\n        value: function initFollowersFix(__item) {\n            if (__item != null) {\n\n                this.repositionOnFollow(__item, this.resizeCnt);\n            } else {\n                Object.keys(this.dimensionArr).forEach(function (key, index) {\n\n                    if (this.dimensionArr[key]._item.alive) {\n                        this.repositionOnFollow(this.dimensionArr[key]._item, this.resizeCnt);\n                    }\n                }.bind(this));\n            }\n        }\n    }, {\n        key: "repositionOnFollow",\n        value: function repositionOnFollow(_ele, resizeCnt) {\n\n            if (resizeCnt == this.resizeCnt) {\n\n                if (_ele.follows && !_ele.followFixed && _ele.alive) {\n                    return this.repositionOnFollow(_ele.follows.item, resizeCnt);\n                } else if (_ele.alive) {\n                    _ele.followers = [];\n                    Object.keys(this.dimensionArr).forEach(function (key, index) {\n                        if (this.dimensionArr[key]._item.follows && this.dimensionArr[key]._item.followLocked) {\n                            if (this.dimensionArr[key]._item.follows.item.name == _ele.name) {\n                                _ele.followers.push(this.dimensionArr[key]._item);\n                            }\n                        }\n                    }.bind(this));\n                    this.fixPositionForFollowers(_ele);\n                    _ele.followers.forEach(function (key, index) {\n                        this.fixPositionForFollowers(_ele.followers[index]);\n                    }.bind(this));\n                }\n            }\n        }\n    }, {\n        key: "scaleSprite",\n        value: function scaleSprite(sprite, availableSpaceWidth, availableSpaceHeight, padding, scaleMultiplier, isFullScale) {\n            var scale = this.getSpriteScale(sprite._frame ? sprite._frame.width : sprite.width, sprite._frame ? sprite._frame.height : sprite.height, availableSpaceWidth, availableSpaceHeight, padding, isFullScale);\n            //var scale = this.getSpriteScale(sprite._frame.width, sprite._frame.height, availableSpaceWidth, availableSpaceHeight, padding, isFullScale);\n            sprite.scale.x = scale * scaleMultiplier;\n            sprite.scale.y = scale * scaleMultiplier;\n        }\n    }, {\n        key: "getSpriteScale",\n        value: function getSpriteScale(spriteWidth, spriteHeight, availableSpaceWidth, availableSpaceHeight, minPadding, isFullScale) {\n            var ratio = 1;\n            var currentDevicePixelRatio = 1 * window.devicePixelRatio;\n            var widthRatio = (spriteWidth * currentDevicePixelRatio + 2 * minPadding) / availableSpaceWidth;\n            var heightRatio = (spriteHeight * currentDevicePixelRatio + 2 * minPadding) / availableSpaceHeight;\n            if (!isFullScale) {\n                ratio = 1 / Math.max(widthRatio, heightRatio);\n            } else {\n                if (isFullScale) ratio = 1 / Math.min(widthRatio, heightRatio);\n            }\n            return ratio * currentDevicePixelRatio;\n        }\n    }, {\n        key: "fixPositionForFollowers",\n        value: function fixPositionForFollowers(_ele) {\n            //alert("AS")\n            _ele.followers.forEach(function (follower) {\n\n                if (follower.alive && !follower.followFixed) {\n\n                    var curr_item = follower;\n                    var itemFollows = _ele;\n\n                    //console.log(curr_item.name, " fixing")\n                    if (curr_item.follows.axis == "y") {\n                        if (curr_item.body) {\n                            curr_item.body.y = itemFollows.y + itemFollows.height * curr_item.follows.Ydirection * curr_item.follows.Yfactor - curr_item.follows.Ydirection * curr_item.height / 2;\n                        } else {\n                            curr_item.y = itemFollows.y + itemFollows.height * curr_item.follows.Ydirection * curr_item.follows.Yfactor;\n                        }\n                    } else if (curr_item.follows.axis == "x") {\n                        if (curr_item.body) {\n                            curr_item.body.x = itemFollows.x + itemFollows.width * curr_item.follows.Xdirection * curr_item.follows.Xfactor - curr_item.follows.Xdirection * curr_item.width / 2;\n                        } else {\n                            curr_item.x = itemFollows.x + itemFollows.width * curr_item.follows.Xdirection * curr_item.follows.Xfactor;\n                        }\n                    } else if (curr_item.follows.axis == "xy") {\n                        if (curr_item.body) {\n                            curr_item.body.x = itemFollows.x + itemFollows.width * curr_item.follows.Xdirection * curr_item.follows.Xfactor - curr_item.follows.Xdirection * curr_item.width / 2;\n                            curr_item.body.y = itemFollows.y + itemFollows.height * curr_item.follows.Ydirection * curr_item.follows.Yfactor - curr_item.follows.Ydirection * curr_item.height / 2;\n                        } else {\n                            curr_item.x = itemFollows.x + itemFollows.width * curr_item.follows.Xdirection * curr_item.follows.Xfactor;\n                            curr_item.y = itemFollows.y + itemFollows.height * curr_item.follows.Ydirection * curr_item.follows.Yfactor;\n                        }\n                    }\n                    // console.log(curr_item.name," Follows ",itemFollows.name,curr_item.alive)\n                    curr_item.followFixed = true;\n                    //follower.needToFollow= false;\n                }\n            }.bind(this));\n        }\n    }, {\n        key: "updateItemPoint",\n        value: function updateItemPoint(_gameObj, _item) {\n            Object.keys(this.dimensionArr).forEach(function (key) {\n                if (_item.name == key) {\n                    /* this.dimensionArr[_item.name]._x = ((this.dimensionArr[_item.name]._item.body) ? this.dimensionArr[_item.name]._item.body.x : this.dimensionArr[_item.name]._item.x) / _gameObj.width;\r\n                    this.dimensionArr[_item.name]._y = ((this.dimensionArr[_item.name]._item.body) ? this.dimensionArr[_item.name]._item.body.y : this.dimensionArr[_item.name]._item.y) / _gameObj.width; */\n                    this.dimensionArr[_item.name]._x = this.dimensionArr[_item.name]._item.x / _gameObj.width;\n                    this.dimensionArr[_item.name]._y = this.dimensionArr[_item.name]._item.y / _gameObj.height;\n                }\n            }.bind(this));\n        }\n    }, {\n        key: "updateItemScale",\n        value: function updateItemScale(_scene, _key, _newResizeFactor, saveOnComplete) {\n            Object.keys(this.dimensionArr).forEach(function (key) {\n\n                if (_key == key) {\n                    this.dimensionArr[_key]._w = this.dimensionArr[_key]._wDef * _newResizeFactor;\n                    //this.dimensionArr[_key]._w = Math.abs(this.dimensionArr[_key]._wDef * _newResizeFactor)*Math.sign(this.dimensionArr[_key]._item.resizeFactor);\n                    this.dimensionArr[_key]._item.scale.setTo(this.dimensionArr[_key]._w * _scene.game.canvas.width / 1000, Math.abs(this.dimensionArr[_key]._w) * _scene.game.canvas.width / 1000);\n\n                    if (saveOnComplete) {\n                        this.dimensionArr[_key]._wDef *= _newResizeFactor;\n                        this.dimensionArr[_key]._hDef *= _newResizeFactor;\n                    }\n                }\n            }.bind(this));\n        }\n    }, {\n        key: "moveItem",\n        value: function moveItem(__data) {\n            var _item = __data.props.item;\n            var _xFact = __data.props.x;\n            var _yFact = __data.props.y;\n            if (_item.follows && _item.followLocked && _item.follows.axis == "y" && parseFloat(_yFact.split("%")[0]) / 100 != 0) throw new Error("can\'t change y-position for item which already follows other item . Make \'followLocked\' of current item to false before change y-position");\n            if (_item.follows && _item.followLocked && _item.follows.axis == "x" && parseFloat(_xFact.split("%")[0]) / 100 != 0) throw new Error("can\'t change x-position for item which already follows other item . Make \'followLocked\' of current item to false before change x-position");\n            if (_item.body) {\n                _item.body.x += __data.scene.game.canvas.width * parseFloat(_xFact.split("%")[0]) / 100;\n                _item.body.y += __data.scene.game.canvas.height * parseFloat(_yFact.split("%")[0]) / 100;\n            } else {\n                _item.x += __data.scene.game.canvas.width * parseFloat(_xFact.split("%")[0]) / 100;\n                _item.y += __data.scene.game.canvas.height * parseFloat(_yFact.split("%")[0]) / 100;\n            }\n            if (_item.follows && !_item.followLocked && _item.follows.axis == "y") {\n                if (_item.body) {\n                    _item.follows.Yfactor = (_item.y + _item.follows.Ydirection * _item.height / 2 - _item.follows.item.y) / (_item.follows.item.height * _item.follows.Ydirection);\n                } else {\n                    _item.follows.Yfactor = (_item.y - _item.follows.item.y) / (_item.follows.item.height * _item.follows.Ydirection);\n                }\n            } else if (_item.follows && !_item.followLocked && _item.follows.axis == "x") {\n                if (_item.body) {\n                    _item.follows.Xfactor = (_item.x + _item.follows.Xdirection * _item.width / 2 - _item.follows.item.x) / (_item.follows.item.width * _item.follows.Xdirection);\n                } else {\n                    _item.follows.Xfactor = (_item.x - _item.follows.item.x) / (_item.follows.item.width * _item.follows.Xdirection);\n                }\n            } else if (_item.follows && !_item.followLocked && _item.follows.axis == "xy") {\n                if (_item.body) {\n                    _item.follows.Xfactor = (_item.x + _item.follows.Xdirection * _item.width / 2 - _item.follows.item.x) / (_item.follows.item.width * _item.follows.Xdirection);\n                    _item.follows.Yfactor = (_item.y + _item.follows.Ydirection * _item.height / 2 - _item.follows.item.y) / (_item.follows.item.height * _item.follows.Ydirection);\n                } else {\n                    //(_item.follows.item==__data.scene.road)&&console.log(_item.follows.Xfactor,_item.name,_item.x , _item.follows.item.x , _item.follows.item.width , _item.follows.Xdirection)\n                    _item.follows.Xfactor = (_item.x - _item.follows.item.x) / (_item.follows.item.width * _item.follows.Xdirection);\n                    _item.follows.Yfactor = (_item.y - _item.follows.item.y) / (_item.follows.item.height * _item.follows.Ydirection);\n                }\n            }\n            this.updateItemPoint(__data.scene.game, _item);\n        }\n    }, {\n        key: "moveItemTo",\n        value: function moveItemTo(__data) {\n            var _item = __data.props.item;\n            var _desiredX = String(_item.x / __data.scene.game.canvas.width) + "%";\n            var _desiredY = String(_item.y / __data.scene.game.canvas.height) + "%";\n            var _x = __data.props.x || _desiredX;\n            var _y = __data.props.y || _desiredY;\n            //this.checkBeforeMove(__data);\n            if (_item.follows && _item.followLocked && _item.follows.axis == "y" && _y != _desiredY) throw new Error("can\'t change y-position for item which already follows other item . Make \'followLocked\' of current item to false before change y-position");\n            if (_item.follows && _item.followLocked && _item.follows.axis == "x" && _x != _desiredX) throw new Error("can\'t change x-position for item which already follows other item . Make \'followLocked\' of current item to false before change x-position");\n            if (_item.body) {\n                _item.body.x = __data.scene.game.canvas.width * parseFloat(_x.split("%")[0]) / 100;\n                _item.body.y = __data.scene.game.canvas.height * parseFloat(_y.split("%")[0]) / 100;\n            } else {\n                _item.x = __data.scene.game.canvas.width * parseFloat(_x.split("%")[0]) / 100;\n                _item.y = __data.scene.game.canvas.height * parseFloat(_y.split("%")[0]) / 100;\n            }\n\n            this.updateItemPoint(__data.scene.game, _item);\n        }\n    }, {\n        key: "tweenXItem",\n        value: function tweenXItem(__data, _shouldAdd) {\n            var _scene = __data.scene;\n            var _item = __data.props.item;\n            var _props = __data.props || {};\n            var _angle = _item.angle + (_props.angle || 0);\n            var _x = _props.x ? _shouldAdd ? _item.x + parseFloat(_props.x.split("%")[0]) / 100 * __data.scene.game.canvas.width : parseFloat(_props.x.split("%")[0]) / 100 * __data.scene.game.canvas.width : _item.x;\n            var _y = _props.y ? _shouldAdd ? _item.y + parseFloat(_props.y.split("%")[0]) / 100 * __data.scene.game.canvas.height : parseFloat(_props.y.split("%")[0]) / 100 * __data.scene.game.canvas.height : _item.y;\n            if (_item.follows && _item.followLocked && _item.follows.axis == "y" && _y != _item.y) throw new Error("can\'t change the y-position for item which already follows other item . Make \'followLocked\' of current item to false before change y-position");\n            if (_item.follows && _item.followLocked && _item.follows.axis == "x" && _x != _item.x) throw new Error("can\'t change the x-position for item which already follows other item . Make \'followLocked\' of current item to false before change x-position");\n            //(_item._tween != null) && (_item._tween.stop(), _scene.game.tweens.remove(_item._tween));\n\n            this.move_twn = new Phaser.Tween(_item, _scene.game, _scene.game.tweens);\n            _item._tween = this.move_twn;\n            _props.alpha = _props.alpha == undefined ? 1 : _props.alpha;\n            _item.sizeRef = {\n                w: _scene.game.canvas.width,\n                h: _scene.game.canvas.height\n            };\n            this.move_twn.to({\n                angle: _angle,\n                x: _x,\n                alpha: _props.alpha\n            }, _props.time || 1000, _props.Ease || Phaser.Easing.Linear.None, true, _props.delay || 0).interpolation(function (v, k) {\n                return Phaser.Math.bezierInterpolation(v, k);\n            }).onComplete.add(function (_callbackContext, _props, _item, _scene) {\n                _item._tweenData = null;\n                _item._tween = null;\n                _item.tweenType = null;\n                if (_props.doOnComplete) {\n                    _props.doOnComplete.call(_callbackContext);\n                }\n                this.updateItemPoint(_scene.game, _item);\n            }.bind(this, _props.onCompleteContext || _scene, _props, _item, _scene));\n            this.move_twn.onUpdateCallback(function (_scene, _item, _tween, _tweenElapsed, _tweenData) {\n                !_item._tweenData && (_item._tweenData = _tweenData);\n                !_item._tween && (_item._tween = _tween);\n                !_item.tweenType && (_item.tweenType = "move");\n            }.bind(this, _scene, _item));\n        }\n    }, {\n        key: "tweenYItem",\n        value: function tweenYItem(__data, _shouldAdd) {\n            var _scene = __data.scene;\n            var _item = __data.props.item;\n            var _props = __data.props || {};\n            var _angle = _item.angle + (_props.angle || 0);\n            var _x = _props.x ? _shouldAdd ? _item.x + parseFloat(_props.x.split("%")[0]) / 100 * __data.scene.game.canvas.width : parseFloat(_props.x.split("%")[0]) / 100 * __data.scene.game.canvas.width : _item.x;\n            var _y = _props.y ? _shouldAdd ? _item.y + parseFloat(_props.y.split("%")[0]) / 100 * __data.scene.game.canvas.height : parseFloat(_props.y.split("%")[0]) / 100 * __data.scene.game.canvas.height : _item.y;\n            if (_item.follows && _item.followLocked && _item.follows.axis == "y" && _y != _item.y) throw new Error("can\'t change the y-position for item which already follows other item . Make \'followLocked\' of current item to false before change y-position");\n            if (_item.follows && _item.followLocked && _item.follows.axis == "x" && _x != _item.x) throw new Error("can\'t change the x-position for item which already follows other item . Make \'followLocked\' of current item to false before change x-position");\n            //(_item._tween != null) && (_item._tween.stop(), _scene.game.tweens.remove(_item._tween));\n            this.move_twn = new Phaser.Tween(_item, _scene.game, _scene.game.tweens);\n            _item._tween = this.move_twn;\n            _props.alpha = _props.alpha == undefined ? 1 : _props.alpha;\n            _item.sizeRef = {\n                w: _scene.game.canvas.width,\n                h: _scene.game.canvas.height\n            };\n            this.move_twn.to({\n                angle: _angle,\n                y: _y,\n                alpha: _props.alpha\n            }, _props.time || 1000, _props.Ease || Phaser.Easing.Linear.None, true, _props.delay || 0).interpolation(function (v, k) {\n                return Phaser.Math.bezierInterpolation(v, k);\n            }).onComplete.add(function (_callbackContext, _props, _item, _scene) {\n                _item._tweenData = null;\n                _item._tween = null;\n                _item.tweenType = null;\n                if (_props.doOnComplete) {\n                    _props.doOnComplete.call(_callbackContext);\n                }\n                this.updateItemPoint(_scene.game, _item);\n            }.bind(this, _props.onCompleteContext || _scene, _props, _item, _scene));\n            this.move_twn.onUpdateCallback(function (_scene, _item, _tween, _tweenElapsed, _tweenData) {\n                !_item._tweenData && (_item._tweenData = _tweenData);\n                !_item._tween && (_item._tween = _tween);\n                !_item.tweenType && (_item.tweenType = "move");\n            }.bind(this, _scene, _item));\n        }\n    }, {\n        key: "tweenItem",\n        value: function tweenItem(__data, _shouldAdd) {\n\n            var _scene = __data.scene;\n            var _item = __data.props.item;\n            var _props = __data.props || {};\n            var _angle = _item.angle + (_props.angle || 0);\n            var _x = _props.x ? _shouldAdd ? _item.x + parseFloat(_props.x.split("%")[0]) / 100 * __data.scene.game.canvas.width : parseFloat(_props.x.split("%")[0]) / 100 * __data.scene.game.canvas.width : _item.x;\n            var _y = _props.y ? _shouldAdd ? _item.y + parseFloat(_props.y.split("%")[0]) / 100 * __data.scene.game.canvas.height : parseFloat(_props.y.split("%")[0]) / 100 * __data.scene.game.canvas.height : _item.y;\n            if (_item.follows && _item.followLocked && _item.follows.axis == "y" && _y != _item.y) throw new Error("can\'t change the y-position for item which already follows other item . Make \'followLocked\' of current item to false before change y-position");\n            if (_item.follows && _item.followLocked && _item.follows.axis == "x" && _x != _item.x) throw new Error("can\'t change the x-position for item which already follows other item . Make \'followLocked\' of current item to false before change x-position");\n            //(_item._tween != null) && (_item._tween.stop(), _scene.game.tweens.remove(_item._tween));\n            this.move_twn = new Phaser.Tween(_item, _scene.game, _scene.game.tweens);\n            _item._tween = this.move_twn;\n            _props.alpha = _props.alpha == undefined ? 1 : _props.alpha;\n            _item.sizeRef = {\n                w: _scene.game.canvas.width,\n                h: _scene.game.canvas.height\n            };\n            this.move_twn.to({\n                angle: _angle,\n                x: _x,\n                y: _y,\n                alpha: _props.alpha\n            }, _props.time || 1000, _props.Ease || Phaser.Easing.Linear.None, true, _props.delay || 0).interpolation(function (v, k) {\n                return Phaser.Math.bezierInterpolation(v, k);\n            }).onComplete.add(function (_callbackContext, _props, _item, _scene) {\n                _item._tweenData = null;\n                _item._tween = null;\n                _item.tweenType = null;\n                if (_props.doOnComplete) {\n                    _props.doOnComplete.call(_callbackContext);\n                }\n                this.updateItemPoint(_scene.game, _item);\n            }.bind(this, _props.onCompleteContext || _scene, _props, _item, _scene));\n            this.move_twn.onUpdateCallback(function (_scene, _item, _tween, _tweenElapsed, _tweenData) {\n                !_item._tweenData && (_item._tweenData = _tweenData);\n                !_item._tween && (_item._tween = _tween);\n                !_item.tweenType && (_item.tweenType = "move");\n            }.bind(this, _scene, _item));\n        }\n    }, {\n        key: "applyVelocity",\n        value: function applyVelocity(__data, __props) {\n\n            this.responsiveObj.notify("item-follow-unlock", {\n                scene: __data,\n                props: {\n                    item: __props.item\n                }\n            });\n            this.XVelFact = parseFloat(__props.velX.split("%")[0]) / 100;\n            this.YVelFact = parseFloat(__props.velY.split("%")[0]) / 100;\n            this.YVelFact = Math.sign(this.YVelFact) * Math.sqrt(2 * __data.game.physics.box2d.gravity.y * Math.sign(this.YVelFact) * this.YVelFact * __data.game.height);\n\n            // console.log(this.YVelFact," YVelFact");\n            //__props.item.body.velocity.x = __props.velX/__props.item.body.mass;\n            __props.item.body.velocity.y = this.YVelFact; //this.XVelFact*__props.item.body.mass*__data.game.width*.0005;\n            // this.velocityInterval = setInterval(this.updatePosAccordingToVelocity.bind(this, __data, __props.item))\n        }\n    }, {\n        key: "updatePosAccordingToVelocity",\n        value: function updatePosAccordingToVelocity(__data, __item) {\n            if (__item.body) {\n                if (__item.body.velocity.x == 0 && __item.body.velocity.y == 0) {\n                    clearInterval(this.velocityInterval);\n                } else {\n                    this.updateItemPoint(__data.game, __item);\n                }\n            }\n        }\n    }, {\n        key: "scaleItem",\n        value: function scaleItem(__data, _shouldAdd, saveOnComplete) {\n            var _scene = __data.scene;\n            var _item = __data.props.item;\n            var _props = __data.props || {};\n            var _angle = _item.angle + (_props.angle || 0);\n            this._scaleFact = 1;\n\n            //this.scale_twn = ;\n            //console.log(_scene);\n            //(_item._scaleTwn != null) && (_item._scaleTwn.stop(), _scene.game.tweens.remove(_item._scaleTwn));\n\n            this.scale_twn = _scene.add.tween ? _scene.add.tween(this) : new Phaser.Tween(this, _scene.game, _scene.game.tweens);\n            _item._scaleTwn = this.scale_twn;\n            _item.sizeRef = {\n                w: _scene.game.canvas.width,\n                h: _scene.game.canvas.height\n            };\n            //console.log(_item.sizeRef)\n            this.scale_twn.to({\n                _scaleFact: parseFloat(_props.scaleVal.split("%")[0]) / 100\n            }, _props.time || 1000, _props.Ease || Phaser.Easing.Linear.None, true, _props.delay || 0);\n            this.scale_twn.onUpdateCallback(function (_scene, _item, _tween, _tweenElapsed, _tweenData) {\n                //console.log(this._scaleFact," ScaleFact");\n                !_item._tweenData && (_item._tweenData = _tweenData);\n                !_item._tween && (_item._tween = _tween);\n                !_item.scale_twn && (_item.scale_twn = _tween);\n                !_item.tweenType && (_item.tweenType = "scale");\n                this.updateItemScale(_scene, _item.name, this._scaleFact, false);\n            }.bind(this, _scene, _item), this);\n            this.scale_twn.onComplete.addOnce(function (_callbackContext, _props, _item, _scene, saveOnComplete) {\n                _item._tweenData = null;\n                _item._tween = null;\n                _item._scaleTwn = null;\n                _item.tweenType = null;\n                if (_props.doOnComplete) {\n                    _props.doOnComplete.call(_callbackContext);\n                }\n                this._scaleFact = parseFloat(_props.scaleVal.split("%")[0]) / 100;\n                this.updateItemScale(_scene, _item.name, this._scaleFact, saveOnComplete);\n            }.bind(this, _props.onCompleteContext || _scene, _props, _item, _scene, saveOnComplete), this);\n            this.scale_twn.start();\n        }\n    }, {\n        key: "lockItem",\n        value: function lockItem(_data) {\n            _data.props.item.followLocked = true;\n        }\n    }, {\n        key: "unlockItem",\n        value: function unlockItem(_data) {\n            _data.props.item.followLocked = false;\n        }\n    }]);\n\n    return ResponsiveGame;\n}(SignalHub);\n\nexports.ResponsiveGame = ResponsiveGame;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.Loader = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _global = __webpack_require__(0);\n\nvar _countdown = __webpack_require__(5);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Loader = exports.Loader = function (_Phaser$State) {\n    _inherits(Loader, _Phaser$State);\n\n    function Loader() {\n        _classCallCheck(this, Loader);\n\n        var _this = _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).call(this));\n\n        _this.loaderInt = null;\n        _this.dostCnt = 0;\n        _this.onLoad = _this.onLoad.bind(_this);\n        _this.gotoGameScreen = _this.gotoGameScreen.bind(_this);\n        return _this;\n    }\n\n    _createClass(Loader, [{\n        key: \'init\',\n        value: function init() {\n            this.loaderBG = this.game.add.sprite(0, 0, "loaderBG");\n            this.loaderDots = this.game.add.sprite(this.game.width * 0.5, this.game.height * 0.65, "loaderDots");\n            this.loaderDots.anchor.setTo(0.5);\n            this.loaderDots.name = "loader-dots";\n            this.loaderDots.resizeFactor = 2.2;\n\n            this.loaderBG.alpha = this.loaderDots.alpha = 0;\n            _global.Global.responsiveObj.notify("set-bg", {\n                BG: this.loaderBG\n            });\n            _global.Global.responsiveObj.notify("item-fill-and-resize-all", {\n                scene: this\n            });\n\n            setTimeout(function () {\n                this.loaderBG.alpha = this.loaderDots.alpha = 1;\n            }.bind(this), 0);\n            this.loaderGr = new Phaser.Graphics(this.game);\n            new Phaser.Group(this.game).addChild(this.loaderGr);\n            this.loaderGr.position.set(this.loaderDots.x - this.loaderDots.width / 2, this.loaderDots.y);\n            this.loaderInt = setInterval(this.animateDots.bind(this), 250);\n        }\n    }, {\n        key: \'animateDots\',\n        value: function animateDots() {\n            this.loaderGr.clear();\n\n            if (this.dostCnt < 5) {\n                this.dostCnt++;\n            } else {\n                this.dostCnt = 1;\n            }\n            for (var i = 0; i < this.dostCnt; i++) {\n                this.loaderGr.beginFill(0xffffff, 1.0);\n                this.loaderGr.drawCircle(this.game.width * .044 + i * (i == 4 ? this.game.width * .085 : this.game.width * .086), this.game.height * .016, this.game.width * .064);\n                this.loaderGr.beginFill(0xa8ef2b, 1.0);\n                this.loaderGr.drawCircle(this.game.width * .044 + i * (i == 4 ? this.game.width * .085 : this.game.width * .086), this.game.height * .016, this.game.width * .06);\n            }\n            this.loaderGr.endFill();\n        }\n    }, {\n        key: \'preload\',\n        value: function preload() {\n            var version = "1.0.1";\n            this.game.load.image("gameBG", "assets/gamebg.jpg?v=" + version);\n            this.game.load.atlas(\'sprite\', \'assets/sprite.png?v=\' + version, \'assets/sprite.json?v=\' + version, Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);\n            this.game.load.json(\'listJson\', \'json/list.json?v=\' + version);\n        }\n    }, {\n        key: \'onLoad\',\n        value: function onLoad(v) {}\n    }, {\n        key: \'create\',\n        value: function create() {\n\n            setTimeout(function () {\n                clearInterval(this.loaderInt);\n                this.loaderDots.destroy();\n                this.loaderGr.destroy();\n                this.countDown = new _countdown.CountDown(this.game, this.gotoGameScreen);\n                this.countDown.addCountDown({\n                    x: this.game.width * .5,\n                    y: this.game.height * .65,\n                    Ind: -2\n                });\n            }.bind(this), 0);\n        }\n    }, {\n        key: \'gotoGameScreen\',\n        value: function gotoGameScreen() {\n            _global.Global.responsiveObj.notify("clear", null);\n            this.game.state.start("Game");\n        }\n    }]);\n\n    return Loader;\n}(Phaser.State);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///18\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.Game = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _global = __webpack_require__(0);\n\nvar _questions = __webpack_require__(20);\n\nvar _paisa = __webpack_require__(21);\n\nvar _timer = __webpack_require__(22);\n\nvar _footer = __webpack_require__(23);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Game = exports.Game = function (_Phaser$State) {\n    _inherits(Game, _Phaser$State);\n\n    function Game() {\n        _classCallCheck(this, Game);\n\n        var _this = _possibleConstructorReturn(this, (Game.__proto__ || Object.getPrototypeOf(Game)).call(this));\n\n        _this.paiseObj = null;\n        _this.timerObj = null;\n        _this.footerObj = null;\n        _this.questionObj = null;\n        _this.questionJSON = null;\n        _this.gameMode = "";\n        _this.QnStatus = {\n            QnIndex: 0, QnTotal: 0\n        };\n\n        _this.onQnUpdate = _this.onQnUpdate.bind(_this);\n        _this.onTimerUpdate = _this.onTimerUpdate.bind(_this);\n        _this.onFooterUpdate = _this.onFooterUpdate.bind(_this);\n        return _this;\n    }\n\n    _createClass(Game, [{\n        key: \'init\',\n        value: function init() {\n            this.gameMode = "solo";\n            this.questionJSON = this.game.cache.getJSON("listJson");\n        }\n    }, {\n        key: \'create\',\n        value: function create() {\n            this.gameBG = this.game.add.sprite(0, 0, "gameBG");\n            this.paiseObj = new _paisa.Paisa(this.game);\n            this.timerObj = new _timer.Timer(this.game, this.onTimerUpdate);\n            this.footerObj = new _footer.Footer(this.game, this.onFooterUpdate);\n\n            this.paiseObj.init();\n            this.timerObj.init();\n            this.footerObj.init();\n\n            this.showGameQn();\n\n            _global.Global.responsiveObj.notify("set-bg", {\n                BG: this.gameBG\n            });\n            _global.Global.responsiveObj.notify("item-fill-and-resize-all", {\n                scene: this\n            });\n        }\n    }, {\n        key: \'onFooterUpdate\',\n        value: function onFooterUpdate(FtUpdate) {\n            switch (FtUpdate.type) {\n                case "exit-game":\n                    alert("exit Game");\n                    break;\n            }\n        }\n    }, {\n        key: \'onTimerUpdate\',\n        value: function onTimerUpdate(TmUpdate) {\n            switch (TmUpdate.type) {\n                case "check-answer":\n                    this.questionObj.checkAnswer();\n                    break;\n            }\n        }\n    }, {\n        key: \'onQnUpdate\',\n        value: function onQnUpdate(QnStatus) {\n            switch (QnStatus.type) {\n                case "update-footer":\n                    this.footerObj.updateQnStatus(QnStatus.data);\n                    break;\n                case "start-timer":\n                    this.timerObj.startTimer();\n                    break;\n                case "stop-timer":\n                    this.timerObj.stopTimer();\n                    break;\n                case "clock-update":\n                    this.timerObj.resetTime();\n                    break;\n                case "add-score":\n                    this.paiseObj.updateTotalPaisa(QnStatus.data.score);\n                    break;\n\n            }\n            //this.QnStatus = footerQnStatus;\n\n        }\n    }, {\n        key: \'showGameQn\',\n        value: function showGameQn() {\n            this.questionObj = new _questions.Question(this.game, this.questionJSON, this.onQnUpdate);\n            this.questionObj.init(this.gameMode);\n        }\n    }]);\n\n    return Game;\n}(Phaser.State);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vc3JjL3N0YXRlcy9HYW1lLmpzIl0sIm5hbWVzIjpbIkdhbWUiLCJwYWlzZU9iaiIsInRpbWVyT2JqIiwiZm9vdGVyT2JqIiwicXVlc3Rpb25PYmoiLCJxdWVzdGlvbkpTT04iLCJnYW1lTW9kZSIsIlFuU3RhdHVzIiwiUW5JbmRleCIsIlFuVG90YWwiLCJvblFuVXBkYXRlIiwiYmluZCIsIm9uVGltZXJVcGRhdGUiLCJvbkZvb3RlclVwZGF0ZSIsImdhbWUiLCJjYWNoZSIsImdldEpTT04iLCJnYW1lQkciLCJhZGQiLCJzcHJpdGUiLCJQYWlzYSIsIlRpbWVyIiwiRm9vdGVyIiwiaW5pdCIsInNob3dHYW1lUW4iLCJHbG9iYWwiLCJyZXNwb25zaXZlT2JqIiwibm90aWZ5IiwiQkciLCJzY2VuZSIsIkZ0VXBkYXRlIiwidHlwZSIsImFsZXJ0IiwiVG1VcGRhdGUiLCJjaGVja0Fuc3dlciIsInVwZGF0ZVFuU3RhdHVzIiwiZGF0YSIsInN0YXJ0VGltZXIiLCJzdG9wVGltZXIiLCJyZXNldFRpbWUiLCJ1cGRhdGVUb3RhbFBhaXNhIiwic2NvcmUiLCJRdWVzdGlvbiIsIlBoYXNlciIsIlN0YXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7SUFFYUEsSSxXQUFBQSxJOzs7QUFDVCxvQkFBYztBQUFBOztBQUFBOztBQUdWLGNBQUtDLFFBQUwsR0FBZ0IsSUFBaEI7QUFDQSxjQUFLQyxRQUFMLEdBQWdCLElBQWhCO0FBQ0EsY0FBS0MsU0FBTCxHQUFpQixJQUFqQjtBQUNBLGNBQUtDLFdBQUwsR0FBbUIsSUFBbkI7QUFDQSxjQUFLQyxZQUFMLEdBQW9CLElBQXBCO0FBQ0EsY0FBS0MsUUFBTCxHQUFjLEVBQWQ7QUFDQSxjQUFLQyxRQUFMLEdBQWdCO0FBQ1pDLHFCQUFTLENBREcsRUFDQUMsU0FBUztBQURULFNBQWhCOztBQUlBLGNBQUtDLFVBQUwsR0FBa0IsTUFBS0EsVUFBTCxDQUFnQkMsSUFBaEIsT0FBbEI7QUFDQSxjQUFLQyxhQUFMLEdBQXFCLE1BQUtBLGFBQUwsQ0FBbUJELElBQW5CLE9BQXJCO0FBQ0EsY0FBS0UsY0FBTCxHQUFzQixNQUFLQSxjQUFMLENBQW9CRixJQUFwQixPQUF0QjtBQWZVO0FBZ0JiOzs7OytCQUNNO0FBQ0gsaUJBQUtMLFFBQUwsR0FBYyxNQUFkO0FBQ0EsaUJBQUtELFlBQUwsR0FBb0IsS0FBS1MsSUFBTCxDQUFVQyxLQUFWLENBQWdCQyxPQUFoQixDQUF3QixVQUF4QixDQUFwQjtBQUNIOzs7aUNBQ1E7QUFDTCxpQkFBS0MsTUFBTCxHQUFjLEtBQUtILElBQUwsQ0FBVUksR0FBVixDQUFjQyxNQUFkLENBQXFCLENBQXJCLEVBQXdCLENBQXhCLEVBQTJCLFFBQTNCLENBQWQ7QUFDQSxpQkFBS2xCLFFBQUwsR0FBZ0IsSUFBSW1CLFlBQUosQ0FBVSxLQUFLTixJQUFmLENBQWhCO0FBQ0EsaUJBQUtaLFFBQUwsR0FBZ0IsSUFBSW1CLFlBQUosQ0FBVSxLQUFLUCxJQUFmLEVBQXFCLEtBQUtGLGFBQTFCLENBQWhCO0FBQ0EsaUJBQUtULFNBQUwsR0FBaUIsSUFBSW1CLGNBQUosQ0FBVyxLQUFLUixJQUFoQixFQUFzQixLQUFLRCxjQUEzQixDQUFqQjs7QUFHQSxpQkFBS1osUUFBTCxDQUFjc0IsSUFBZDtBQUNBLGlCQUFLckIsUUFBTCxDQUFjcUIsSUFBZDtBQUNBLGlCQUFLcEIsU0FBTCxDQUFlb0IsSUFBZjs7QUFFQSxpQkFBS0MsVUFBTDs7QUFJQUMsMkJBQU9DLGFBQVAsQ0FBcUJDLE1BQXJCLENBQTRCLFFBQTVCLEVBQXNDO0FBQ2xDQyxvQkFBSSxLQUFLWDtBQUR5QixhQUF0QztBQUdBUSwyQkFBT0MsYUFBUCxDQUFxQkMsTUFBckIsQ0FBNEIsMEJBQTVCLEVBQXdEO0FBQ3BERSx1QkFBTztBQUQ2QyxhQUF4RDtBQUtIOzs7dUNBQ2NDLFEsRUFBVTtBQUNyQixvQkFBUUEsU0FBU0MsSUFBakI7QUFDSSxxQkFBSyxXQUFMO0FBQ0lDLDBCQUFNLFdBQU47QUFDQTtBQUhSO0FBS0g7OztzQ0FFYUMsUSxFQUFVO0FBQ3BCLG9CQUFRQSxTQUFTRixJQUFqQjtBQUNJLHFCQUFLLGNBQUw7QUFDSSx5QkFBSzNCLFdBQUwsQ0FBaUI4QixXQUFqQjtBQUNBO0FBSFI7QUFLSDs7O21DQUNVM0IsUSxFQUFVO0FBQ2pCLG9CQUFRQSxTQUFTd0IsSUFBakI7QUFDSSxxQkFBSyxlQUFMO0FBQ0kseUJBQUs1QixTQUFMLENBQWVnQyxjQUFmLENBQThCNUIsU0FBUzZCLElBQXZDO0FBQ0E7QUFDSixxQkFBSyxhQUFMO0FBQ0kseUJBQUtsQyxRQUFMLENBQWNtQyxVQUFkO0FBQ0E7QUFDSixxQkFBSyxZQUFMO0FBQ0kseUJBQUtuQyxRQUFMLENBQWNvQyxTQUFkO0FBQ0E7QUFDSixxQkFBSyxjQUFMO0FBQ0kseUJBQUtwQyxRQUFMLENBQWNxQyxTQUFkO0FBQ0E7QUFDSixxQkFBSyxXQUFMO0FBQ0kseUJBQUt0QyxRQUFMLENBQWN1QyxnQkFBZCxDQUErQmpDLFNBQVM2QixJQUFULENBQWNLLEtBQTdDO0FBQ0E7O0FBZlI7QUFrQkE7O0FBR0g7OztxQ0FDWTtBQUNULGlCQUFLckMsV0FBTCxHQUFtQixJQUFJc0MsbUJBQUosQ0FBYSxLQUFLNUIsSUFBbEIsRUFBd0IsS0FBS1QsWUFBN0IsRUFBMkMsS0FBS0ssVUFBaEQsQ0FBbkI7QUFDQSxpQkFBS04sV0FBTCxDQUFpQm1CLElBQWpCLENBQXNCLEtBQUtqQixRQUEzQjtBQUVIOzs7O0VBeEZxQnFDLE9BQU9DLEsiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHbG9iYWwgfSBmcm9tICcuLi91dGlsL2dsb2JhbCc7XHJcbmltcG9ydCB7IFF1ZXN0aW9uIH0gZnJvbSAnLi4vcGFydGlhbC9xdWVzdGlvbnMnO1xyXG5pbXBvcnQgeyBQYWlzYSB9IGZyb20gJy4uL3BhcnRpYWwvcGFpc2EnO1xyXG5pbXBvcnQgeyBUaW1lciB9IGZyb20gJy4uL3BhcnRpYWwvdGltZXInO1xyXG5pbXBvcnQgeyBGb290ZXIgfSBmcm9tICcuLi9wYXJ0aWFsL2Zvb3Rlcic7XHJcblxyXG5leHBvcnQgY2xhc3MgR2FtZSBleHRlbmRzIFBoYXNlci5TdGF0ZSB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG5cclxuICAgICAgICB0aGlzLnBhaXNlT2JqID0gbnVsbDtcclxuICAgICAgICB0aGlzLnRpbWVyT2JqID0gbnVsbDtcclxuICAgICAgICB0aGlzLmZvb3Rlck9iaiA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5xdWVzdGlvbk9iaiA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5xdWVzdGlvbkpTT04gPSBudWxsO1xyXG4gICAgICAgIHRoaXMuZ2FtZU1vZGU9XCJcIjtcclxuICAgICAgICB0aGlzLlFuU3RhdHVzID0ge1xyXG4gICAgICAgICAgICBRbkluZGV4OiAwLCBRblRvdGFsOiAwXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLm9uUW5VcGRhdGUgPSB0aGlzLm9uUW5VcGRhdGUuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLm9uVGltZXJVcGRhdGUgPSB0aGlzLm9uVGltZXJVcGRhdGUuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLm9uRm9vdGVyVXBkYXRlID0gdGhpcy5vbkZvb3RlclVwZGF0ZS5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICB0aGlzLmdhbWVNb2RlPVwic29sb1wiO1xyXG4gICAgICAgIHRoaXMucXVlc3Rpb25KU09OID0gdGhpcy5nYW1lLmNhY2hlLmdldEpTT04oXCJsaXN0SnNvblwiKTtcclxuICAgIH1cclxuICAgIGNyZWF0ZSgpIHtcclxuICAgICAgICB0aGlzLmdhbWVCRyA9IHRoaXMuZ2FtZS5hZGQuc3ByaXRlKDAsIDAsIFwiZ2FtZUJHXCIpO1xyXG4gICAgICAgIHRoaXMucGFpc2VPYmogPSBuZXcgUGFpc2EodGhpcy5nYW1lKTtcclxuICAgICAgICB0aGlzLnRpbWVyT2JqID0gbmV3IFRpbWVyKHRoaXMuZ2FtZSwgdGhpcy5vblRpbWVyVXBkYXRlKTtcclxuICAgICAgICB0aGlzLmZvb3Rlck9iaiA9IG5ldyBGb290ZXIodGhpcy5nYW1lLCB0aGlzLm9uRm9vdGVyVXBkYXRlKTtcclxuXHJcblxyXG4gICAgICAgIHRoaXMucGFpc2VPYmouaW5pdCgpO1xyXG4gICAgICAgIHRoaXMudGltZXJPYmouaW5pdCgpO1xyXG4gICAgICAgIHRoaXMuZm9vdGVyT2JqLmluaXQoKTtcclxuXHJcbiAgICAgICAgdGhpcy5zaG93R2FtZVFuKCk7XHJcblxyXG5cclxuXHJcbiAgICAgICAgR2xvYmFsLnJlc3BvbnNpdmVPYmoubm90aWZ5KFwic2V0LWJnXCIsIHtcclxuICAgICAgICAgICAgQkc6IHRoaXMuZ2FtZUJHXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgR2xvYmFsLnJlc3BvbnNpdmVPYmoubm90aWZ5KFwiaXRlbS1maWxsLWFuZC1yZXNpemUtYWxsXCIsIHtcclxuICAgICAgICAgICAgc2NlbmU6IHRoaXNcclxuICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgfVxyXG4gICAgb25Gb290ZXJVcGRhdGUoRnRVcGRhdGUpIHtcclxuICAgICAgICBzd2l0Y2ggKEZ0VXBkYXRlLnR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSBcImV4aXQtZ2FtZVwiOlxyXG4gICAgICAgICAgICAgICAgYWxlcnQoXCJleGl0IEdhbWVcIik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25UaW1lclVwZGF0ZShUbVVwZGF0ZSkge1xyXG4gICAgICAgIHN3aXRjaCAoVG1VcGRhdGUudHlwZSkge1xyXG4gICAgICAgICAgICBjYXNlIFwiY2hlY2stYW5zd2VyXCI6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnF1ZXN0aW9uT2JqLmNoZWNrQW5zd2VyKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvblFuVXBkYXRlKFFuU3RhdHVzKSB7XHJcbiAgICAgICAgc3dpdGNoIChRblN0YXR1cy50eXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJ1cGRhdGUtZm9vdGVyXCI6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZvb3Rlck9iai51cGRhdGVRblN0YXR1cyhRblN0YXR1cy5kYXRhKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwic3RhcnQtdGltZXJcIjpcclxuICAgICAgICAgICAgICAgIHRoaXMudGltZXJPYmouc3RhcnRUaW1lcigpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJzdG9wLXRpbWVyXCI6XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRpbWVyT2JqLnN0b3BUaW1lcigpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJjbG9jay11cGRhdGVcIjpcclxuICAgICAgICAgICAgICAgIHRoaXMudGltZXJPYmoucmVzZXRUaW1lKCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImFkZC1zY29yZVwiOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5wYWlzZU9iai51cGRhdGVUb3RhbFBhaXNhKFFuU3RhdHVzLmRhdGEuc2NvcmUpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICAvL3RoaXMuUW5TdGF0dXMgPSBmb290ZXJRblN0YXR1cztcclxuXHJcblxyXG4gICAgfVxyXG4gICAgc2hvd0dhbWVRbigpIHtcclxuICAgICAgICB0aGlzLnF1ZXN0aW9uT2JqID0gbmV3IFF1ZXN0aW9uKHRoaXMuZ2FtZSwgdGhpcy5xdWVzdGlvbkpTT04sIHRoaXMub25RblVwZGF0ZSk7XHJcbiAgICAgICAgdGhpcy5xdWVzdGlvbk9iai5pbml0KHRoaXMuZ2FtZU1vZGUpO1xyXG5cclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.Question = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _global = __webpack_require__(0);\n\nvar _countdown = __webpack_require__(5);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Question = exports.Question = function (_Phaser$Group) {\n    _inherits(Question, _Phaser$Group);\n\n    function Question(game, _json, _onQnUpdate) {\n        _classCallCheck(this, Question);\n\n        var _this = _possibleConstructorReturn(this, (Question.__proto__ || Object.getPrototypeOf(Question)).call(this, game));\n\n        _this.JSON = _json;\n        _this.onQnUpdate = _onQnUpdate;\n\n        _this.wrongPanel = null;\n        _this.correctPanel = null;\n        _this.questionScore = 0;\n        _this.Question = null;\n        _this.questionIndex = -1;\n        _this.queSec = null;\n        _this.correntAnswer = null;\n        _this.wrongTween = null;\n        _this.gameMode = "";\n        _this.answers = [];\n\n        _this.startQn = _this.startQn.bind(_this);\n        return _this;\n    }\n\n    _createClass(Question, [{\n        key: \'init\',\n        value: function init(_gameMode) {\n            this.gameMode = this.gameMode;\n            this.coinSpr = this.game.add.sprite(this.game.width * .5, this.game.height * .08, "sprite", "coin");\n            this.countDown = new _countdown.CountDown(this.game, this.startQn);\n            this.coinSpr.anchor.setTo(0.5);\n            this.coinSpr.name = "question-coin-icon-" + String(this.questionIndex);\n            this.coinSpr.resizeFactor = 4;\n            this.addElements();\n\n            _global.Global.responsiveObj.notify("item-fill-and-resize-all", {\n                scene: this\n            });\n\n            this.resetQuestion();\n            this.onQnUpdate({\n                type: "update-footer", data: {\n                    QnIndex: this.questionIndex + 1,\n                    QnTotal: Object.keys(this.JSON).length\n                }\n\n            });\n        }\n    }, {\n        key: \'resetQuestion\',\n        value: function resetQuestion() {\n            this.wrongPanel && (this.wrongTween.stop(), this.wrongTween = null, this.wrongPanel.destroy(), this.wrongPanel = null);\n            this.correctPanel && (this.correctPanel.destroy(), this.correctPanel = null);\n\n            /// setTimeout(this.hideElements.bind(this), 0);\n            if (this.questionIndex < Object.keys(this.JSON).length - 1) {\n                console.log(this.questionIndex, Object.keys(this.JSON).length - 1);\n                this.startQn();\n                this.clockResetUpdate();\n            } else {\n                this.hideElements();\n            }\n        }\n    }, {\n        key: \'clockResetUpdate\',\n        value: function clockResetUpdate() {\n            this.onQnUpdate({\n                type: "clock-update", data: {\n                    QnIndex: this.questionIndex + 1,\n                    QnTotal: Object.keys(this.JSON).length\n                }\n\n            });\n        }\n    }, {\n        key: \'addCountDown\',\n        value: function addCountDown() {\n\n            this.countDown.addCountDown({\n                x: this.game.width * .5,\n                y: this.game.height * .5,\n                Ind: this.questionIndex\n            });\n        }\n    }, {\n        key: \'startQn\',\n        value: function startQn() {\n            //alert("A")\n            //this.countDown.removeCountDown();\n            this.showElements();\n            this.showQuestion();\n        }\n    }, {\n        key: \'hideElements\',\n        value: function hideElements() {\n            for (var i = 1; i <= 4; i++) {\n                this["opt" + String(i)].kill();\n                this["opt" + String(i) + "Txt"].kill();\n            }\n            this.rupeeIcon.kill();\n            this.queScore.kill();\n            this.Question.kill();\n        }\n    }, {\n        key: \'showElements\',\n        value: function showElements() {\n            for (var i = 1; i <= 4; i++) {\n                this["opt" + String(i)].revive();\n                this["opt" + String(i) + "Txt"].revive();\n            }\n            this.rupeeIcon.revive();\n            this.queScore.revive();\n            this.Question.revive();\n        }\n    }, {\n        key: \'addElements\',\n        value: function addElements() {\n            this.rupeeIcon = this.game.add.sprite(0, 0, "sprite", "rupee-icon");\n            this.Question = this.game.add.text(this.game.width * .5, 0, "", {\n                font: "60px ESTRE",\n                fill: "#ffffff",\n                align: "center",\n                wordWrap: true,\n                wordWrapWidth: this.game.width * .8\n\n            });\n\n            this.opt1 = this.game.add.sprite(this.game.width * .5, this.game.height * .46, "sprite", "opt");\n            this.opt2 = this.game.add.sprite(0, 0, "sprite", "opt");\n            this.opt3 = this.game.add.sprite(0, 0, "sprite", "opt");\n            this.opt4 = this.game.add.sprite(0, 0, "sprite", "opt");\n\n            this.queScore = this.game.add.text(this.game.width * .5, 0, "", {\n                font: "70px ESTRE",\n                fill: "#03cae6",\n                align: "center"\n            });\n            this.opt1Txt = this.game.add.text(this.game.width * .5, 0, "", {\n                font: "50px ESTRE",\n                fill: "#ffffff",\n                align: "center"\n            });\n            this.opt2Txt = this.game.add.text(this.game.width * .5, 0, "", {\n                font: "50px ESTRE",\n                fill: "#ffffff",\n                align: "center"\n            });\n            this.opt3Txt = this.game.add.text(this.game.width * .5, 0, "", {\n                font: "50px ESTRE",\n                fill: "#ffffff",\n                align: "center"\n            });\n            this.opt4Txt = this.game.add.text(this.game.width * .5, 0, "", {\n                font: "50px ESTRE",\n                fill: "#ffffff",\n                align: "center"\n            });\n            this.Question.lineSpacing = -this.game.width * .005;\n\n            this.rupeeIcon.name = "question-rupee-icon-" + String(this.questionIndex);\n            this.queScore.name = "question-score-text-" + String(this.questionIndex);\n            this.Question.name = "Question-" + String(this.questionIndex);\n            this.opt1.name = "question-opt-1-" + String(this.questionIndex);\n            this.opt2.name = "question-opt-2-" + String(this.questionIndex);\n            this.opt3.name = "question-opt-3-" + String(this.questionIndex);\n            this.opt4.name = "question-opt-4-" + String(this.questionIndex);\n            this.opt1Txt.name = "question-opt-1-text-" + String(this.questionIndex);\n            this.opt2Txt.name = "question-opt-2-text-" + String(this.questionIndex);\n            this.opt3Txt.name = "question-opt-3-text-" + String(this.questionIndex);\n            this.opt4Txt.name = "question-opt-4-text-" + String(this.questionIndex);\n\n            this.rupeeIcon.resizeFactor = 35;\n            this.queScore.resizeFactor = 1;\n            this.Question.resizeFactor = 1;\n            this.opt1.resizeFactor = 1;\n            this.opt2.resizeFactor = 1;\n            this.opt3.resizeFactor = 1;\n            this.opt4.resizeFactor = 1;\n            this.opt1Txt.resizeFactor = 1;\n            this.opt2Txt.resizeFactor = 1;\n            this.opt3Txt.resizeFactor = 1;\n            this.opt4Txt.resizeFactor = 1;\n\n            this.rupeeIcon.anchor.setTo(0.5);\n\n            this.queScore.anchor.setTo(0, 0.5);\n            this.Question.anchor.setTo(0.5, 1);\n            this.opt1.anchor.setTo(0.5);\n            this.opt2.anchor.setTo(0.5);\n            this.opt3.anchor.setTo(0.5);\n            this.opt4.anchor.setTo(0.5);\n            this.opt1Txt.anchor.setTo(0.5);\n            this.opt2Txt.anchor.setTo(0.5);\n            this.opt3Txt.anchor.setTo(0.5);\n            this.opt4Txt.anchor.setTo(0.5);\n\n            this.rupeeIcon.follows = {\n                item: this.coinSpr,\n                axis: "xy",\n                Xdirection: -1,\n                Xfactor: 0.2,\n                Ydirection: 1,\n                Yfactor: .52\n            };\n            this.queScore.follows = {\n                item: this.rupeeIcon,\n                axis: "xy",\n                Ydirection: 1,\n                Yfactor: .1,\n                Xdirection: 1,\n                Xfactor: 1\n            };\n            this.opt2.follows = {\n                item: this.opt1,\n                axis: "xy",\n                Xdirection: 1,\n                Xfactor: 0,\n                Ydirection: 1,\n                Yfactor: 1.2\n            };\n            this.opt3.follows = {\n                item: this.opt2,\n                axis: "xy",\n                Xdirection: 1,\n                Xfactor: 0,\n                Ydirection: 1,\n                Yfactor: 1.2\n            };\n            this.opt4.follows = {\n                item: this.opt3,\n                axis: "xy",\n                Xdirection: 1,\n                Xfactor: 0,\n                Ydirection: 1,\n                Yfactor: 1.2\n            };\n\n            this.opt1Txt.follows = {\n                item: this.opt1,\n                axis: "xy",\n                Xdirection: 1,\n                Xfactor: 0,\n                Ydirection: 1,\n                Yfactor: 0\n            };\n            this.opt2Txt.follows = {\n                item: this.opt2,\n                axis: "xy",\n                Xdirection: 1,\n                Xfactor: 0,\n                Ydirection: 1,\n                Yfactor: 0\n            };\n            this.opt3Txt.follows = {\n                item: this.opt3,\n                axis: "xy",\n                Xdirection: 1,\n                Xfactor: 0,\n                Ydirection: 1,\n                Yfactor: 0\n            };\n            this.opt4Txt.follows = {\n                item: this.opt4,\n                axis: "xy",\n                Xdirection: 1,\n                Xfactor: 0,\n                Ydirection: 1,\n                Yfactor: 0\n            };\n        }\n    }, {\n        key: \'activateOptions\',\n        value: function activateOptions() {\n            for (var i = 1; i <= 4; i++) {\n                this["opt" + String(i)].inputEnabled = true;\n                this["opt" + String(i)].events.onInputDown.addOnce(this.saveAnswer.bind(this, this["opt" + String(i) + "Txt"], this["opt" + String(i)]));\n            }\n        }\n    }, {\n        key: \'saveAnswer\',\n        value: function saveAnswer() {\n            this.answers = [];\n        }\n    }, {\n        key: \'deActivateOptions\',\n        value: function deActivateOptions() {\n            for (var i = 1; i <= 4; i++) {\n                this["opt" + String(i)].events.destroy();\n            }\n        }\n    }, {\n        key: \'onAnswerCorrect\',\n        value: function onAnswerCorrect() {\n            this.onQnUpdate({\n                type: "add-score", data: {\n                    score: this.queSec.score\n                }\n\n            });\n        }\n    }, {\n        key: \'checkAnswer\',\n        value: function checkAnswer(_selectedAnswerObj1, _selectedAnswerObj2) {\n            console.log(_selectedAnswerObj1.text, "_selectedAnswer");\n            this.correctPanel = this.game.add.sprite(0, 0, "sprite", "ans_green");\n            this.correctPanel.anchor.setTo(0.5);\n            if (this.correntAnswer == _selectedAnswerObj1.text) {\n                _selectedAnswerObj2.addChild(this.correctPanel);\n                this.onAnswerCorrect();\n            } else {\n                this.wrongPanel = this.game.add.sprite(0, 0, "sprite", "wrong");\n                this.wrongPanel.anchor.setTo(0.5);\n                _selectedAnswerObj2.addChild(this.wrongPanel);\n                for (var i = 1; i <= 4; i++) {\n                    if (this["opt" + String(i) + "Txt"].text == this.correntAnswer) {\n                        this["opt" + String(i)].addChild(this.correctPanel);\n                        break;\n                    }\n                }\n                this.wrongPanel.alpha = 0;\n                this.wrongTween = this.game.add.tween(this.wrongPanel).to({ alpha: 1 }, 250, Phaser.Easing.Linear.None, true, 0, 350, true);\n            }\n\n            this.deActivateOptions();\n            this.onQnUpdate({\n                type: "stop-timer"\n            });\n\n            setTimeout(this.resetQuestion.bind(this), 1500);\n        }\n    }, {\n        key: \'showQuestion\',\n        value: function showQuestion() {\n            this.questionIndex++;\n            this.queSec = this.JSON[this.questionIndex];\n            this.Question.text = this.queSec.question;\n            this.opt1Txt.text = this.queSec.options[0];\n            this.opt2Txt.text = this.queSec.options[1];\n            this.opt3Txt.text = this.queSec.options[2];\n            this.opt4Txt.text = this.queSec.options[3];\n            this.queScore.text = this.queSec.score;\n            this.correntAnswer = this.queSec.answer;\n            this.rupeeIcon.x = (this.game.width - (this.rupeeIcon.width * .5 + this.queScore.width)) / 2;\n            _global.Global.responsiveObj.notify("item-fill-and-resize-one", {\n                scene: this,\n                props: {\n                    item: this.queScore\n                }\n            });\n            setTimeout(function () {\n                this.Question.y = this.opt1.y - this.opt1.height * .75;\n            }.bind(this), 0);\n            this.onQnUpdate({\n                type: "update-footer", data: {\n                    QnIndex: this.questionIndex + 1,\n                    QnTotal: Object.keys(this.JSON).length\n                }\n\n            });\n            this.onQnUpdate({\n                type: "start-timer"\n            });\n            this.activateOptions();\n        }\n    }]);\n\n    return Question;\n}(Phaser.Group);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///20\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.Paisa = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _global = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Paisa = exports.Paisa = function (_Phaser$Group) {\n    _inherits(Paisa, _Phaser$Group);\n\n    function Paisa(game) {\n        _classCallCheck(this, Paisa);\n\n        var _this = _possibleConstructorReturn(this, (Paisa.__proto__ || Object.getPrototypeOf(Paisa)).call(this, game));\n\n        _this.paisaTotal = 0;\n        return _this;\n    }\n\n    _createClass(Paisa, [{\n        key: "init",\n        value: function init() {\n            this.paisaIcon = this.game.add.sprite(this.game.width * .07, this.game.width * .07, "sprite", "paisa");\n            this.paisaTxt = this.game.add.text(0, 0, String(this.paisaTotal), {\n                font: "60px ESTRE",\n                fill: "#03cae6"\n            });\n\n            this.paisaIcon.anchor.setTo(0.5);\n            this.paisaTxt.anchor.setTo(0, 0.5);\n\n            this.paisaIcon.name = "game-paisa-icon";\n            this.paisaTxt.name = "game-paisa-text";\n\n            this.paisaIcon.resizeFactor = 20;\n            this.paisaTxt.resizeFactor = 1;\n\n            this.paisaTxt.follows = {\n                item: this.paisaIcon,\n                axis: "xy",\n                Xdirection: 1,\n                Xfactor: .75,\n                Ydirection: 1,\n                Yfactor: .05\n            };\n\n            _global.Global.responsiveObj.notify("item-fill-and-resize-all", {\n                scene: this\n            });\n        }\n    }, {\n        key: "updateTotalPaisa",\n        value: function updateTotalPaisa(_score) {\n            this.paisaTotal += _score;\n            this.paisaTxt.text = String(this.paisaTotal);\n        }\n    }]);\n\n    return Paisa;\n}(Phaser.Group);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vc3JjL3BhcnRpYWwvcGFpc2EuanMiXSwibmFtZXMiOlsiUGFpc2EiLCJnYW1lIiwicGFpc2FUb3RhbCIsInBhaXNhSWNvbiIsImFkZCIsInNwcml0ZSIsIndpZHRoIiwicGFpc2FUeHQiLCJ0ZXh0IiwiU3RyaW5nIiwiZm9udCIsImZpbGwiLCJhbmNob3IiLCJzZXRUbyIsIm5hbWUiLCJyZXNpemVGYWN0b3IiLCJmb2xsb3dzIiwiaXRlbSIsImF4aXMiLCJYZGlyZWN0aW9uIiwiWGZhY3RvciIsIllkaXJlY3Rpb24iLCJZZmFjdG9yIiwiR2xvYmFsIiwicmVzcG9uc2l2ZU9iaiIsIm5vdGlmeSIsInNjZW5lIiwiX3Njb3JlIiwiUGhhc2VyIiwiR3JvdXAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7Ozs7OztJQUVhQSxLLFdBQUFBLEs7OztBQUNULG1CQUFZQyxJQUFaLEVBQWlCO0FBQUE7O0FBQUEsa0hBQ1BBLElBRE87O0FBR2IsY0FBS0MsVUFBTCxHQUFnQixDQUFoQjtBQUhhO0FBSWhCOzs7OytCQUNLO0FBQ0YsaUJBQUtDLFNBQUwsR0FBaUIsS0FBS0YsSUFBTCxDQUFVRyxHQUFWLENBQWNDLE1BQWQsQ0FBcUIsS0FBS0osSUFBTCxDQUFVSyxLQUFWLEdBQWtCLEdBQXZDLEVBQTRDLEtBQUtMLElBQUwsQ0FBVUssS0FBVixHQUFrQixHQUE5RCxFQUFtRSxRQUFuRSxFQUE2RSxPQUE3RSxDQUFqQjtBQUNBLGlCQUFLQyxRQUFMLEdBQWdCLEtBQUtOLElBQUwsQ0FBVUcsR0FBVixDQUFjSSxJQUFkLENBQW1CLENBQW5CLEVBQXNCLENBQXRCLEVBQXlCQyxPQUFPLEtBQUtQLFVBQVosQ0FBekIsRUFBa0Q7QUFDOURRLHNCQUFNLFlBRHdEO0FBRTlEQyxzQkFBTTtBQUZ3RCxhQUFsRCxDQUFoQjs7QUFLQSxpQkFBS1IsU0FBTCxDQUFlUyxNQUFmLENBQXNCQyxLQUF0QixDQUE0QixHQUE1QjtBQUNBLGlCQUFLTixRQUFMLENBQWNLLE1BQWQsQ0FBcUJDLEtBQXJCLENBQTJCLENBQTNCLEVBQTZCLEdBQTdCOztBQUVBLGlCQUFLVixTQUFMLENBQWVXLElBQWYsR0FBc0IsaUJBQXRCO0FBQ0EsaUJBQUtQLFFBQUwsQ0FBY08sSUFBZCxHQUFxQixpQkFBckI7O0FBRUEsaUJBQUtYLFNBQUwsQ0FBZVksWUFBZixHQUE4QixFQUE5QjtBQUNBLGlCQUFLUixRQUFMLENBQWNRLFlBQWQsR0FBNkIsQ0FBN0I7O0FBRUEsaUJBQUtSLFFBQUwsQ0FBY1MsT0FBZCxHQUFzQjtBQUNsQkMsc0JBQUssS0FBS2QsU0FEUTtBQUVsQmUsc0JBQUssSUFGYTtBQUdsQkMsNEJBQVcsQ0FITztBQUlsQkMseUJBQVEsR0FKVTtBQUtsQkMsNEJBQVcsQ0FMTztBQU1sQkMseUJBQVE7QUFOVSxhQUF0Qjs7QUFTQUMsMkJBQU9DLGFBQVAsQ0FBcUJDLE1BQXJCLENBQTRCLDBCQUE1QixFQUF3RDtBQUNwREMsdUJBQU87QUFENkMsYUFBeEQ7QUFHSDs7O3lDQUVnQkMsTSxFQUFPO0FBQ3BCLGlCQUFLekIsVUFBTCxJQUFpQnlCLE1BQWpCO0FBQ0EsaUJBQUtwQixRQUFMLENBQWNDLElBQWQsR0FBbUJDLE9BQU8sS0FBS1AsVUFBWixDQUFuQjtBQUNIOzs7O0VBdkNzQjBCLE9BQU9DLEsiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHbG9iYWwgfSBmcm9tICcuLi91dGlsL2dsb2JhbCc7XHJcblxyXG5leHBvcnQgY2xhc3MgUGFpc2EgZXh0ZW5kcyBQaGFzZXIuR3JvdXB7XHJcbiAgICBjb25zdHJ1Y3RvcihnYW1lKXtcclxuICAgICAgICBzdXBlcihnYW1lKTtcclxuXHJcbiAgICAgICAgdGhpcy5wYWlzYVRvdGFsPTA7XHJcbiAgICB9XHJcbiAgICBpbml0KCl7XHJcbiAgICAgICAgdGhpcy5wYWlzYUljb24gPSB0aGlzLmdhbWUuYWRkLnNwcml0ZSh0aGlzLmdhbWUud2lkdGggKiAuMDcsIHRoaXMuZ2FtZS53aWR0aCAqIC4wNywgXCJzcHJpdGVcIiwgXCJwYWlzYVwiKVxyXG4gICAgICAgIHRoaXMucGFpc2FUeHQgPSB0aGlzLmdhbWUuYWRkLnRleHQoMCwgMCwgU3RyaW5nKHRoaXMucGFpc2FUb3RhbCksIHtcclxuICAgICAgICAgICAgZm9udDogXCI2MHB4IEVTVFJFXCIsXHJcbiAgICAgICAgICAgIGZpbGw6IFwiIzAzY2FlNlwiXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMucGFpc2FJY29uLmFuY2hvci5zZXRUbygwLjUpO1xyXG4gICAgICAgIHRoaXMucGFpc2FUeHQuYW5jaG9yLnNldFRvKDAsMC41KTtcclxuXHJcbiAgICAgICAgdGhpcy5wYWlzYUljb24ubmFtZSA9IFwiZ2FtZS1wYWlzYS1pY29uXCI7XHJcbiAgICAgICAgdGhpcy5wYWlzYVR4dC5uYW1lID0gXCJnYW1lLXBhaXNhLXRleHRcIjtcclxuXHJcbiAgICAgICAgdGhpcy5wYWlzYUljb24ucmVzaXplRmFjdG9yID0gMjA7XHJcbiAgICAgICAgdGhpcy5wYWlzYVR4dC5yZXNpemVGYWN0b3IgPSAxO1xyXG5cclxuICAgICAgICB0aGlzLnBhaXNhVHh0LmZvbGxvd3M9e1xyXG4gICAgICAgICAgICBpdGVtOnRoaXMucGFpc2FJY29uLFxyXG4gICAgICAgICAgICBheGlzOlwieHlcIixcclxuICAgICAgICAgICAgWGRpcmVjdGlvbjoxLFxyXG4gICAgICAgICAgICBYZmFjdG9yOi43NSxcclxuICAgICAgICAgICAgWWRpcmVjdGlvbjoxLFxyXG4gICAgICAgICAgICBZZmFjdG9yOi4wNVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgR2xvYmFsLnJlc3BvbnNpdmVPYmoubm90aWZ5KFwiaXRlbS1maWxsLWFuZC1yZXNpemUtYWxsXCIsIHtcclxuICAgICAgICAgICAgc2NlbmU6IHRoaXNcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVUb3RhbFBhaXNhKF9zY29yZSl7XHJcbiAgICAgICAgdGhpcy5wYWlzYVRvdGFsKz1fc2NvcmU7XHJcbiAgICAgICAgdGhpcy5wYWlzYVR4dC50ZXh0PVN0cmluZyh0aGlzLnBhaXNhVG90YWwpO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.Timer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _global = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Timer = exports.Timer = function (_Phaser$Group) {\n    _inherits(Timer, _Phaser$Group);\n\n    function Timer(game, _onTimerUpdate) {\n        _classCallCheck(this, Timer);\n\n        var _this = _possibleConstructorReturn(this, (Timer.__proto__ || Object.getPrototypeOf(Timer)).call(this, game));\n\n        _this.onTimerUpdate = _onTimerUpdate;\n        _this.isActive = false;\n        _this.timerIcon = null;\n        _this.roundArcTween = null;\n        _this.timerTxt = null;\n        _this.timeTotal = 10;\n        _this.timerSec = 10;\n        _this.elapsedTime = 0;\n        _this.prevTime = 10;\n        _this.arcInProcess = false;\n        _this.timerArcVal = { min: 0, max: 360 };\n\n        _this.resetTime = _this.resetTime.bind(_this);\n        return _this;\n    }\n\n    _createClass(Timer, [{\n        key: "init",\n        value: function init() {\n            this.timerIcon = this.game.add.sprite(this.game.width / 2, this.game.height * .92, "sprite", "timer");\n            this.circleGr = new Phaser.Group(this.game);\n            this.timerTxt = this.game.add.text(0, 0, this.timerSec >= 10 ? String(this.timerSec) : "0" + String(this.timerSec), {\n                font: "75px BRLNSB",\n                fill: "#ffffff"\n            });\n            this.timerArc = new Phaser.Graphics(this.game);\n            this.circleGr.addChild(this.timerArc);\n            this.timerArc.position.set(this.game.width * .4995, this.game.height * .921);\n            this.timerArc.angle -= 90;\n            this.updateTimerArc(this.timerStatus);\n\n            this.timerIcon.anchor.setTo(0.5);\n            this.timerTxt.anchor.setTo(0.5);\n            this.timerIcon.name = "game-timer-icon";\n            this.timerIcon.resizeFactor = 4;\n            this.timerTxt.name = "game-timer-text";\n            this.timerTxt.resizeFactor = 1;\n\n            this.timerTxt.follows = {\n                item: this.timerIcon,\n                axis: "xy",\n                Xdirection: 1,\n                Xfactor: 0,\n                Ydirection: 1,\n                Yfactor: 0\n            };\n\n            _global.Global.responsiveObj.notify("item-fill-and-resize-all", {\n                scene: this\n            });\n\n            this.updateTimerArc(this.timerSec * 1.2);\n        }\n    }, {\n        key: "startTimer",\n        value: function startTimer() {\n            this.isActive = true;\n        }\n    }, {\n        key: "stopTimer",\n        value: function stopTimer() {\n            this.isActive = false;\n        }\n    }, {\n        key: "updateTimerArc",\n        value: function updateTimerArc(_total) {\n            this.timerArcVal.max = 36 * (1 + _total);\n            if (this.roundArcTween != null) {\n                this.roundArcTween.stop();\n                this.roundArcTween = null;\n            }\n            this.roundArcTween = this.game.add.tween(this.timerArcVal).to({ max: 36 * _total }, 990, Phaser.Easing.Linear.None);\n            this.setArcStatus(true);\n            this.roundArcTween.onComplete.addOnce(this.setArcStatus.bind(this, false));\n            this.roundArcTween.start();\n        }\n    }, {\n        key: "resetTime",\n        value: function resetTime() {\n            this.elapsedTime = 0;\n            this.prevTime = this.timerSec = 10;\n            this.timerTxt.text = String(this.timerSec);\n            this.timerArcVal = { min: 0, max: 360 };\n            this.timerArc.clear();\n            this.timerArc.lineStyle(this.game.width * .019, 0x07fc35);\n            this.timerArc.arc(0, 0, this.game.width * .06, this.game.math.degToRad(0), this.game.math.degToRad(this.timerArcVal.max), false);\n        }\n    }, {\n        key: "setArcStatus",\n        value: function setArcStatus(_status) {\n            this.arcInProcess = _status;\n        }\n    }, {\n        key: "update",\n        value: function update() {\n\n            if (this.isActive) {\n                this.elapsedTime += 33 / 2;\n                this.timerSec = 10 - Math.floor(this.elapsedTime / 1000 % 60);\n                if (this.timerSec < 0) {\n                    this.stopTimer();\n                    this.onTimerUpdate({\n                        type: "check-answer"\n                    });\n                    return;\n                }\n\n                this.timerTxt.text = this.timerSec >= 10 ? String(this.timerSec) : "0" + String(this.timerSec);\n                if (this.prevTime != this.timerSec) {\n                    this.updateTimerArc(this.timerSec);\n                }\n                this.prevTime = this.timerSec;\n            }\n            if (this.arcInProcess) {\n                this.timerArc.clear();\n                this.timerArc.lineStyle(this.game.width * .019, 0x07fc35);\n                this.timerArc.arc(0, 0, this.game.width * .06, this.game.math.degToRad(0), this.game.math.degToRad(this.timerArcVal.max), false);\n            }\n        }\n    }]);\n\n    return Timer;\n}(Phaser.Group);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.Footer = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _global = __webpack_require__(0);\n\nvar _volumeContol = __webpack_require__(24);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Footer = exports.Footer = function (_Phaser$Group) {\n    _inherits(Footer, _Phaser$Group);\n\n    function Footer(game, _onFooterUpdate) {\n        _classCallCheck(this, Footer);\n\n        var _this = _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).call(this, game));\n\n        _this.onFooterUpdate = _onFooterUpdate;\n        _this.QnIndex = 0;\n        _this.QnTotal = 0;\n        _this.volumeToggle = 1;\n\n        _this.onVolumeClick = _this.onVolumeClick.bind(_this);\n        _this.sendExitStatus = _this.sendExitStatus.bind(_this);\n        return _this;\n    }\n\n    _createClass(Footer, [{\n        key: \'init\',\n        value: function init() {\n            this.container = new Phaser.Graphics(this.game);\n            this.addChild(this.container);\n            this.container.position.set(0, this.game.height * .92);\n            this.container.beginFill(0x0eb2ef, 1);\n            this.container.drawRect(0, 0, this.game.width, this.game.height * .08);\n            this.container.endFill();\n\n            this.footerQInfo = this.game.add.text(this.game.width * .04, 0, "", {\n                font: "60px ESTRE",\n                fill: "#ffffff"\n            });\n            this.volumeBtn = this.game.add.sprite(this.game.width * .96, this.game.height * .96, "sprite", "volumeOn");\n            this.leaveBtn = this.game.add.sprite(0, 0, "sprite", "leave");\n\n            this.volumeBtn.anchor.setTo(1, 0.5);\n            this.leaveBtn.anchor.setTo(1, 0.5);\n            this.footerQInfo.anchor.setTo(0, .5);\n\n            this.volumeBtn.name = "footer-volume-btn";\n            this.leaveBtn.name = "footer-leave-btn";\n            this.footerQInfo.name = "q-info-text";\n\n            this.volumeBtn.resizeFactor = 11;\n            this.leaveBtn.resizeFactor = 6.5;\n\n            this.leaveBtn.follows = {\n                item: this.volumeBtn,\n                axis: "xy",\n                Xdirection: -1,\n                Xfactor: 1.3,\n                Ydirection: 1,\n                Yfactor: 0\n            };\n            this.footerQInfo.follows = {\n                item: this.volumeBtn,\n                axis: "y",\n                Ydirection: 1,\n                Yfactor: 0.02\n            };\n\n            _global.Global.responsiveObj.notify("item-fill-and-resize-all", {\n                scene: this\n            });\n\n            this.volumeObj = new _volumeContol.VolumeControl(this);\n\n            this.volumeBtn.inputEnabled = true;\n            this.volumeBtn.events.onInputDown.add(this.onVolumeClick);\n            this.leaveBtn.inputEnabled = true;\n            this.leaveBtn.events.onInputDown.add(this.sendExitStatus);\n        }\n    }, {\n        key: \'sendExitStatus\',\n        value: function sendExitStatus() {\n            this.onFooterUpdate({\n                type: "exit-game"\n            });\n        }\n    }, {\n        key: \'onVolumeClick\',\n        value: function onVolumeClick() {\n            this.volumeToggle *= -1;\n            this.volumeBtn.frameName = this.volumeToggle == -1 ? "volumeOff" : "volumeOn";\n            this.volumeObj.swapMusic(this.volumeToggle);\n        }\n    }, {\n        key: \'updateQnStatus\',\n        value: function updateQnStatus(_obj) {\n            this.QnIndex = _obj.QnIndex;\n            this.QnTotal = _obj.QnTotal;\n            this.footerQInfo.text = "Q. " + (this.QnIndex < 10 ? "0" + String(this.QnIndex) : String(this.QnIndex)) + "/ " + (this.QnTotal < 10 ? "0" + String(this.QnTotal) : String(this.QnTotal));\n        }\n    }]);\n\n    return Footer;\n}(Phaser.Group);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vc3JjL3BhcnRpYWwvZm9vdGVyLmpzIl0sIm5hbWVzIjpbIkZvb3RlciIsImdhbWUiLCJfb25Gb290ZXJVcGRhdGUiLCJvbkZvb3RlclVwZGF0ZSIsIlFuSW5kZXgiLCJRblRvdGFsIiwidm9sdW1lVG9nZ2xlIiwib25Wb2x1bWVDbGljayIsImJpbmQiLCJzZW5kRXhpdFN0YXR1cyIsImNvbnRhaW5lciIsIlBoYXNlciIsIkdyYXBoaWNzIiwiYWRkQ2hpbGQiLCJwb3NpdGlvbiIsInNldCIsImhlaWdodCIsImJlZ2luRmlsbCIsImRyYXdSZWN0Iiwid2lkdGgiLCJlbmRGaWxsIiwiZm9vdGVyUUluZm8iLCJhZGQiLCJ0ZXh0IiwiZm9udCIsImZpbGwiLCJ2b2x1bWVCdG4iLCJzcHJpdGUiLCJsZWF2ZUJ0biIsImFuY2hvciIsInNldFRvIiwibmFtZSIsInJlc2l6ZUZhY3RvciIsImZvbGxvd3MiLCJpdGVtIiwiYXhpcyIsIlhkaXJlY3Rpb24iLCJYZmFjdG9yIiwiWWRpcmVjdGlvbiIsIllmYWN0b3IiLCJHbG9iYWwiLCJyZXNwb25zaXZlT2JqIiwibm90aWZ5Iiwic2NlbmUiLCJ2b2x1bWVPYmoiLCJWb2x1bWVDb250cm9sIiwiaW5wdXRFbmFibGVkIiwiZXZlbnRzIiwib25JbnB1dERvd24iLCJ0eXBlIiwiZnJhbWVOYW1lIiwic3dhcE11c2ljIiwiX29iaiIsIlN0cmluZyIsIkdyb3VwIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7SUFFYUEsTSxXQUFBQSxNOzs7QUFDVCxvQkFBWUMsSUFBWixFQUFpQkMsZUFBakIsRUFBa0M7QUFBQTs7QUFBQSxvSEFDeEJELElBRHdCOztBQUc5QixjQUFLRSxjQUFMLEdBQW9CRCxlQUFwQjtBQUNBLGNBQUtFLE9BQUwsR0FBZSxDQUFmO0FBQ0EsY0FBS0MsT0FBTCxHQUFlLENBQWY7QUFDQSxjQUFLQyxZQUFMLEdBQWtCLENBQWxCOztBQUVBLGNBQUtDLGFBQUwsR0FBb0IsTUFBS0EsYUFBTCxDQUFtQkMsSUFBbkIsT0FBcEI7QUFDQSxjQUFLQyxjQUFMLEdBQXFCLE1BQUtBLGNBQUwsQ0FBb0JELElBQXBCLE9BQXJCO0FBVDhCO0FBVWpDOzs7OytCQUNNO0FBQ0gsaUJBQUtFLFNBQUwsR0FBaUIsSUFBSUMsT0FBT0MsUUFBWCxDQUFvQixLQUFLWCxJQUF6QixDQUFqQjtBQUNBLGlCQUFLWSxRQUFMLENBQWMsS0FBS0gsU0FBbkI7QUFDQSxpQkFBS0EsU0FBTCxDQUFlSSxRQUFmLENBQXdCQyxHQUF4QixDQUE0QixDQUE1QixFQUErQixLQUFLZCxJQUFMLENBQVVlLE1BQVYsR0FBbUIsR0FBbEQ7QUFDQSxpQkFBS04sU0FBTCxDQUFlTyxTQUFmLENBQXlCLFFBQXpCLEVBQW1DLENBQW5DO0FBQ0EsaUJBQUtQLFNBQUwsQ0FBZVEsUUFBZixDQUF3QixDQUF4QixFQUEyQixDQUEzQixFQUE4QixLQUFLakIsSUFBTCxDQUFVa0IsS0FBeEMsRUFBK0MsS0FBS2xCLElBQUwsQ0FBVWUsTUFBVixHQUFtQixHQUFsRTtBQUNBLGlCQUFLTixTQUFMLENBQWVVLE9BQWY7O0FBRUEsaUJBQUtDLFdBQUwsR0FBbUIsS0FBS3BCLElBQUwsQ0FBVXFCLEdBQVYsQ0FBY0MsSUFBZCxDQUFtQixLQUFLdEIsSUFBTCxDQUFVa0IsS0FBVixHQUFrQixHQUFyQyxFQUEwQyxDQUExQyxFQUE2QyxFQUE3QyxFQUFpRDtBQUNoRUssc0JBQU0sWUFEMEQ7QUFFaEVDLHNCQUFNO0FBRjBELGFBQWpELENBQW5CO0FBSUEsaUJBQUtDLFNBQUwsR0FBaUIsS0FBS3pCLElBQUwsQ0FBVXFCLEdBQVYsQ0FBY0ssTUFBZCxDQUFxQixLQUFLMUIsSUFBTCxDQUFVa0IsS0FBVixHQUFrQixHQUF2QyxFQUE0QyxLQUFLbEIsSUFBTCxDQUFVZSxNQUFWLEdBQW1CLEdBQS9ELEVBQW9FLFFBQXBFLEVBQThFLFVBQTlFLENBQWpCO0FBQ0EsaUJBQUtZLFFBQUwsR0FBZ0IsS0FBSzNCLElBQUwsQ0FBVXFCLEdBQVYsQ0FBY0ssTUFBZCxDQUFxQixDQUFyQixFQUF3QixDQUF4QixFQUEyQixRQUEzQixFQUFxQyxPQUFyQyxDQUFoQjs7QUFHQSxpQkFBS0QsU0FBTCxDQUFlRyxNQUFmLENBQXNCQyxLQUF0QixDQUE0QixDQUE1QixFQUErQixHQUEvQjtBQUNBLGlCQUFLRixRQUFMLENBQWNDLE1BQWQsQ0FBcUJDLEtBQXJCLENBQTJCLENBQTNCLEVBQThCLEdBQTlCO0FBQ0EsaUJBQUtULFdBQUwsQ0FBaUJRLE1BQWpCLENBQXdCQyxLQUF4QixDQUE4QixDQUE5QixFQUFpQyxFQUFqQzs7QUFFQSxpQkFBS0osU0FBTCxDQUFlSyxJQUFmLEdBQXNCLG1CQUF0QjtBQUNBLGlCQUFLSCxRQUFMLENBQWNHLElBQWQsR0FBcUIsa0JBQXJCO0FBQ0EsaUJBQUtWLFdBQUwsQ0FBaUJVLElBQWpCLEdBQXdCLGFBQXhCOztBQUdBLGlCQUFLTCxTQUFMLENBQWVNLFlBQWYsR0FBOEIsRUFBOUI7QUFDQSxpQkFBS0osUUFBTCxDQUFjSSxZQUFkLEdBQTZCLEdBQTdCOztBQUdBLGlCQUFLSixRQUFMLENBQWNLLE9BQWQsR0FBd0I7QUFDcEJDLHNCQUFNLEtBQUtSLFNBRFM7QUFFcEJTLHNCQUFNLElBRmM7QUFHcEJDLDRCQUFZLENBQUMsQ0FITztBQUlwQkMseUJBQVMsR0FKVztBQUtwQkMsNEJBQVksQ0FMUTtBQU1wQkMseUJBQVM7QUFOVyxhQUF4QjtBQVFBLGlCQUFLbEIsV0FBTCxDQUFpQlksT0FBakIsR0FBMkI7QUFDdkJDLHNCQUFNLEtBQUtSLFNBRFk7QUFFdkJTLHNCQUFNLEdBRmlCO0FBR3ZCRyw0QkFBWSxDQUhXO0FBSXZCQyx5QkFBUztBQUpjLGFBQTNCOztBQU9BQywyQkFBT0MsYUFBUCxDQUFxQkMsTUFBckIsQ0FBNEIsMEJBQTVCLEVBQXdEO0FBQ3BEQyx1QkFBTztBQUQ2QyxhQUF4RDs7QUFJQSxpQkFBS0MsU0FBTCxHQUFnQixJQUFJQywyQkFBSixDQUFrQixJQUFsQixDQUFoQjs7QUFFQSxpQkFBS25CLFNBQUwsQ0FBZW9CLFlBQWYsR0FBNEIsSUFBNUI7QUFDQSxpQkFBS3BCLFNBQUwsQ0FBZXFCLE1BQWYsQ0FBc0JDLFdBQXRCLENBQWtDMUIsR0FBbEMsQ0FBc0MsS0FBS2YsYUFBM0M7QUFDQSxpQkFBS3FCLFFBQUwsQ0FBY2tCLFlBQWQsR0FBMkIsSUFBM0I7QUFDQSxpQkFBS2xCLFFBQUwsQ0FBY21CLE1BQWQsQ0FBcUJDLFdBQXJCLENBQWlDMUIsR0FBakMsQ0FBc0MsS0FBS2IsY0FBM0M7QUFDSDs7O3lDQUNlO0FBQ1osaUJBQUtOLGNBQUwsQ0FBb0I7QUFDaEI4QyxzQkFBSztBQURXLGFBQXBCO0FBR0g7Ozt3Q0FFYztBQUNYLGlCQUFLM0MsWUFBTCxJQUFtQixDQUFDLENBQXBCO0FBQ0EsaUJBQUtvQixTQUFMLENBQWV3QixTQUFmLEdBQTBCLEtBQUs1QyxZQUFMLElBQW1CLENBQUMsQ0FBckIsR0FBd0IsV0FBeEIsR0FBb0MsVUFBN0Q7QUFDQSxpQkFBS3NDLFNBQUwsQ0FBZU8sU0FBZixDQUF5QixLQUFLN0MsWUFBOUI7QUFDSDs7O3VDQUVjOEMsSSxFQUFNO0FBQ2pCLGlCQUFLaEQsT0FBTCxHQUFlZ0QsS0FBS2hELE9BQXBCO0FBQ0EsaUJBQUtDLE9BQUwsR0FBZStDLEtBQUsvQyxPQUFwQjtBQUNBLGlCQUFLZ0IsV0FBTCxDQUFpQkUsSUFBakIsR0FBd0IsU0FBVSxLQUFLbkIsT0FBTCxHQUFlLEVBQWhCLEdBQXNCLE1BQU1pRCxPQUFPLEtBQUtqRCxPQUFaLENBQTVCLEdBQW1EaUQsT0FBTyxLQUFLakQsT0FBWixDQUE1RCxJQUFvRixJQUFwRixJQUE2RixLQUFLQyxPQUFMLEdBQWUsRUFBaEIsR0FBc0IsTUFBTWdELE9BQU8sS0FBS2hELE9BQVosQ0FBNUIsR0FBbURnRCxPQUFPLEtBQUtoRCxPQUFaLENBQS9JLENBQXhCO0FBQ0g7Ozs7RUFuRnVCTSxPQUFPMkMsSyIsImZpbGUiOiIyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdsb2JhbCB9IGZyb20gJy4uL3V0aWwvZ2xvYmFsJztcclxuaW1wb3J0IHtWb2x1bWVDb250cm9sfSBmcm9tICcuL3ZvbHVtZUNvbnRvbCc7XHJcblxyXG5leHBvcnQgY2xhc3MgRm9vdGVyIGV4dGVuZHMgUGhhc2VyLkdyb3VwIHtcclxuICAgIGNvbnN0cnVjdG9yKGdhbWUsX29uRm9vdGVyVXBkYXRlKSB7XHJcbiAgICAgICAgc3VwZXIoZ2FtZSk7XHJcblxyXG4gICAgICAgIHRoaXMub25Gb290ZXJVcGRhdGU9X29uRm9vdGVyVXBkYXRlO1xyXG4gICAgICAgIHRoaXMuUW5JbmRleCA9IDA7XHJcbiAgICAgICAgdGhpcy5RblRvdGFsID0gMDtcclxuICAgICAgICB0aGlzLnZvbHVtZVRvZ2dsZT0xO1xyXG5cclxuICAgICAgICB0aGlzLm9uVm9sdW1lQ2xpY2s9IHRoaXMub25Wb2x1bWVDbGljay5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuc2VuZEV4aXRTdGF0dXM9IHRoaXMuc2VuZEV4aXRTdGF0dXMuYmluZCh0aGlzKTtcclxuICAgIH1cclxuICAgIGluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBuZXcgUGhhc2VyLkdyYXBoaWNzKHRoaXMuZ2FtZSk7XHJcbiAgICAgICAgdGhpcy5hZGRDaGlsZCh0aGlzLmNvbnRhaW5lcik7XHJcbiAgICAgICAgdGhpcy5jb250YWluZXIucG9zaXRpb24uc2V0KDAsIHRoaXMuZ2FtZS5oZWlnaHQgKiAuOTIpO1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmJlZ2luRmlsbCgweDBlYjJlZiwgMSk7XHJcbiAgICAgICAgdGhpcy5jb250YWluZXIuZHJhd1JlY3QoMCwgMCwgdGhpcy5nYW1lLndpZHRoLCB0aGlzLmdhbWUuaGVpZ2h0ICogLjA4KTtcclxuICAgICAgICB0aGlzLmNvbnRhaW5lci5lbmRGaWxsKCk7XHJcblxyXG4gICAgICAgIHRoaXMuZm9vdGVyUUluZm8gPSB0aGlzLmdhbWUuYWRkLnRleHQodGhpcy5nYW1lLndpZHRoICogLjA0LCAwLCBcIlwiLCB7XHJcbiAgICAgICAgICAgIGZvbnQ6IFwiNjBweCBFU1RSRVwiLFxyXG4gICAgICAgICAgICBmaWxsOiBcIiNmZmZmZmZcIlxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMudm9sdW1lQnRuID0gdGhpcy5nYW1lLmFkZC5zcHJpdGUodGhpcy5nYW1lLndpZHRoICogLjk2LCB0aGlzLmdhbWUuaGVpZ2h0ICogLjk2LCBcInNwcml0ZVwiLCBcInZvbHVtZU9uXCIpO1xyXG4gICAgICAgIHRoaXMubGVhdmVCdG4gPSB0aGlzLmdhbWUuYWRkLnNwcml0ZSgwLCAwLCBcInNwcml0ZVwiLCBcImxlYXZlXCIpO1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy52b2x1bWVCdG4uYW5jaG9yLnNldFRvKDEsIDAuNSk7XHJcbiAgICAgICAgdGhpcy5sZWF2ZUJ0bi5hbmNob3Iuc2V0VG8oMSwgMC41KTtcclxuICAgICAgICB0aGlzLmZvb3RlclFJbmZvLmFuY2hvci5zZXRUbygwLCAuNSk7XHJcblxyXG4gICAgICAgIHRoaXMudm9sdW1lQnRuLm5hbWUgPSBcImZvb3Rlci12b2x1bWUtYnRuXCI7XHJcbiAgICAgICAgdGhpcy5sZWF2ZUJ0bi5uYW1lID0gXCJmb290ZXItbGVhdmUtYnRuXCI7XHJcbiAgICAgICAgdGhpcy5mb290ZXJRSW5mby5uYW1lID0gXCJxLWluZm8tdGV4dFwiO1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy52b2x1bWVCdG4ucmVzaXplRmFjdG9yID0gMTE7XHJcbiAgICAgICAgdGhpcy5sZWF2ZUJ0bi5yZXNpemVGYWN0b3IgPSA2LjU7XHJcblxyXG5cclxuICAgICAgICB0aGlzLmxlYXZlQnRuLmZvbGxvd3MgPSB7XHJcbiAgICAgICAgICAgIGl0ZW06IHRoaXMudm9sdW1lQnRuLFxyXG4gICAgICAgICAgICBheGlzOiBcInh5XCIsXHJcbiAgICAgICAgICAgIFhkaXJlY3Rpb246IC0xLFxyXG4gICAgICAgICAgICBYZmFjdG9yOiAxLjMsXHJcbiAgICAgICAgICAgIFlkaXJlY3Rpb246IDEsXHJcbiAgICAgICAgICAgIFlmYWN0b3I6IDBcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5mb290ZXJRSW5mby5mb2xsb3dzID0ge1xyXG4gICAgICAgICAgICBpdGVtOiB0aGlzLnZvbHVtZUJ0bixcclxuICAgICAgICAgICAgYXhpczogXCJ5XCIsXHJcbiAgICAgICAgICAgIFlkaXJlY3Rpb246IDEsXHJcbiAgICAgICAgICAgIFlmYWN0b3I6IDAuMDJcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEdsb2JhbC5yZXNwb25zaXZlT2JqLm5vdGlmeShcIml0ZW0tZmlsbC1hbmQtcmVzaXplLWFsbFwiLCB7XHJcbiAgICAgICAgICAgIHNjZW5lOiB0aGlzXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMudm9sdW1lT2JqPSBuZXcgVm9sdW1lQ29udHJvbCh0aGlzKTtcclxuXHJcbiAgICAgICAgdGhpcy52b2x1bWVCdG4uaW5wdXRFbmFibGVkPXRydWU7XHJcbiAgICAgICAgdGhpcy52b2x1bWVCdG4uZXZlbnRzLm9uSW5wdXREb3duLmFkZCh0aGlzLm9uVm9sdW1lQ2xpY2spO1xyXG4gICAgICAgIHRoaXMubGVhdmVCdG4uaW5wdXRFbmFibGVkPXRydWU7XHJcbiAgICAgICAgdGhpcy5sZWF2ZUJ0bi5ldmVudHMub25JbnB1dERvd24uYWRkICh0aGlzLnNlbmRFeGl0U3RhdHVzKVxyXG4gICAgfVxyXG4gICAgc2VuZEV4aXRTdGF0dXMoKXtcclxuICAgICAgICB0aGlzLm9uRm9vdGVyVXBkYXRlKHtcclxuICAgICAgICAgICAgdHlwZTpcImV4aXQtZ2FtZVwiXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBvblZvbHVtZUNsaWNrKCl7XHJcbiAgICAgICAgdGhpcy52b2x1bWVUb2dnbGUqPS0xO1xyXG4gICAgICAgIHRoaXMudm9sdW1lQnRuLmZyYW1lTmFtZT0odGhpcy52b2x1bWVUb2dnbGU9PS0xKT9cInZvbHVtZU9mZlwiOlwidm9sdW1lT25cIjtcclxuICAgICAgICB0aGlzLnZvbHVtZU9iai5zd2FwTXVzaWModGhpcy52b2x1bWVUb2dnbGUpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVFuU3RhdHVzKF9vYmopIHtcclxuICAgICAgICB0aGlzLlFuSW5kZXggPSBfb2JqLlFuSW5kZXg7XHJcbiAgICAgICAgdGhpcy5RblRvdGFsID0gX29iai5RblRvdGFsO1xyXG4gICAgICAgIHRoaXMuZm9vdGVyUUluZm8udGV4dCA9IFwiUS4gXCIgKyAoKHRoaXMuUW5JbmRleCA8IDEwKSA/IFwiMFwiICsgU3RyaW5nKHRoaXMuUW5JbmRleCkgOiBTdHJpbmcodGhpcy5RbkluZGV4KSkgKyBcIi8gXCIgKyAoKHRoaXMuUW5Ub3RhbCA8IDEwKSA/IFwiMFwiICsgU3RyaW5nKHRoaXMuUW5Ub3RhbCkgOiBTdHJpbmcodGhpcy5RblRvdGFsKSk7XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///23\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar VolumeControl = exports.VolumeControl = function () {\n    function VolumeControl() {\n        _classCallCheck(this, VolumeControl);\n\n        this.musicOn = true;\n\n        this.swapMusic = this.swapMusic.bind(this);\n    }\n\n    _createClass(VolumeControl, [{\n        key: "swapMusic",\n        value: function swapMusic(_status) {\n            this.musicOn = _status == 1;\n        }\n    }]);\n\n    return VolumeControl;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vc3JjL3BhcnRpYWwvdm9sdW1lQ29udG9sLmpzIl0sIm5hbWVzIjpbIlZvbHVtZUNvbnRyb2wiLCJtdXNpY09uIiwic3dhcE11c2ljIiwiYmluZCIsIl9zdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7SUFBYUEsYSxXQUFBQSxhO0FBQ1QsNkJBQWM7QUFBQTs7QUFDVixhQUFLQyxPQUFMLEdBQWUsSUFBZjs7QUFFQSxhQUFLQyxTQUFMLEdBQWlCLEtBQUtBLFNBQUwsQ0FBZUMsSUFBZixDQUFvQixJQUFwQixDQUFqQjtBQUNIOzs7O2tDQUdTQyxPLEVBQVM7QUFDZixpQkFBS0gsT0FBTCxHQUFnQkcsV0FBVyxDQUEzQjtBQUNIIiwiZmlsZSI6IjI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFZvbHVtZUNvbnRyb2wge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5tdXNpY09uID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgdGhpcy5zd2FwTXVzaWMgPSB0aGlzLnN3YXBNdXNpYy5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBzd2FwTXVzaWMoX3N0YXR1cykge1xyXG4gICAgICAgIHRoaXMubXVzaWNPbiA9IChfc3RhdHVzID09IDEpO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///24\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\nexports.SocketAPI = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _colyseus = __webpack_require__(26);\n\nvar Colyseus = _interopRequireWildcard(_colyseus);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar SocketAPI = exports.SocketAPI = function () {\n    function SocketAPI() {\n        _classCallCheck(this, SocketAPI);\n\n        this.connectionObj = null;\n\n        this.socketUrl = "ws://3.229.239.234:2567"; //ws://3.229.239.234:2567\n        this.endPoints = {\n            "start": "/start",\n            "exit": "/exit",\n            "submit": "/submit",\n            "scoreboard": "/scoreboard"\n\n        };\n\n        this.open = this.open.bind(this);\n        this.onOpen = this.onOpen.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n    }\n\n    _createClass(SocketAPI, [{\n        key: "open",\n        value: function open() {\n            console.log("Opening");\n            this.connectionObj = new WebSocket(this.socketUrl); //Colyseus.Client(this.socketUrl);\n            this.connectionObj.onopen = this.onOpen;\n        }\n    }, {\n        key: "onOpen",\n        value: function onOpen() {\n            console.log("Connection Successfull!");\n            this.connectionObj.send("My name is John");\n        }\n    }, {\n        key: "onMessage",\n        value: function onMessage(_msg) {\n            console.log(_msg, " message Recieved");\n        }\n    }]);\n\n    return SocketAPI;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vc3JjL3NvY2tldEFwaS9zb2NrZXRBcGkuanMiXSwibmFtZXMiOlsiQ29seXNldXMiLCJTb2NrZXRBUEkiLCJjb25uZWN0aW9uT2JqIiwic29ja2V0VXJsIiwiZW5kUG9pbnRzIiwib3BlbiIsImJpbmQiLCJvbk9wZW4iLCJvbk1lc3NhZ2UiLCJjb25zb2xlIiwibG9nIiwiV2ViU29ja2V0Iiwib25vcGVuIiwic2VuZCIsIl9tc2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztJQUFZQSxROzs7Ozs7SUFFQ0MsUyxXQUFBQSxTO0FBQ1QseUJBQWM7QUFBQTs7QUFDVixhQUFLQyxhQUFMLEdBQXFCLElBQXJCOztBQUdBLGFBQUtDLFNBQUwsR0FBaUIseUJBQWpCLENBSlUsQ0FJaUM7QUFDM0MsYUFBS0MsU0FBTCxHQUFpQjtBQUNiLHFCQUFTLFFBREk7QUFFYixvQkFBUSxPQUZLO0FBR2Isc0JBQVUsU0FIRztBQUliLDBCQUFjOztBQUpELFNBQWpCOztBQVNBLGFBQUtDLElBQUwsR0FBWSxLQUFLQSxJQUFMLENBQVVDLElBQVYsQ0FBZSxJQUFmLENBQVo7QUFDQSxhQUFLQyxNQUFMLEdBQWMsS0FBS0EsTUFBTCxDQUFZRCxJQUFaLENBQWlCLElBQWpCLENBQWQ7QUFDQSxhQUFLRSxTQUFMLEdBQWlCLEtBQUtBLFNBQUwsQ0FBZUYsSUFBZixDQUFvQixJQUFwQixDQUFqQjtBQUNIOzs7OytCQUNNO0FBQ0hHLG9CQUFRQyxHQUFSLENBQVksU0FBWjtBQUNBLGlCQUFLUixhQUFMLEdBQXFCLElBQUlTLFNBQUosQ0FBYyxLQUFLUixTQUFuQixDQUFyQixDQUZHLENBRWdEO0FBQ25ELGlCQUFLRCxhQUFMLENBQW1CVSxNQUFuQixHQUE0QixLQUFLTCxNQUFqQztBQUNIOzs7aUNBQ1E7QUFDTEUsb0JBQVFDLEdBQVIsQ0FBWSx5QkFBWjtBQUNBLGlCQUFLUixhQUFMLENBQW1CVyxJQUFuQixDQUF3QixpQkFBeEI7QUFDSDs7O2tDQUNTQyxJLEVBQU07QUFDWkwsb0JBQVFDLEdBQVIsQ0FBWUksSUFBWixFQUFrQixtQkFBbEI7QUFDSCIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIENvbHlzZXVzIGZyb20gXCJjb2x5c2V1cy5qc1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNvY2tldEFQSSB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25PYmogPSBudWxsO1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy5zb2NrZXRVcmwgPSBcIndzOi8vMy4yMjkuMjM5LjIzNDoyNTY3XCI7Ly93czovLzMuMjI5LjIzOS4yMzQ6MjU2N1xyXG4gICAgICAgIHRoaXMuZW5kUG9pbnRzID0ge1xyXG4gICAgICAgICAgICBcInN0YXJ0XCI6IFwiL3N0YXJ0XCIsXHJcbiAgICAgICAgICAgIFwiZXhpdFwiOiBcIi9leGl0XCIsXHJcbiAgICAgICAgICAgIFwic3VibWl0XCI6IFwiL3N1Ym1pdFwiLFxyXG4gICAgICAgICAgICBcInNjb3JlYm9hcmRcIjogXCIvc2NvcmVib2FyZFwiLFxyXG5cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICB0aGlzLm9wZW4gPSB0aGlzLm9wZW4uYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLm9uT3BlbiA9IHRoaXMub25PcGVuLmJpbmQodGhpcyk7XHJcbiAgICAgICAgdGhpcy5vbk1lc3NhZ2UgPSB0aGlzLm9uTWVzc2FnZS5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG4gICAgb3BlbigpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIk9wZW5pbmdcIilcclxuICAgICAgICB0aGlzLmNvbm5lY3Rpb25PYmogPSBuZXcgV2ViU29ja2V0KHRoaXMuc29ja2V0VXJsKTsvL0NvbHlzZXVzLkNsaWVudCh0aGlzLnNvY2tldFVybCk7XHJcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uT2JqLm9ub3BlbiA9IHRoaXMub25PcGVuO1xyXG4gICAgfVxyXG4gICAgb25PcGVuKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGlvbiBTdWNjZXNzZnVsbCFcIik7XHJcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uT2JqLnNlbmQoXCJNeSBuYW1lIGlzIEpvaG5cIik7XHJcbiAgICB9XHJcbiAgICBvbk1lc3NhZ2UoX21zZykge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKF9tc2csIFwiIG1lc3NhZ2UgUmVjaWV2ZWRcIilcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///25\n')},function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(27);\nvar Client_1 = __webpack_require__(28);\nexports.Client = Client_1.Client;\nvar Protocol_1 = __webpack_require__(9);\nexports.Protocol = Protocol_1.Protocol;\nvar Room_1 = __webpack_require__(7);\nexports.Room = Room_1.Room;\nvar Auth_1 = __webpack_require__(10);\nexports.Auth = Auth_1.Auth;\nexports.Platform = Auth_1.Platform;\n/*\n * Serializers\n */\nvar FossilDeltaSerializer_1 = __webpack_require__(38);\nexports.FossilDeltaSerializer = FossilDeltaSerializer_1.FossilDeltaSerializer;\nvar SchemaSerializer_1 = __webpack_require__(43);\nexports.SchemaSerializer = SchemaSerializer_1.SchemaSerializer;\nvar Serializer_1 = __webpack_require__(8);\nexports.registerSerializer = Serializer_1.registerSerializer;\nSerializer_1.registerSerializer('fossil-delta', FossilDeltaSerializer_1.FossilDeltaSerializer);\nSerializer_1.registerSerializer('schema', SchemaSerializer_1.SchemaSerializer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE4QyxjQUFjO0FBQzVELG1CQUFPLENBQUMsRUFBVTtBQUNsQixlQUFlLG1CQUFPLENBQUMsRUFBVTtBQUNqQztBQUNBLGlCQUFpQixtQkFBTyxDQUFDLENBQVk7QUFDckM7QUFDQSxhQUFhLG1CQUFPLENBQUMsQ0FBUTtBQUM3QjtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxFQUFRO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsbUJBQU8sQ0FBQyxFQUFvQztBQUMxRTtBQUNBLHlCQUF5QixtQkFBTyxDQUFDLEVBQStCO0FBQ2hFO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsQ0FBeUI7QUFDcEQ7QUFDQTtBQUNBIiwiZmlsZSI6IjI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5yZXF1aXJlKFwiLi9sZWdhY3lcIik7XG52YXIgQ2xpZW50XzEgPSByZXF1aXJlKFwiLi9DbGllbnRcIik7XG5leHBvcnRzLkNsaWVudCA9IENsaWVudF8xLkNsaWVudDtcbnZhciBQcm90b2NvbF8xID0gcmVxdWlyZShcIi4vUHJvdG9jb2xcIik7XG5leHBvcnRzLlByb3RvY29sID0gUHJvdG9jb2xfMS5Qcm90b2NvbDtcbnZhciBSb29tXzEgPSByZXF1aXJlKFwiLi9Sb29tXCIpO1xuZXhwb3J0cy5Sb29tID0gUm9vbV8xLlJvb207XG52YXIgQXV0aF8xID0gcmVxdWlyZShcIi4vQXV0aFwiKTtcbmV4cG9ydHMuQXV0aCA9IEF1dGhfMS5BdXRoO1xuZXhwb3J0cy5QbGF0Zm9ybSA9IEF1dGhfMS5QbGF0Zm9ybTtcbi8qXG4gKiBTZXJpYWxpemVyc1xuICovXG52YXIgRm9zc2lsRGVsdGFTZXJpYWxpemVyXzEgPSByZXF1aXJlKFwiLi9zZXJpYWxpemVyL0Zvc3NpbERlbHRhU2VyaWFsaXplclwiKTtcbmV4cG9ydHMuRm9zc2lsRGVsdGFTZXJpYWxpemVyID0gRm9zc2lsRGVsdGFTZXJpYWxpemVyXzEuRm9zc2lsRGVsdGFTZXJpYWxpemVyO1xudmFyIFNjaGVtYVNlcmlhbGl6ZXJfMSA9IHJlcXVpcmUoXCIuL3NlcmlhbGl6ZXIvU2NoZW1hU2VyaWFsaXplclwiKTtcbmV4cG9ydHMuU2NoZW1hU2VyaWFsaXplciA9IFNjaGVtYVNlcmlhbGl6ZXJfMS5TY2hlbWFTZXJpYWxpemVyO1xudmFyIFNlcmlhbGl6ZXJfMSA9IHJlcXVpcmUoXCIuL3NlcmlhbGl6ZXIvU2VyaWFsaXplclwiKTtcbmV4cG9ydHMucmVnaXN0ZXJTZXJpYWxpemVyID0gU2VyaWFsaXplcl8xLnJlZ2lzdGVyU2VyaWFsaXplcjtcblNlcmlhbGl6ZXJfMS5yZWdpc3RlclNlcmlhbGl6ZXIoJ2Zvc3NpbC1kZWx0YScsIEZvc3NpbERlbHRhU2VyaWFsaXplcl8xLkZvc3NpbERlbHRhU2VyaWFsaXplcik7XG5TZXJpYWxpemVyXzEucmVnaXN0ZXJTZXJpYWxpemVyKCdzY2hlbWEnLCBTY2hlbWFTZXJpYWxpemVyXzEuU2NoZW1hU2VyaWFsaXplcik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///26\n")},function(module,exports){eval("//\n// Polyfills for legacy environments\n//\n/*\n * Support Android 4.4.x\n */\nif (!ArrayBuffer.isView) {\n    ArrayBuffer.isView = function (a) {\n        return a !== null && typeof (a) === 'object' && a.buffer instanceof ArrayBuffer;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9sZWdhY3kuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vXG4vLyBQb2x5ZmlsbHMgZm9yIGxlZ2FjeSBlbnZpcm9ubWVudHNcbi8vXG4vKlxuICogU3VwcG9ydCBBbmRyb2lkIDQuNC54XG4gKi9cbmlmICghQXJyYXlCdWZmZXIuaXNWaWV3KSB7XG4gICAgQXJyYXlCdWZmZXIuaXNWaWV3ID0gZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgcmV0dXJuIGEgIT09IG51bGwgJiYgdHlwZW9mIChhKSA9PT0gJ29iamVjdCcgJiYgYS5idWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcjtcbiAgICB9O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///27\n")},function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nvar httpie_1 = __webpack_require__(6);\nvar Room_1 = __webpack_require__(7);\nvar Auth_1 = __webpack_require__(10);\nvar Push_1 = __webpack_require__(37);\nvar MatchMakeError = /** @class */ (function (_super) {\n    __extends(MatchMakeError, _super);\n    function MatchMakeError(message, code) {\n        var _this = _super.call(this, message) || this;\n        _this.code = code;\n        Object.setPrototypeOf(_this, MatchMakeError.prototype);\n        return _this;\n    }\n    return MatchMakeError;\n}(Error));\nexports.MatchMakeError = MatchMakeError;\nvar Client = /** @class */ (function () {\n    function Client(endpoint) {\n        if (endpoint === void 0) { endpoint = location.protocol.replace("http", "ws") + "//" + location.hostname + (location.port && ":" + location.port); }\n        this.endpoint = endpoint;\n        this.auth = new Auth_1.Auth(this.endpoint);\n        this.push = new Push_1.Push(this.endpoint);\n    }\n    Client.prototype.joinOrCreate = function (roomName, options, rootSchema) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createMatchMakeRequest(\'joinOrCreate\', roomName, options, rootSchema)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Client.prototype.create = function (roomName, options, rootSchema) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createMatchMakeRequest(\'create\', roomName, options, rootSchema)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Client.prototype.join = function (roomName, options, rootSchema) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createMatchMakeRequest(\'join\', roomName, options, rootSchema)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Client.prototype.joinById = function (roomId, options, rootSchema) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createMatchMakeRequest(\'joinById\', roomId, options, rootSchema)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Client.prototype.reconnect = function (roomId, sessionId, rootSchema) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createMatchMakeRequest(\'joinById\', roomId, { sessionId: sessionId }, rootSchema)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Client.prototype.getAvailableRooms = function (roomName) {\n        if (roomName === void 0) { roomName = ""; }\n        return __awaiter(this, void 0, void 0, function () {\n            var url;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        url = this.endpoint.replace("ws", "http") + "/matchmake/" + roomName;\n                        return [4 /*yield*/, httpie_1.get(url, { headers: { \'Accept\': \'application/json\' } })];\n                    case 1: return [2 /*return*/, (_a.sent()).data];\n                }\n            });\n        });\n    };\n    Client.prototype.consumeSeatReservation = function (response, rootSchema) {\n        return __awaiter(this, void 0, void 0, function () {\n            var room;\n            return __generator(this, function (_a) {\n                room = this.createRoom(response.room.name, rootSchema);\n                room.id = response.room.roomId;\n                room.sessionId = response.sessionId;\n                room.connect(this.buildEndpoint(response.room, { sessionId: room.sessionId }));\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var onError = function (message) { return reject(message); };\n                        room.onError.once(onError);\n                        room.onJoin.once(function () {\n                            room.onError.remove(onError);\n                            resolve(room);\n                        });\n                    })];\n            });\n        });\n    };\n    Client.prototype.createMatchMakeRequest = function (method, roomName, options, rootSchema) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var url, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        url = this.endpoint.replace("ws", "http") + "/matchmake/" + method + "/" + roomName;\n                        // automatically forward auth token, if present\n                        if (this.auth.hasToken) {\n                            options.token = this.auth.token;\n                        }\n                        return [4 /*yield*/, httpie_1.post(url, {\n                                headers: {\n                                    \'Accept\': \'application/json\',\n                                    \'Content-Type\': \'application/json\'\n                                },\n                                body: JSON.stringify(options)\n                            })];\n                    case 1:\n                        response = (_a.sent()).data;\n                        if (response.error) {\n                            throw new MatchMakeError(response.error, response.code);\n                        }\n                        return [2 /*return*/, this.consumeSeatReservation(response, rootSchema)];\n                }\n            });\n        });\n    };\n    Client.prototype.createRoom = function (roomName, rootSchema) {\n        return new Room_1.Room(roomName, rootSchema);\n    };\n    Client.prototype.buildEndpoint = function (room, options) {\n        if (options === void 0) { options = {}; }\n        var params = [];\n        for (var name_1 in options) {\n            if (!options.hasOwnProperty(name_1)) {\n                continue;\n            }\n            params.push(name_1 + "=" + options[name_1]);\n        }\n        return this.endpoint + "/" + room.processId + "/" + room.roomId + "?" + params.join(\'&\');\n    };\n    return Client;\n}());\nexports.Client = Client;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9DbGllbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdCQUFnQixzQ0FBc0MsaUJBQWlCLEVBQUU7QUFDdkYsNkJBQTZCLHVEQUF1RDtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsbUNBQW1DLE1BQU0sNkJBQTZCLEVBQUUsWUFBWSxXQUFXLEVBQUU7QUFDakcsa0NBQWtDLE1BQU0saUNBQWlDLEVBQUUsWUFBWSxXQUFXLEVBQUU7QUFDcEcsK0JBQStCLGlFQUFpRSx1QkFBdUIsRUFBRSw0QkFBNEI7QUFDcko7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGFBQWEsNkJBQTZCLDBCQUEwQixhQUFhLEVBQUUscUJBQXFCO0FBQ3hHLGdCQUFnQixxREFBcUQsb0VBQW9FLGFBQWEsRUFBRTtBQUN4SixzQkFBc0Isc0JBQXNCLHFCQUFxQixHQUFHO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QyxrQ0FBa0MsU0FBUztBQUMzQyxrQ0FBa0MsV0FBVyxVQUFVO0FBQ3ZELHlDQUF5QyxjQUFjO0FBQ3ZEO0FBQ0EsNkdBQTZHLE9BQU8sVUFBVTtBQUM5SCxnRkFBZ0YsaUJBQWlCLE9BQU87QUFDeEcsd0RBQXdELGdCQUFnQixRQUFRLE9BQU87QUFDdkYsOENBQThDLGdCQUFnQixnQkFBZ0IsT0FBTztBQUNyRjtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0EsU0FBUyxZQUFZLGFBQWEsT0FBTyxFQUFFLFVBQVUsV0FBVztBQUNoRSxtQ0FBbUMsU0FBUztBQUM1QztBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsZUFBZSxtQkFBTyxDQUFDLENBQVE7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLENBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLEVBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLEVBQVE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx3SEFBd0g7QUFDMUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxjQUFjO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlDQUFpQyxjQUFjO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlDQUFpQyxjQUFjO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlDQUFpQyxjQUFjO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtHQUFrRyx1QkFBdUI7QUFDekg7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLGtDQUFrQyxlQUFlO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxXQUFXLCtCQUErQixFQUFFO0FBQzVHO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsNEJBQTRCO0FBQzVGO0FBQ0EsMERBQTBELHdCQUF3QjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixxQkFBcUI7QUFDckIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsaUNBQWlDLGNBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxjQUFjO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6IjI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUocmVzdWx0LnZhbHVlKTsgfSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgaHR0cGllXzEgPSByZXF1aXJlKFwiaHR0cGllXCIpO1xudmFyIFJvb21fMSA9IHJlcXVpcmUoXCIuL1Jvb21cIik7XG52YXIgQXV0aF8xID0gcmVxdWlyZShcIi4vQXV0aFwiKTtcbnZhciBQdXNoXzEgPSByZXF1aXJlKFwiLi9QdXNoXCIpO1xudmFyIE1hdGNoTWFrZUVycm9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNYXRjaE1ha2VFcnJvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNYXRjaE1ha2VFcnJvcihtZXNzYWdlLCBjb2RlKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIG1lc3NhZ2UpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoX3RoaXMsIE1hdGNoTWFrZUVycm9yLnByb3RvdHlwZSk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIE1hdGNoTWFrZUVycm9yO1xufShFcnJvcikpO1xuZXhwb3J0cy5NYXRjaE1ha2VFcnJvciA9IE1hdGNoTWFrZUVycm9yO1xudmFyIENsaWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDbGllbnQoZW5kcG9pbnQpIHtcbiAgICAgICAgaWYgKGVuZHBvaW50ID09PSB2b2lkIDApIHsgZW5kcG9pbnQgPSBsb2NhdGlvbi5wcm90b2NvbC5yZXBsYWNlKFwiaHR0cFwiLCBcIndzXCIpICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdG5hbWUgKyAobG9jYXRpb24ucG9ydCAmJiBcIjpcIiArIGxvY2F0aW9uLnBvcnQpOyB9XG4gICAgICAgIHRoaXMuZW5kcG9pbnQgPSBlbmRwb2ludDtcbiAgICAgICAgdGhpcy5hdXRoID0gbmV3IEF1dGhfMS5BdXRoKHRoaXMuZW5kcG9pbnQpO1xuICAgICAgICB0aGlzLnB1c2ggPSBuZXcgUHVzaF8xLlB1c2godGhpcy5lbmRwb2ludCk7XG4gICAgfVxuICAgIENsaWVudC5wcm90b3R5cGUuam9pbk9yQ3JlYXRlID0gZnVuY3Rpb24gKHJvb21OYW1lLCBvcHRpb25zLCByb290U2NoZW1hKSB7XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5jcmVhdGVNYXRjaE1ha2VSZXF1ZXN0KCdqb2luT3JDcmVhdGUnLCByb29tTmFtZSwgb3B0aW9ucywgcm9vdFNjaGVtYSldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6IHJldHVybiBbMiAvKnJldHVybiovLCBfYS5zZW50KCldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIENsaWVudC5wcm90b3R5cGUuY3JlYXRlID0gZnVuY3Rpb24gKHJvb21OYW1lLCBvcHRpb25zLCByb290U2NoZW1hKSB7XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5jcmVhdGVNYXRjaE1ha2VSZXF1ZXN0KCdjcmVhdGUnLCByb29tTmFtZSwgb3B0aW9ucywgcm9vdFNjaGVtYSldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6IHJldHVybiBbMiAvKnJldHVybiovLCBfYS5zZW50KCldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIENsaWVudC5wcm90b3R5cGUuam9pbiA9IGZ1bmN0aW9uIChyb29tTmFtZSwgb3B0aW9ucywgcm9vdFNjaGVtYSkge1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuY3JlYXRlTWF0Y2hNYWtlUmVxdWVzdCgnam9pbicsIHJvb21OYW1lLCBvcHRpb25zLCByb290U2NoZW1hKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIF9hLnNlbnQoKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQ2xpZW50LnByb3RvdHlwZS5qb2luQnlJZCA9IGZ1bmN0aW9uIChyb29tSWQsIG9wdGlvbnMsIHJvb3RTY2hlbWEpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLmNyZWF0ZU1hdGNoTWFrZVJlcXVlc3QoJ2pvaW5CeUlkJywgcm9vbUlkLCBvcHRpb25zLCByb290U2NoZW1hKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTogcmV0dXJuIFsyIC8qcmV0dXJuKi8sIF9hLnNlbnQoKV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQ2xpZW50LnByb3RvdHlwZS5yZWNvbm5lY3QgPSBmdW5jdGlvbiAocm9vbUlkLCBzZXNzaW9uSWQsIHJvb3RTY2hlbWEpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLmNyZWF0ZU1hdGNoTWFrZVJlcXVlc3QoJ2pvaW5CeUlkJywgcm9vbUlkLCB7IHNlc3Npb25JZDogc2Vzc2lvbklkIH0sIHJvb3RTY2hlbWEpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gWzIgLypyZXR1cm4qLywgX2Euc2VudCgpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBDbGllbnQucHJvdG90eXBlLmdldEF2YWlsYWJsZVJvb21zID0gZnVuY3Rpb24gKHJvb21OYW1lKSB7XG4gICAgICAgIGlmIChyb29tTmFtZSA9PT0gdm9pZCAwKSB7IHJvb21OYW1lID0gXCJcIjsgfVxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdXJsO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgdXJsID0gdGhpcy5lbmRwb2ludC5yZXBsYWNlKFwid3NcIiwgXCJodHRwXCIpICsgXCIvbWF0Y2htYWtlL1wiICsgcm9vbU5hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCBodHRwaWVfMS5nZXQodXJsLCB7IGhlYWRlcnM6IHsgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyB9IH0pXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gWzIgLypyZXR1cm4qLywgKF9hLnNlbnQoKSkuZGF0YV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQ2xpZW50LnByb3RvdHlwZS5jb25zdW1lU2VhdFJlc2VydmF0aW9uID0gZnVuY3Rpb24gKHJlc3BvbnNlLCByb290U2NoZW1hKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciByb29tO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHJvb20gPSB0aGlzLmNyZWF0ZVJvb20ocmVzcG9uc2Uucm9vbS5uYW1lLCByb290U2NoZW1hKTtcbiAgICAgICAgICAgICAgICByb29tLmlkID0gcmVzcG9uc2Uucm9vbS5yb29tSWQ7XG4gICAgICAgICAgICAgICAgcm9vbS5zZXNzaW9uSWQgPSByZXNwb25zZS5zZXNzaW9uSWQ7XG4gICAgICAgICAgICAgICAgcm9vbS5jb25uZWN0KHRoaXMuYnVpbGRFbmRwb2ludChyZXNwb25zZS5yb29tLCB7IHNlc3Npb25JZDogcm9vbS5zZXNzaW9uSWQgfSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgb25FcnJvciA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7IHJldHVybiByZWplY3QobWVzc2FnZSk7IH07XG4gICAgICAgICAgICAgICAgICAgICAgICByb29tLm9uRXJyb3Iub25jZShvbkVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvb20ub25Kb2luLm9uY2UoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvb20ub25FcnJvci5yZW1vdmUob25FcnJvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShyb29tKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KV07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBDbGllbnQucHJvdG90eXBlLmNyZWF0ZU1hdGNoTWFrZVJlcXVlc3QgPSBmdW5jdGlvbiAobWV0aG9kLCByb29tTmFtZSwgb3B0aW9ucywgcm9vdFNjaGVtYSkge1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdXJsLCByZXNwb25zZTtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybCA9IHRoaXMuZW5kcG9pbnQucmVwbGFjZShcIndzXCIsIFwiaHR0cFwiKSArIFwiL21hdGNobWFrZS9cIiArIG1ldGhvZCArIFwiL1wiICsgcm9vbU5hbWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBhdXRvbWF0aWNhbGx5IGZvcndhcmQgYXV0aCB0b2tlbiwgaWYgcHJlc2VudFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuYXV0aC5oYXNUb2tlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMudG9rZW4gPSB0aGlzLmF1dGgudG9rZW47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCBodHRwaWVfMS5wb3N0KHVybCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShvcHRpb25zKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSAoX2Euc2VudCgpKS5kYXRhO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IE1hdGNoTWFrZUVycm9yKHJlc3BvbnNlLmVycm9yLCByZXNwb25zZS5jb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCB0aGlzLmNvbnN1bWVTZWF0UmVzZXJ2YXRpb24ocmVzcG9uc2UsIHJvb3RTY2hlbWEpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBDbGllbnQucHJvdG90eXBlLmNyZWF0ZVJvb20gPSBmdW5jdGlvbiAocm9vbU5hbWUsIHJvb3RTY2hlbWEpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBSb29tXzEuUm9vbShyb29tTmFtZSwgcm9vdFNjaGVtYSk7XG4gICAgfTtcbiAgICBDbGllbnQucHJvdG90eXBlLmJ1aWxkRW5kcG9pbnQgPSBmdW5jdGlvbiAocm9vbSwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICB2YXIgcGFyYW1zID0gW107XG4gICAgICAgIGZvciAodmFyIG5hbWVfMSBpbiBvcHRpb25zKSB7XG4gICAgICAgICAgICBpZiAoIW9wdGlvbnMuaGFzT3duUHJvcGVydHkobmFtZV8xKSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyYW1zLnB1c2gobmFtZV8xICsgXCI9XCIgKyBvcHRpb25zW25hbWVfMV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmVuZHBvaW50ICsgXCIvXCIgKyByb29tLnByb2Nlc3NJZCArIFwiL1wiICsgcm9vbS5yb29tSWQgKyBcIj9cIiArIHBhcmFtcy5qb2luKCcmJyk7XG4gICAgfTtcbiAgICByZXR1cm4gQ2xpZW50O1xufSgpKTtcbmV4cG9ydHMuQ2xpZW50ID0gQ2xpZW50O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///28\n')},function(module,exports,__webpack_require__){"use strict";eval("\n/**\n * Copyright (c) 2014 Ion Drive Software Ltd.\n * https://github.com/darrachequesne/notepack/\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Patch for Colyseus:\n * -------------------\n *\n * added `offset` on Decoder constructor, for messages arriving with a code\n * before actual msgpack data\n */\nfunction Decoder(buffer, offset) {\n    this._offset = offset;\n    if (buffer instanceof ArrayBuffer) {\n        this._buffer = buffer;\n        this._view = new DataView(this._buffer);\n    }\n    else if (ArrayBuffer.isView(buffer)) {\n        this._buffer = buffer.buffer;\n        this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\n    }\n    else {\n        throw new Error('Invalid argument');\n    }\n}\nfunction utf8Read(view, offset, length) {\n    var string = '', chr = 0;\n    for (var i = offset, end = offset + length; i < end; i++) {\n        var byte = view.getUint8(i);\n        if ((byte & 0x80) === 0x00) {\n            string += String.fromCharCode(byte);\n            continue;\n        }\n        if ((byte & 0xe0) === 0xc0) {\n            string += String.fromCharCode(((byte & 0x1f) << 6) |\n                (view.getUint8(++i) & 0x3f));\n            continue;\n        }\n        if ((byte & 0xf0) === 0xe0) {\n            string += String.fromCharCode(((byte & 0x0f) << 12) |\n                ((view.getUint8(++i) & 0x3f) << 6) |\n                ((view.getUint8(++i) & 0x3f) << 0));\n            continue;\n        }\n        if ((byte & 0xf8) === 0xf0) {\n            chr = ((byte & 0x07) << 18) |\n                ((view.getUint8(++i) & 0x3f) << 12) |\n                ((view.getUint8(++i) & 0x3f) << 6) |\n                ((view.getUint8(++i) & 0x3f) << 0);\n            if (chr >= 0x010000) { // surrogate pair\n                chr -= 0x010000;\n                string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n            }\n            else {\n                string += String.fromCharCode(chr);\n            }\n            continue;\n        }\n        throw new Error('Invalid byte ' + byte.toString(16));\n    }\n    return string;\n}\nDecoder.prototype._array = function (length) {\n    var value = new Array(length);\n    for (var i = 0; i < length; i++) {\n        value[i] = this._parse();\n    }\n    return value;\n};\nDecoder.prototype._map = function (length) {\n    var key = '', value = {};\n    for (var i = 0; i < length; i++) {\n        key = this._parse();\n        value[key] = this._parse();\n    }\n    return value;\n};\nDecoder.prototype._str = function (length) {\n    var value = utf8Read(this._view, this._offset, length);\n    this._offset += length;\n    return value;\n};\nDecoder.prototype._bin = function (length) {\n    var value = this._buffer.slice(this._offset, this._offset + length);\n    this._offset += length;\n    return value;\n};\nDecoder.prototype._parse = function () {\n    var prefix = this._view.getUint8(this._offset++);\n    var value, length = 0, type = 0, hi = 0, lo = 0;\n    if (prefix < 0xc0) {\n        // positive fixint\n        if (prefix < 0x80) {\n            return prefix;\n        }\n        // fixmap\n        if (prefix < 0x90) {\n            return this._map(prefix & 0x0f);\n        }\n        // fixarray\n        if (prefix < 0xa0) {\n            return this._array(prefix & 0x0f);\n        }\n        // fixstr\n        return this._str(prefix & 0x1f);\n    }\n    // negative fixint\n    if (prefix > 0xdf) {\n        return (0xff - prefix + 1) * -1;\n    }\n    switch (prefix) {\n        // nil\n        case 0xc0:\n            return null;\n        // false\n        case 0xc2:\n            return false;\n        // true\n        case 0xc3:\n            return true;\n        // bin\n        case 0xc4:\n            length = this._view.getUint8(this._offset);\n            this._offset += 1;\n            return this._bin(length);\n        case 0xc5:\n            length = this._view.getUint16(this._offset);\n            this._offset += 2;\n            return this._bin(length);\n        case 0xc6:\n            length = this._view.getUint32(this._offset);\n            this._offset += 4;\n            return this._bin(length);\n        // ext\n        case 0xc7:\n            length = this._view.getUint8(this._offset);\n            type = this._view.getInt8(this._offset + 1);\n            this._offset += 2;\n            return [type, this._bin(length)];\n        case 0xc8:\n            length = this._view.getUint16(this._offset);\n            type = this._view.getInt8(this._offset + 2);\n            this._offset += 3;\n            return [type, this._bin(length)];\n        case 0xc9:\n            length = this._view.getUint32(this._offset);\n            type = this._view.getInt8(this._offset + 4);\n            this._offset += 5;\n            return [type, this._bin(length)];\n        // float\n        case 0xca:\n            value = this._view.getFloat32(this._offset);\n            this._offset += 4;\n            return value;\n        case 0xcb:\n            value = this._view.getFloat64(this._offset);\n            this._offset += 8;\n            return value;\n        // uint\n        case 0xcc:\n            value = this._view.getUint8(this._offset);\n            this._offset += 1;\n            return value;\n        case 0xcd:\n            value = this._view.getUint16(this._offset);\n            this._offset += 2;\n            return value;\n        case 0xce:\n            value = this._view.getUint32(this._offset);\n            this._offset += 4;\n            return value;\n        case 0xcf:\n            hi = this._view.getUint32(this._offset) * Math.pow(2, 32);\n            lo = this._view.getUint32(this._offset + 4);\n            this._offset += 8;\n            return hi + lo;\n        // int\n        case 0xd0:\n            value = this._view.getInt8(this._offset);\n            this._offset += 1;\n            return value;\n        case 0xd1:\n            value = this._view.getInt16(this._offset);\n            this._offset += 2;\n            return value;\n        case 0xd2:\n            value = this._view.getInt32(this._offset);\n            this._offset += 4;\n            return value;\n        case 0xd3:\n            hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n            lo = this._view.getUint32(this._offset + 4);\n            this._offset += 8;\n            return hi + lo;\n        // fixext\n        case 0xd4:\n            type = this._view.getInt8(this._offset);\n            this._offset += 1;\n            if (type === 0x00) {\n                this._offset += 1;\n                return void 0;\n            }\n            return [type, this._bin(1)];\n        case 0xd5:\n            type = this._view.getInt8(this._offset);\n            this._offset += 1;\n            return [type, this._bin(2)];\n        case 0xd6:\n            type = this._view.getInt8(this._offset);\n            this._offset += 1;\n            return [type, this._bin(4)];\n        case 0xd7:\n            type = this._view.getInt8(this._offset);\n            this._offset += 1;\n            if (type === 0x00) {\n                hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n                lo = this._view.getUint32(this._offset + 4);\n                this._offset += 8;\n                return new Date(hi + lo);\n            }\n            return [type, this._bin(8)];\n        case 0xd8:\n            type = this._view.getInt8(this._offset);\n            this._offset += 1;\n            return [type, this._bin(16)];\n        // str\n        case 0xd9:\n            length = this._view.getUint8(this._offset);\n            this._offset += 1;\n            return this._str(length);\n        case 0xda:\n            length = this._view.getUint16(this._offset);\n            this._offset += 2;\n            return this._str(length);\n        case 0xdb:\n            length = this._view.getUint32(this._offset);\n            this._offset += 4;\n            return this._str(length);\n        // array\n        case 0xdc:\n            length = this._view.getUint16(this._offset);\n            this._offset += 2;\n            return this._array(length);\n        case 0xdd:\n            length = this._view.getUint32(this._offset);\n            this._offset += 4;\n            return this._array(length);\n        // map\n        case 0xde:\n            length = this._view.getUint16(this._offset);\n            this._offset += 2;\n            return this._map(length);\n        case 0xdf:\n            length = this._view.getUint32(this._offset);\n            this._offset += 4;\n            return this._map(length);\n    }\n    throw new Error('Could not parse');\n};\nfunction decode(buffer, offset) {\n    if (offset === void 0) { offset = 0; }\n    var decoder = new Decoder(buffer, offset);\n    var value = decoder._parse();\n    if (decoder._offset !== buffer.byteLength) {\n        throw new Error((buffer.byteLength - decoder._offset) + ' trailing bytes');\n    }\n    return value;\n}\nexports.default = decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29\n")},function(module,exports,__webpack_require__){"use strict";eval("\n/**\n * Copyright (c) 2014 Ion Drive Software Ltd.\n * https://github.com/darrachequesne/notepack/\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction utf8Write(view, offset, str) {\n    var c = 0;\n    for (var i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            view.setUint8(offset++, c);\n        }\n        else if (c < 0x800) {\n            view.setUint8(offset++, 0xc0 | (c >> 6));\n            view.setUint8(offset++, 0x80 | (c & 0x3f));\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            view.setUint8(offset++, 0xe0 | (c >> 12));\n            view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n            view.setUint8(offset++, 0x80 | (c & 0x3f));\n        }\n        else {\n            i++;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n            view.setUint8(offset++, 0xf0 | (c >> 18));\n            view.setUint8(offset++, 0x80 | (c >> 12) & 0x3f);\n            view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n            view.setUint8(offset++, 0x80 | (c & 0x3f));\n        }\n    }\n}\nfunction utf8Length(str) {\n    var c = 0, length = 0;\n    for (var i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\nfunction _encode(bytes, defers, value) {\n    var type = typeof value, i = 0, l = 0, hi = 0, lo = 0, length = 0, size = 0;\n    if (type === 'string') {\n        length = utf8Length(value);\n        // fixstr\n        if (length < 0x20) {\n            bytes.push(length | 0xa0);\n            size = 1;\n        }\n        // str 8\n        else if (length < 0x100) {\n            bytes.push(0xd9, length);\n            size = 2;\n        }\n        // str 16\n        else if (length < 0x10000) {\n            bytes.push(0xda, length >> 8, length);\n            size = 3;\n        }\n        // str 32\n        else if (length < 0x100000000) {\n            bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n            size = 5;\n        }\n        else {\n            throw new Error('String too long');\n        }\n        defers.push({ _str: value, _length: length, _offset: bytes.length });\n        return size + length;\n    }\n    if (type === 'number') {\n        // TODO: encode to float 32?\n        // float 64\n        if (Math.floor(value) !== value || !isFinite(value)) {\n            bytes.push(0xcb);\n            defers.push({ _float: value, _length: 8, _offset: bytes.length });\n            return 9;\n        }\n        if (value >= 0) {\n            // positive fixnum\n            if (value < 0x80) {\n                bytes.push(value);\n                return 1;\n            }\n            // uint 8\n            if (value < 0x100) {\n                bytes.push(0xcc, value);\n                return 2;\n            }\n            // uint 16\n            if (value < 0x10000) {\n                bytes.push(0xcd, value >> 8, value);\n                return 3;\n            }\n            // uint 32\n            if (value < 0x100000000) {\n                bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n                return 5;\n            }\n            // uint 64\n            hi = (value / Math.pow(2, 32)) >> 0;\n            lo = value >>> 0;\n            bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n            return 9;\n        }\n        else {\n            // negative fixnum\n            if (value >= -0x20) {\n                bytes.push(value);\n                return 1;\n            }\n            // int 8\n            if (value >= -0x80) {\n                bytes.push(0xd0, value);\n                return 2;\n            }\n            // int 16\n            if (value >= -0x8000) {\n                bytes.push(0xd1, value >> 8, value);\n                return 3;\n            }\n            // int 32\n            if (value >= -0x80000000) {\n                bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n                return 5;\n            }\n            // int 64\n            hi = Math.floor(value / Math.pow(2, 32));\n            lo = value >>> 0;\n            bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n            return 9;\n        }\n    }\n    if (type === 'object') {\n        // nil\n        if (value === null) {\n            bytes.push(0xc0);\n            return 1;\n        }\n        if (Array.isArray(value)) {\n            length = value.length;\n            // fixarray\n            if (length < 0x10) {\n                bytes.push(length | 0x90);\n                size = 1;\n            }\n            // array 16\n            else if (length < 0x10000) {\n                bytes.push(0xdc, length >> 8, length);\n                size = 3;\n            }\n            // array 32\n            else if (length < 0x100000000) {\n                bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n                size = 5;\n            }\n            else {\n                throw new Error('Array too large');\n            }\n            for (i = 0; i < length; i++) {\n                size += _encode(bytes, defers, value[i]);\n            }\n            return size;\n        }\n        // fixext 8 / Date\n        if (value instanceof Date) {\n            var time = value.getTime();\n            hi = Math.floor(time / Math.pow(2, 32));\n            lo = time >>> 0;\n            bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n            return 10;\n        }\n        if (value instanceof ArrayBuffer) {\n            length = value.byteLength;\n            // bin 8\n            if (length < 0x100) {\n                bytes.push(0xc4, length);\n                size = 2;\n            }\n            else \n            // bin 16\n            if (length < 0x10000) {\n                bytes.push(0xc5, length >> 8, length);\n                size = 3;\n            }\n            else \n            // bin 32\n            if (length < 0x100000000) {\n                bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n                size = 5;\n            }\n            else {\n                throw new Error('Buffer too large');\n            }\n            defers.push({ _bin: value, _length: length, _offset: bytes.length });\n            return size + length;\n        }\n        if (typeof value.toJSON === 'function') {\n            return _encode(bytes, defers, value.toJSON());\n        }\n        var keys = [], key = '';\n        var allKeys = Object.keys(value);\n        for (i = 0, l = allKeys.length; i < l; i++) {\n            key = allKeys[i];\n            if (typeof value[key] !== 'function') {\n                keys.push(key);\n            }\n        }\n        length = keys.length;\n        // fixmap\n        if (length < 0x10) {\n            bytes.push(length | 0x80);\n            size = 1;\n        }\n        // map 16\n        else if (length < 0x10000) {\n            bytes.push(0xde, length >> 8, length);\n            size = 3;\n        }\n        // map 32\n        else if (length < 0x100000000) {\n            bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n            size = 5;\n        }\n        else {\n            throw new Error('Object too large');\n        }\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            size += _encode(bytes, defers, key);\n            size += _encode(bytes, defers, value[key]);\n        }\n        return size;\n    }\n    // false/true\n    if (type === 'boolean') {\n        bytes.push(value ? 0xc3 : 0xc2);\n        return 1;\n    }\n    // fixext 1 / undefined\n    if (type === 'undefined') {\n        bytes.push(0xd4, 0, 0);\n        return 3;\n    }\n    throw new Error('Could not encode');\n}\nfunction encode(value) {\n    var bytes = [];\n    var defers = [];\n    var size = _encode(bytes, defers, value);\n    var buf = new ArrayBuffer(size);\n    var view = new DataView(buf);\n    var deferIndex = 0;\n    var deferWritten = 0;\n    var nextOffset = -1;\n    if (defers.length > 0) {\n        nextOffset = defers[0]._offset;\n    }\n    var defer, deferLength = 0, offset = 0;\n    for (var i = 0, l = bytes.length; i < l; i++) {\n        view.setUint8(deferWritten + i, bytes[i]);\n        if (i + 1 !== nextOffset) {\n            continue;\n        }\n        defer = defers[deferIndex];\n        deferLength = defer._length;\n        offset = deferWritten + nextOffset;\n        if (defer._bin) {\n            var bin = new Uint8Array(defer._bin);\n            for (var j = 0; j < deferLength; j++) {\n                view.setUint8(offset + j, bin[j]);\n            }\n        }\n        else if (defer._str) {\n            utf8Write(view, offset, defer._str);\n        }\n        else if (defer._float !== undefined) {\n            view.setFloat64(offset, defer._float);\n        }\n        deferIndex++;\n        deferWritten += deferLength;\n        if (defers[deferIndex]) {\n            nextOffset = defers[deferIndex]._offset;\n        }\n    }\n    return buf;\n}\nexports.default = encode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///30\n")},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        this.handlers = [];\n    }\n    EventEmitter.prototype.register = function (cb, once) {\n        if (once === void 0) { once = false; }\n        this.handlers.push(cb);\n        return this;\n    };\n    EventEmitter.prototype.invoke = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.handlers.forEach(function (handler) { return handler.apply(void 0, args); });\n    };\n    EventEmitter.prototype.invokeAsync = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Promise.all(this.handlers.map(function (handler) { return handler.apply(void 0, args); }));\n    };\n    EventEmitter.prototype.remove = function (cb) {\n        var index = this.handlers.indexOf(cb);\n        this.handlers[index] = this.handlers[this.handlers.length - 1];\n        this.handlers.pop();\n    };\n    EventEmitter.prototype.clear = function () {\n        this.handlers = [];\n    };\n    return EventEmitter;\n}());\nexports.EventEmitter = EventEmitter;\nfunction createSignal() {\n    var emitter = new EventEmitter();\n    function register(cb) {\n        return emitter.register(cb, this === null);\n    }\n    ;\n    register.once = function (cb) {\n        var callback = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            cb.apply(void 0, args);\n            emitter.remove(callback);\n        };\n        emitter.register(callback);\n    };\n    register.remove = function (cb) { return emitter.remove(cb); };\n    register.invoke = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return emitter.invoke.apply(emitter, args);\n    };\n    register.invokeAsync = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return emitter.invokeAsync.apply(emitter, args);\n    };\n    register.clear = function () { return emitter.clear(); };\n    return register;\n}\nexports.createSignal = createSignal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL3N0cm9uZy1ldmVudHMvbGliL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixjQUFjO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQSxrREFBa0Qsb0NBQW9DLEVBQUU7QUFDeEY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHVCQUF1QjtBQUMvQztBQUNBO0FBQ0EsaUVBQWlFLG9DQUFvQyxFQUFFO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVCQUF1QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQywyQkFBMkI7QUFDaEU7QUFDQTtBQUNBLHdCQUF3Qix1QkFBdUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHVCQUF1QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx3QkFBd0I7QUFDMUQ7QUFDQTtBQUNBIiwiZmlsZSI6IjMxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgRXZlbnRFbWl0dGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVycyA9IFtdO1xuICAgIH1cbiAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlZ2lzdGVyID0gZnVuY3Rpb24gKGNiLCBvbmNlKSB7XG4gICAgICAgIGlmIChvbmNlID09PSB2b2lkIDApIHsgb25jZSA9IGZhbHNlOyB9XG4gICAgICAgIHRoaXMuaGFuZGxlcnMucHVzaChjYik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG4gICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5pbnZva2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5oYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoYW5kbGVyKSB7IHJldHVybiBoYW5kbGVyLmFwcGx5KHZvaWQgMCwgYXJncyk7IH0pO1xuICAgIH07XG4gICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5pbnZva2VBc3luYyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwodGhpcy5oYW5kbGVycy5tYXAoZnVuY3Rpb24gKGhhbmRsZXIpIHsgcmV0dXJuIGhhbmRsZXIuYXBwbHkodm9pZCAwLCBhcmdzKTsgfSkpO1xuICAgIH07XG4gICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoY2IpIHtcbiAgICAgICAgdmFyIGluZGV4ID0gdGhpcy5oYW5kbGVycy5pbmRleE9mKGNiKTtcbiAgICAgICAgdGhpcy5oYW5kbGVyc1tpbmRleF0gPSB0aGlzLmhhbmRsZXJzW3RoaXMuaGFuZGxlcnMubGVuZ3RoIC0gMV07XG4gICAgICAgIHRoaXMuaGFuZGxlcnMucG9wKCk7XG4gICAgfTtcbiAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmhhbmRsZXJzID0gW107XG4gICAgfTtcbiAgICByZXR1cm4gRXZlbnRFbWl0dGVyO1xufSgpKTtcbmV4cG9ydHMuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyO1xuZnVuY3Rpb24gY3JlYXRlU2lnbmFsKCkge1xuICAgIHZhciBlbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgIGZ1bmN0aW9uIHJlZ2lzdGVyKGNiKSB7XG4gICAgICAgIHJldHVybiBlbWl0dGVyLnJlZ2lzdGVyKGNiLCB0aGlzID09PSBudWxsKTtcbiAgICB9XG4gICAgO1xuICAgIHJlZ2lzdGVyLm9uY2UgPSBmdW5jdGlvbiAoY2IpIHtcbiAgICAgICAgdmFyIGNhbGxiYWNrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgYXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2IuYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICAgICAgICAgIGVtaXR0ZXIucmVtb3ZlKGNhbGxiYWNrKTtcbiAgICAgICAgfTtcbiAgICAgICAgZW1pdHRlci5yZWdpc3RlcihjYWxsYmFjayk7XG4gICAgfTtcbiAgICByZWdpc3Rlci5yZW1vdmUgPSBmdW5jdGlvbiAoY2IpIHsgcmV0dXJuIGVtaXR0ZXIucmVtb3ZlKGNiKTsgfTtcbiAgICByZWdpc3Rlci5pbnZva2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVtaXR0ZXIuaW52b2tlLmFwcGx5KGVtaXR0ZXIsIGFyZ3MpO1xuICAgIH07XG4gICAgcmVnaXN0ZXIuaW52b2tlQXN5bmMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVtaXR0ZXIuaW52b2tlQXN5bmMuYXBwbHkoZW1pdHRlciwgYXJncyk7XG4gICAgfTtcbiAgICByZWdpc3Rlci5jbGVhciA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVtaXR0ZXIuY2xlYXIoKTsgfTtcbiAgICByZXR1cm4gcmVnaXN0ZXI7XG59XG5leHBvcnRzLmNyZWF0ZVNpZ25hbCA9IGNyZWF0ZVNpZ25hbDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///31\n')},function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { "default": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nvar websocket_1 = __importDefault(__webpack_require__(33));\nvar msgpack = __importStar(__webpack_require__(4));\nvar Connection = /** @class */ (function (_super) {\n    __extends(Connection, _super);\n    function Connection(url, autoConnect) {\n        if (autoConnect === void 0) { autoConnect = true; }\n        var _this = _super.call(this, url, undefined, { connect: autoConnect }) || this;\n        _this._enqueuedCalls = [];\n        return _this;\n    }\n    Connection.prototype.onOpenCallback = function (event) {\n        _super.prototype.onOpenCallback.call(this);\n        this.binaryType = \'arraybuffer\';\n        if (this._enqueuedCalls.length > 0) {\n            for (var _i = 0, _a = this._enqueuedCalls; _i < _a.length; _i++) {\n                var _b = _a[_i], method = _b[0], args = _b[1];\n                this[method].apply(this, args);\n            }\n            // clear enqueued calls.\n            this._enqueuedCalls = [];\n        }\n    };\n    Connection.prototype.send = function (data) {\n        if (this.ws.readyState === websocket_1.default.OPEN) {\n            return _super.prototype.send.call(this, msgpack.encode(data));\n        }\n        else {\n            // WebSocket not connected.\n            // Enqueue data to be sent when readyState == OPEN\n            this._enqueuedCalls.push([\'send\', [data]]);\n        }\n    };\n    return Connection;\n}(websocket_1.default));\nexports.Connection = Connection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9Db25uZWN0aW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnQkFBZ0Isc0NBQXNDLGlCQUFpQixFQUFFO0FBQ3ZGLDZCQUE2Qix1REFBdUQ7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsc0JBQXNCO0FBQzdDO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVELGtDQUFrQyxtQkFBTyxDQUFDLEVBQXNCO0FBQ2hFLDJCQUEyQixtQkFBTyxDQUFDLENBQVc7QUFDOUM7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLG9CQUFvQjtBQUN6RCx1REFBdUQsdUJBQXVCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELGdCQUFnQjtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIHJlc3VsdFtrXSA9IG1vZFtrXTtcbiAgICByZXN1bHRbXCJkZWZhdWx0XCJdID0gbW9kO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHdlYnNvY2tldF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJAZ2FtZXN0ZGlvL3dlYnNvY2tldFwiKSk7XG52YXIgbXNncGFjayA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9tc2dwYWNrXCIpKTtcbnZhciBDb25uZWN0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDb25uZWN0aW9uLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIENvbm5lY3Rpb24odXJsLCBhdXRvQ29ubmVjdCkge1xuICAgICAgICBpZiAoYXV0b0Nvbm5lY3QgPT09IHZvaWQgMCkgeyBhdXRvQ29ubmVjdCA9IHRydWU7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgdXJsLCB1bmRlZmluZWQsIHsgY29ubmVjdDogYXV0b0Nvbm5lY3QgfSkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuX2VucXVldWVkQ2FsbHMgPSBbXTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBDb25uZWN0aW9uLnByb3RvdHlwZS5vbk9wZW5DYWxsYmFjayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLm9uT3BlbkNhbGxiYWNrLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMuYmluYXJ5VHlwZSA9ICdhcnJheWJ1ZmZlcic7XG4gICAgICAgIGlmICh0aGlzLl9lbnF1ZXVlZENhbGxzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSB0aGlzLl9lbnF1ZXVlZENhbGxzOyBfaSA8IF9hLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgICAgIHZhciBfYiA9IF9hW19pXSwgbWV0aG9kID0gX2JbMF0sIGFyZ3MgPSBfYlsxXTtcbiAgICAgICAgICAgICAgICB0aGlzW21ldGhvZF0uYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBjbGVhciBlbnF1ZXVlZCBjYWxscy5cbiAgICAgICAgICAgIHRoaXMuX2VucXVldWVkQ2FsbHMgPSBbXTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ29ubmVjdGlvbi5wcm90b3R5cGUuc2VuZCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGlmICh0aGlzLndzLnJlYWR5U3RhdGUgPT09IHdlYnNvY2tldF8xLmRlZmF1bHQuT1BFTikge1xuICAgICAgICAgICAgcmV0dXJuIF9zdXBlci5wcm90b3R5cGUuc2VuZC5jYWxsKHRoaXMsIG1zZ3BhY2suZW5jb2RlKGRhdGEpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIFdlYlNvY2tldCBub3QgY29ubmVjdGVkLlxuICAgICAgICAgICAgLy8gRW5xdWV1ZSBkYXRhIHRvIGJlIHNlbnQgd2hlbiByZWFkeVN0YXRlID09IE9QRU5cbiAgICAgICAgICAgIHRoaXMuX2VucXVldWVkQ2FsbHMucHVzaChbJ3NlbmQnLCBbZGF0YV1dKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIENvbm5lY3Rpb247XG59KHdlYnNvY2tldF8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuQ29ubmVjdGlvbiA9IENvbm5lY3Rpb247XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///32\n')},function(module,exports,__webpack_require__){"use strict";eval("Object.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var createBackoff=__webpack_require__(34).createBackoff;var WebSocketImpl=typeof WebSocket!==\"undefined\"?WebSocket:__webpack_require__(35);var WebSocketClient=function(){/**\n   * @param url DOMString The URL to which to connect; this should be the URL to which the WebSocket server will respond.\n   * @param protocols DOMString|DOMString[] Either a single protocol string or an array of protocol strings. These strings are used to indicate sub-protocols, so that a single server can implement multiple WebSocket sub-protocols (for example, you might want one server to be able to handle different types of interactions depending on the specified protocol). If you don't specify a protocol string, an empty string is assumed.\n   */function WebSocketClient(url,protocols){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};_classCallCheck(this,WebSocketClient);this.url=url;this.protocols=protocols;this.reconnectEnabled=true;this.listeners={};this.backoff=createBackoff(options.backoff||'exponential',options);this.backoff.onReady=this.onBackoffReady.bind(this);if(typeof options.connect===\"undefined\"||options.connect){this.open();}}_createClass(WebSocketClient,[{key:'open',value:function open(){var reconnect=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;this.isReconnect=reconnect;// keep binaryType used on previous WebSocket connection\nvar binaryType=this.ws&&this.ws.binaryType;this.ws=new WebSocketImpl(this.url,this.protocols);this.ws.onclose=this.onCloseCallback.bind(this);this.ws.onerror=this.onErrorCallback.bind(this);this.ws.onmessage=this.onMessageCallback.bind(this);this.ws.onopen=this.onOpenCallback.bind(this);if(binaryType){this.ws.binaryType=binaryType;}}/**\n   * @ignore\n   */},{key:'onBackoffReady',value:function onBackoffReady(number,delay){// console.log(\"onBackoffReady\", number + ' ' + delay + 'ms');\nthis.open(true);}/**\n   * @ignore\n   */},{key:'onCloseCallback',value:function onCloseCallback(e){if(!this.isReconnect&&this.listeners['onclose']){this.listeners['onclose'].apply(null,arguments);}if(this.reconnectEnabled&&e.code<3000){this.backoff.backoff();}}/**\n   * @ignore\n   */},{key:'onErrorCallback',value:function onErrorCallback(){if(this.listeners['onerror']){this.listeners['onerror'].apply(null,arguments);}}/**\n   * @ignore\n   */},{key:'onMessageCallback',value:function onMessageCallback(){if(this.listeners['onmessage']){this.listeners['onmessage'].apply(null,arguments);}}/**\n   * @ignore\n   */},{key:'onOpenCallback',value:function onOpenCallback(){if(this.listeners['onopen']){this.listeners['onopen'].apply(null,arguments);}if(this.isReconnect&&this.listeners['onreconnect']){this.listeners['onreconnect'].apply(null,arguments);}this.isReconnect=false;}/**\n   * The number of bytes of data that have been queued using calls to send()\n   * but not yet transmitted to the network. This value does not reset to zero\n   * when the connection is closed; if you keep calling send(), this will\n   * continue to climb.\n   *\n   * @type unsigned long\n   * @readonly\n   */},{key:'close',/**\n   * Closes the WebSocket connection or connection attempt, if any. If the\n   * connection is already CLOSED, this method does nothing.\n   *\n   * @param code A numeric value indicating the status code explaining why the connection is being closed. If this parameter is not specified, a default value of 1000 (indicating a normal \"transaction complete\" closure) is assumed. See the list of status codes on the CloseEvent page for permitted values.\n   * @param reason A human-readable string explaining why the connection is closing. This string must be no longer than 123 bytes of UTF-8 text (not characters).\n   *\n   * @return void\n   */value:function close(code,reason){if(typeof code=='undefined'){code=1000;}this.reconnectEnabled=false;this.ws.close(code,reason);}/**\n   * Transmits data to the server over the WebSocket connection.\n   * @param data DOMString|ArrayBuffer|Blob\n   * @return void\n   */},{key:'send',value:function send(data){this.ws.send(data);}/**\n   * An event listener to be called when the WebSocket connection's readyState changes to CLOSED. The listener receives a CloseEvent named \"close\".\n   * @param listener EventListener\n   */},{key:'bufferedAmount',get:function get(){return this.ws.bufferedAmount;}/**\n   * The current state of the connection; this is one of the Ready state constants.\n   * @type unsigned short\n   * @readonly\n   */},{key:'readyState',get:function get(){return this.ws.readyState;}/**\n   * A string indicating the type of binary data being transmitted by the\n   * connection. This should be either \"blob\" if DOM Blob objects are being\n   * used or \"arraybuffer\" if ArrayBuffer objects are being used.\n   * @type DOMString\n   */},{key:'binaryType',get:function get(){return this.ws.binaryType;},set:function set(binaryType){this.ws.binaryType=binaryType;}/**\n   * The extensions selected by the server. This is currently only the empty\n   * string or a list of extensions as negotiated by the connection.\n   * @type DOMString\n   */},{key:'extensions',get:function get(){return this.ws.extensions;},set:function set(extensions){this.ws.extensions=extensions;}/**\n   * A string indicating the name of the sub-protocol the server selected;\n   * this will be one of the strings specified in the protocols parameter when\n   * creating the WebSocket object.\n   * @type DOMString\n   */},{key:'protocol',get:function get(){return this.ws.protocol;},set:function set(protocol){this.ws.protocol=protocol;}},{key:'onclose',set:function set(listener){this.listeners['onclose']=listener;},get:function get(){return this.listeners['onclose'];}/**\n   * An event listener to be called when an error occurs. This is a simple event named \"error\".\n   * @param listener EventListener\n   */},{key:'onerror',set:function set(listener){this.listeners['onerror']=listener;},get:function get(){return this.listeners['onerror'];}/**\n   * An event listener to be called when a message is received from the server. The listener receives a MessageEvent named \"message\".\n   * @param listener EventListener\n   */},{key:'onmessage',set:function set(listener){this.listeners['onmessage']=listener;},get:function get(){return this.listeners['onmessage'];}/**\n   * An event listener to be called when the WebSocket connection's readyState changes to OPEN; this indicates that the connection is ready to send and receive data. The event is a simple one with the name \"open\".\n   * @param listener EventListener\n   */},{key:'onopen',set:function set(listener){this.listeners['onopen']=listener;},get:function get(){return this.listeners['onopen'];}/**\n   * @param listener EventListener\n   */},{key:'onreconnect',set:function set(listener){this.listeners['onreconnect']=listener;},get:function get(){return this.listeners['onreconnect'];}}]);return WebSocketClient;}();/**\n * The connection is not yet open.\n */WebSocketClient.CONNECTING=WebSocketImpl.CONNECTING;/**\n * The connection is open and ready to communicate.\n */WebSocketClient.OPEN=WebSocketImpl.OPEN;/**\n * The connection is in the process of closing.\n */WebSocketClient.CLOSING=WebSocketImpl.CLOSING;/**\n * The connection is closed or couldn't be opened.\n */WebSocketClient.CLOSED=WebSocketImpl.CLOSED;exports.default=WebSocketClient;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///33\n")},function(module,exports,__webpack_require__){"use strict";eval('Object.defineProperty(exports,"__esModule",{value:true});exports.createBackoff=createBackoff;var backoff={exponential:function exponential(attempt,delay){return Math.floor(Math.random()*Math.pow(2,attempt)*delay);},fibonacci:function fibonacci(attempt,delay){var current=1;if(attempt>current){var prev=1,current=2;for(var index=2;index<attempt;index++){var next=prev+current;prev=current;current=next;}}return Math.floor(Math.random()*current*delay);}};function createBackoff(type,options){return new Backoff(backoff[type],options);}function Backoff(func,options){this.func=func;this.attempts=0;this.delay=typeof options.initialDelay!=="undefined"?options.initialDelay:100;}Backoff.prototype.backoff=function(){setTimeout(this.onReady,this.func(++this.attempts,this.delay));};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0BnYW1lc3RkaW8vd2Vic29ja2V0L2xpYi9iYWNrb2ZmLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhLDRDQUE0QyxXQUFXLEVBQUUsb0NBQW9DLGFBQWEsZ0RBQWdELDREQUE0RCw2Q0FBNkMsY0FBYyxvQkFBb0IscUJBQXFCLGdCQUFnQixjQUFjLFNBQVMsc0JBQXNCLGFBQWEsZUFBZSxrREFBa0QscUNBQXFDLDJDQUEyQywrQkFBK0IsZUFBZSxnQkFBZ0IsK0VBQStFLHFDQUFxQyIsImZpbGUiOiIzNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7ZXhwb3J0cy5jcmVhdGVCYWNrb2ZmPWNyZWF0ZUJhY2tvZmY7dmFyIGJhY2tvZmY9e2V4cG9uZW50aWFsOmZ1bmN0aW9uIGV4cG9uZW50aWFsKGF0dGVtcHQsZGVsYXkpe3JldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqTWF0aC5wb3coMixhdHRlbXB0KSpkZWxheSk7fSxmaWJvbmFjY2k6ZnVuY3Rpb24gZmlib25hY2NpKGF0dGVtcHQsZGVsYXkpe3ZhciBjdXJyZW50PTE7aWYoYXR0ZW1wdD5jdXJyZW50KXt2YXIgcHJldj0xLGN1cnJlbnQ9Mjtmb3IodmFyIGluZGV4PTI7aW5kZXg8YXR0ZW1wdDtpbmRleCsrKXt2YXIgbmV4dD1wcmV2K2N1cnJlbnQ7cHJldj1jdXJyZW50O2N1cnJlbnQ9bmV4dDt9fXJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqY3VycmVudCpkZWxheSk7fX07ZnVuY3Rpb24gY3JlYXRlQmFja29mZih0eXBlLG9wdGlvbnMpe3JldHVybiBuZXcgQmFja29mZihiYWNrb2ZmW3R5cGVdLG9wdGlvbnMpO31mdW5jdGlvbiBCYWNrb2ZmKGZ1bmMsb3B0aW9ucyl7dGhpcy5mdW5jPWZ1bmM7dGhpcy5hdHRlbXB0cz0wO3RoaXMuZGVsYXk9dHlwZW9mIG9wdGlvbnMuaW5pdGlhbERlbGF5IT09XCJ1bmRlZmluZWRcIj9vcHRpb25zLmluaXRpYWxEZWxheToxMDA7fUJhY2tvZmYucHJvdG90eXBlLmJhY2tvZmY9ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KHRoaXMub25SZWFkeSx0aGlzLmZ1bmMoKyt0aGlzLmF0dGVtcHRzLHRoaXMuZGVsYXkpKTt9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///34\n')},function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3dzIChpZ25vcmVkKSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///35\n")},function(module,exports,__webpack_require__){"use strict";eval("\n/**\n * We do not assign 'storage' to window.localStorage immediatelly for React\n * Native compatibility. window.localStorage is not present when this module is\n * loaded.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage;\nfunction getStorage() {\n    if (!storage) {\n        storage = (typeof (cc) !== 'undefined' && cc.sys && cc.sys.localStorage)\n            ? cc.sys.localStorage // compatibility with cocos creator\n            : typeof (window) !== \"undefined\" && window.localStorage //RN does have window object at this point, but localStorage is not defined\n                ? window.localStorage // regular browser environment\n                : {\n                    cache: {},\n                    setItem: function (key, value) { this.cache[key] = value; },\n                    getItem: function (key) { this.cache[key]; },\n                    removeItem: function (key) { delete this.cache[key]; },\n                };\n    }\n    return storage;\n}\nfunction setItem(key, value) {\n    getStorage().setItem(key, value);\n}\nexports.setItem = setItem;\nfunction removeItem(key) {\n    getStorage().removeItem(key);\n}\nexports.removeItem = removeItem;\nfunction getItem(key, callback) {\n    var value = getStorage().getItem(key);\n    if (typeof (Promise) === 'undefined' || // old browsers\n        !(value instanceof Promise)) {\n        // browser has synchronous return\n        callback(value);\n    }\n    else {\n        // react-native is asynchronous\n        value.then(function (id) { return callback(id); });\n    }\n}\nexports.getItem = getItem;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9TdG9yYWdlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxjQUFjO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0Isb0RBQW9ELHlCQUF5QixFQUFFO0FBQy9FLDZDQUE2QyxpQkFBaUIsRUFBRTtBQUNoRSxnREFBZ0Qsd0JBQXdCLEVBQUU7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHFCQUFxQixFQUFFO0FBQ3pEO0FBQ0E7QUFDQSIsImZpbGUiOiIzNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBXZSBkbyBub3QgYXNzaWduICdzdG9yYWdlJyB0byB3aW5kb3cubG9jYWxTdG9yYWdlIGltbWVkaWF0ZWxseSBmb3IgUmVhY3RcbiAqIE5hdGl2ZSBjb21wYXRpYmlsaXR5LiB3aW5kb3cubG9jYWxTdG9yYWdlIGlzIG5vdCBwcmVzZW50IHdoZW4gdGhpcyBtb2R1bGUgaXNcbiAqIGxvYWRlZC5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHN0b3JhZ2U7XG5mdW5jdGlvbiBnZXRTdG9yYWdlKCkge1xuICAgIGlmICghc3RvcmFnZSkge1xuICAgICAgICBzdG9yYWdlID0gKHR5cGVvZiAoY2MpICE9PSAndW5kZWZpbmVkJyAmJiBjYy5zeXMgJiYgY2Muc3lzLmxvY2FsU3RvcmFnZSlcbiAgICAgICAgICAgID8gY2Muc3lzLmxvY2FsU3RvcmFnZSAvLyBjb21wYXRpYmlsaXR5IHdpdGggY29jb3MgY3JlYXRvclxuICAgICAgICAgICAgOiB0eXBlb2YgKHdpbmRvdykgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2FsU3RvcmFnZSAvL1JOIGRvZXMgaGF2ZSB3aW5kb3cgb2JqZWN0IGF0IHRoaXMgcG9pbnQsIGJ1dCBsb2NhbFN0b3JhZ2UgaXMgbm90IGRlZmluZWRcbiAgICAgICAgICAgICAgICA/IHdpbmRvdy5sb2NhbFN0b3JhZ2UgLy8gcmVndWxhciBicm93c2VyIGVudmlyb25tZW50XG4gICAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hlOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgc2V0SXRlbTogZnVuY3Rpb24gKGtleSwgdmFsdWUpIHsgdGhpcy5jYWNoZVtrZXldID0gdmFsdWU7IH0sXG4gICAgICAgICAgICAgICAgICAgIGdldEl0ZW06IGZ1bmN0aW9uIChrZXkpIHsgdGhpcy5jYWNoZVtrZXldOyB9LFxuICAgICAgICAgICAgICAgICAgICByZW1vdmVJdGVtOiBmdW5jdGlvbiAoa2V5KSB7IGRlbGV0ZSB0aGlzLmNhY2hlW2tleV07IH0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHN0b3JhZ2U7XG59XG5mdW5jdGlvbiBzZXRJdGVtKGtleSwgdmFsdWUpIHtcbiAgICBnZXRTdG9yYWdlKCkuc2V0SXRlbShrZXksIHZhbHVlKTtcbn1cbmV4cG9ydHMuc2V0SXRlbSA9IHNldEl0ZW07XG5mdW5jdGlvbiByZW1vdmVJdGVtKGtleSkge1xuICAgIGdldFN0b3JhZ2UoKS5yZW1vdmVJdGVtKGtleSk7XG59XG5leHBvcnRzLnJlbW92ZUl0ZW0gPSByZW1vdmVJdGVtO1xuZnVuY3Rpb24gZ2V0SXRlbShrZXksIGNhbGxiYWNrKSB7XG4gICAgdmFyIHZhbHVlID0gZ2V0U3RvcmFnZSgpLmdldEl0ZW0oa2V5KTtcbiAgICBpZiAodHlwZW9mIChQcm9taXNlKSA9PT0gJ3VuZGVmaW5lZCcgfHwgLy8gb2xkIGJyb3dzZXJzXG4gICAgICAgICEodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSkge1xuICAgICAgICAvLyBicm93c2VyIGhhcyBzeW5jaHJvbm91cyByZXR1cm5cbiAgICAgICAgY2FsbGJhY2sodmFsdWUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gcmVhY3QtbmF0aXZlIGlzIGFzeW5jaHJvbm91c1xuICAgICAgICB2YWx1ZS50aGVuKGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gY2FsbGJhY2soaWQpOyB9KTtcbiAgICB9XG59XG5leHBvcnRzLmdldEl0ZW0gPSBnZXRJdGVtO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///36\n")},function(module,exports,__webpack_require__){"use strict";eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError("Generator is already executing.");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nvar Push = /** @class */ (function () {\n    function Push(endpoint) {\n        this.endpoint = endpoint.replace("ws", "http");\n    }\n    Push.prototype.register = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.check();\n                        return [4 /*yield*/, this.registerServiceWorker()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.requestNotificationPermission()];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ;\n    Push.prototype.registerServiceWorker = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, navigator.serviceWorker.register(this.endpoint + "/push")];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Push.prototype.requestNotificationPermission = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var permission;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, window["Notification"].requestPermission()];\n                    case 1:\n                        permission = _a.sent();\n                        // value of permission can be \'granted\', \'default\', \'denied\'\n                        // granted: user has accepted the request\n                        // default: user has dismissed the notification permission popup by clicking on x\n                        // denied: user has denied the request.\n                        if (permission !== "granted") {\n                            throw new Error("Permission not granted for Notification");\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Push.prototype.check = function () {\n        if (!("serviceWorker" in navigator)) {\n            throw new Error("No Service Worker support!");\n        }\n        if (!("PushManager" in window)) {\n            throw new Error("No Push API Support!");\n        }\n    };\n    return Push;\n}());\nexports.Push = Push;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///37\n')},function(module,exports,__webpack_require__){"use strict";eval('\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nvar state_listener_1 = __webpack_require__(39);\nvar fossilDelta = __importStar(__webpack_require__(42));\nvar msgpack = __importStar(__webpack_require__(4));\nvar FossilDeltaSerializer = /** @class */ (function () {\n    function FossilDeltaSerializer() {\n        this.api = new state_listener_1.StateContainer({});\n    }\n    FossilDeltaSerializer.prototype.getState = function () {\n        return this.api.state;\n    };\n    FossilDeltaSerializer.prototype.setState = function (encodedState) {\n        this.previousState = new Uint8Array(encodedState);\n        this.api.set(msgpack.decode(this.previousState));\n    };\n    FossilDeltaSerializer.prototype.patch = function (binaryPatch) {\n        // apply patch\n        this.previousState = new Uint8Array(fossilDelta.apply(this.previousState, binaryPatch));\n        // trigger update callbacks\n        this.api.set(msgpack.decode(this.previousState));\n    };\n    FossilDeltaSerializer.prototype.teardown = function () {\n        this.api.removeAllListeners();\n    };\n    return FossilDeltaSerializer;\n}());\nexports.FossilDeltaSerializer = FossilDeltaSerializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9zZXJpYWxpemVyL0Zvc3NpbERlbHRhU2VyaWFsaXplci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWM7QUFDNUQsdUJBQXVCLG1CQUFPLENBQUMsRUFBMkI7QUFDMUQsK0JBQStCLG1CQUFPLENBQUMsRUFBYztBQUNyRCwyQkFBMkIsbUJBQU8sQ0FBQyxDQUFZO0FBQy9DO0FBQ0E7QUFDQSx5REFBeUQ7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6IjM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgcmVzdWx0W2tdID0gbW9kW2tdO1xuICAgIHJlc3VsdFtcImRlZmF1bHRcIl0gPSBtb2Q7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgc3RhdGVfbGlzdGVuZXJfMSA9IHJlcXVpcmUoXCJAZ2FtZXN0ZGlvL3N0YXRlLWxpc3RlbmVyXCIpO1xudmFyIGZvc3NpbERlbHRhID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJmb3NzaWwtZGVsdGFcIikpO1xudmFyIG1zZ3BhY2sgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4uL21zZ3BhY2tcIikpO1xudmFyIEZvc3NpbERlbHRhU2VyaWFsaXplciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBGb3NzaWxEZWx0YVNlcmlhbGl6ZXIoKSB7XG4gICAgICAgIHRoaXMuYXBpID0gbmV3IHN0YXRlX2xpc3RlbmVyXzEuU3RhdGVDb250YWluZXIoe30pO1xuICAgIH1cbiAgICBGb3NzaWxEZWx0YVNlcmlhbGl6ZXIucHJvdG90eXBlLmdldFN0YXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hcGkuc3RhdGU7XG4gICAgfTtcbiAgICBGb3NzaWxEZWx0YVNlcmlhbGl6ZXIucHJvdG90eXBlLnNldFN0YXRlID0gZnVuY3Rpb24gKGVuY29kZWRTdGF0ZSkge1xuICAgICAgICB0aGlzLnByZXZpb3VzU3RhdGUgPSBuZXcgVWludDhBcnJheShlbmNvZGVkU3RhdGUpO1xuICAgICAgICB0aGlzLmFwaS5zZXQobXNncGFjay5kZWNvZGUodGhpcy5wcmV2aW91c1N0YXRlKSk7XG4gICAgfTtcbiAgICBGb3NzaWxEZWx0YVNlcmlhbGl6ZXIucHJvdG90eXBlLnBhdGNoID0gZnVuY3Rpb24gKGJpbmFyeVBhdGNoKSB7XG4gICAgICAgIC8vIGFwcGx5IHBhdGNoXG4gICAgICAgIHRoaXMucHJldmlvdXNTdGF0ZSA9IG5ldyBVaW50OEFycmF5KGZvc3NpbERlbHRhLmFwcGx5KHRoaXMucHJldmlvdXNTdGF0ZSwgYmluYXJ5UGF0Y2gpKTtcbiAgICAgICAgLy8gdHJpZ2dlciB1cGRhdGUgY2FsbGJhY2tzXG4gICAgICAgIHRoaXMuYXBpLnNldChtc2dwYWNrLmRlY29kZSh0aGlzLnByZXZpb3VzU3RhdGUpKTtcbiAgICB9O1xuICAgIEZvc3NpbERlbHRhU2VyaWFsaXplci5wcm90b3R5cGUudGVhcmRvd24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuYXBpLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICAgIH07XG4gICAgcmV0dXJuIEZvc3NpbERlbHRhU2VyaWFsaXplcjtcbn0oKSk7XG5leHBvcnRzLkZvc3NpbERlbHRhU2VyaWFsaXplciA9IEZvc3NpbERlbHRhU2VyaWFsaXplcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///38\n')},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar StateContainer_1 = __webpack_require__(40);\nexports.StateContainer = StateContainer_1.StateContainer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0BnYW1lc3RkaW8vc3RhdGUtbGlzdGVuZXIvbGliL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsdUJBQXVCLG1CQUFPLENBQUMsRUFBa0I7QUFDakQiLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBTdGF0ZUNvbnRhaW5lcl8xID0gcmVxdWlyZShcIi4vU3RhdGVDb250YWluZXJcIik7XG5leHBvcnRzLlN0YXRlQ29udGFpbmVyID0gU3RhdGVDb250YWluZXJfMS5TdGF0ZUNvbnRhaW5lcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///39\n')},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar compare_1 = __webpack_require__(41);\nvar StateContainer = /** @class */ (function () {\n    function StateContainer(state) {\n        this.listeners = [];\n        this.matcherPlaceholders = {\n            ":id": /^([a-zA-Z0-9\\-_]+)$/,\n            ":number": /^([0-9]+)$/,\n            ":string": /^(\\w+)$/,\n            ":axis": /^([xyz])$/,\n            ":*": /(.*)/,\n        };\n        this.state = state;\n        this.reset();\n    }\n    StateContainer.prototype.set = function (newState) {\n        var patches = compare_1.compare(this.state, newState);\n        this.state = newState;\n        this.checkPatches(patches, this.listeners, this.defaultListener);\n        return patches;\n    };\n    StateContainer.prototype.registerPlaceholder = function (placeholder, matcher) {\n        this.matcherPlaceholders[placeholder] = matcher;\n    };\n    StateContainer.prototype.listen = function (segments, callback, immediate) {\n        var _this = this;\n        var rules;\n        if (typeof (segments) === "function") {\n            rules = [];\n            callback = segments;\n        }\n        else {\n            rules = segments.split("/");\n        }\n        if (callback.length > 1) {\n            console.warn(".listen() accepts only one parameter.");\n        }\n        var listener = {\n            callback: callback,\n            rawRules: rules,\n            rules: rules.map(function (segment) {\n                if (typeof (segment) === "string") {\n                    // replace placeholder matchers\n                    return (segment.indexOf(":") === 0)\n                        ? _this.matcherPlaceholders[segment] || _this.matcherPlaceholders[":*"]\n                        : new RegExp("^" + segment + "$");\n                }\n                else {\n                    return segment;\n                }\n            })\n        };\n        if (rules.length === 0) {\n            this.defaultListener = listener;\n        }\n        else {\n            this.listeners.push(listener);\n        }\n        // immediatelly try to trigger this listener.\n        if (immediate) {\n            this.checkPatches(compare_1.compare({}, this.state), [listener]);\n        }\n        return listener;\n    };\n    StateContainer.prototype.removeListener = function (listener) {\n        for (var i = this.listeners.length - 1; i >= 0; i--) {\n            if (this.listeners[i] === listener) {\n                this.listeners.splice(i, 1);\n            }\n        }\n    };\n    StateContainer.prototype.removeAllListeners = function () {\n        this.reset();\n    };\n    StateContainer.prototype.checkPatches = function (patches, listeners, defaultListener) {\n        for (var j = 0, len = listeners.length; j < len; j++) {\n            var listener = listeners[j];\n            for (var i = patches.length - 1; i >= 0; i--) {\n                var pathVariables = listener && this.getPathVariables(patches[i], listener);\n                if (pathVariables) {\n                    listener.callback({\n                        path: pathVariables,\n                        rawPath: patches[i].path,\n                        operation: patches[i].operation,\n                        value: patches[i].value\n                    });\n                    patches[i].matched = true;\n                }\n            }\n        }\n        // trigger default listener callback with each unmatched patch\n        if (defaultListener) {\n            for (var i = patches.length - 1; i >= 0; i--) {\n                if (!patches[i].matched) {\n                    defaultListener.callback(patches[i]);\n                }\n            }\n        }\n    };\n    StateContainer.prototype.getPathVariables = function (patch, listener) {\n        // skip if rules count differ from patch\n        if (patch.path.length !== listener.rules.length) {\n            return false;\n        }\n        var path = {};\n        for (var i = 0, len = listener.rules.length; i < len; i++) {\n            var matches = patch.path[i].match(listener.rules[i]);\n            if (!matches || matches.length === 0 || matches.length > 2) {\n                return false;\n            }\n            else if (listener.rawRules[i].substr(0, 1) === ":") {\n                path[listener.rawRules[i].substr(1)] = matches[1];\n            }\n        }\n        return path;\n    };\n    StateContainer.prototype.reset = function () {\n        this.listeners = [];\n    };\n    return StateContainer;\n}());\nexports.StateContainer = StateContainer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0BnYW1lc3RkaW8vc3RhdGUtbGlzdGVuZXIvbGliL1N0YXRlQ29udGFpbmVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsZ0JBQWdCLG1CQUFPLENBQUMsRUFBVztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFFBQVE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFNBQVM7QUFDeEQ7QUFDQSw0Q0FBNEMsUUFBUTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsUUFBUTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsU0FBUztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6IjQwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgY29tcGFyZV8xID0gcmVxdWlyZShcIi4vY29tcGFyZVwiKTtcbnZhciBTdGF0ZUNvbnRhaW5lciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTdGF0ZUNvbnRhaW5lcihzdGF0ZSkge1xuICAgICAgICB0aGlzLmxpc3RlbmVycyA9IFtdO1xuICAgICAgICB0aGlzLm1hdGNoZXJQbGFjZWhvbGRlcnMgPSB7XG4gICAgICAgICAgICBcIjppZFwiOiAvXihbYS16QS1aMC05XFwtX10rKSQvLFxuICAgICAgICAgICAgXCI6bnVtYmVyXCI6IC9eKFswLTldKykkLyxcbiAgICAgICAgICAgIFwiOnN0cmluZ1wiOiAvXihcXHcrKSQvLFxuICAgICAgICAgICAgXCI6YXhpc1wiOiAvXihbeHl6XSkkLyxcbiAgICAgICAgICAgIFwiOipcIjogLyguKikvLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgICAgIHRoaXMucmVzZXQoKTtcbiAgICB9XG4gICAgU3RhdGVDb250YWluZXIucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uIChuZXdTdGF0ZSkge1xuICAgICAgICB2YXIgcGF0Y2hlcyA9IGNvbXBhcmVfMS5jb21wYXJlKHRoaXMuc3RhdGUsIG5ld1N0YXRlKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IG5ld1N0YXRlO1xuICAgICAgICB0aGlzLmNoZWNrUGF0Y2hlcyhwYXRjaGVzLCB0aGlzLmxpc3RlbmVycywgdGhpcy5kZWZhdWx0TGlzdGVuZXIpO1xuICAgICAgICByZXR1cm4gcGF0Y2hlcztcbiAgICB9O1xuICAgIFN0YXRlQ29udGFpbmVyLnByb3RvdHlwZS5yZWdpc3RlclBsYWNlaG9sZGVyID0gZnVuY3Rpb24gKHBsYWNlaG9sZGVyLCBtYXRjaGVyKSB7XG4gICAgICAgIHRoaXMubWF0Y2hlclBsYWNlaG9sZGVyc1twbGFjZWhvbGRlcl0gPSBtYXRjaGVyO1xuICAgIH07XG4gICAgU3RhdGVDb250YWluZXIucHJvdG90eXBlLmxpc3RlbiA9IGZ1bmN0aW9uIChzZWdtZW50cywgY2FsbGJhY2ssIGltbWVkaWF0ZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB2YXIgcnVsZXM7XG4gICAgICAgIGlmICh0eXBlb2YgKHNlZ21lbnRzKSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBydWxlcyA9IFtdO1xuICAgICAgICAgICAgY2FsbGJhY2sgPSBzZWdtZW50cztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJ1bGVzID0gc2VnbWVudHMuc3BsaXQoXCIvXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjYWxsYmFjay5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCIubGlzdGVuKCkgYWNjZXB0cyBvbmx5IG9uZSBwYXJhbWV0ZXIuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBsaXN0ZW5lciA9IHtcbiAgICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgICAgIHJhd1J1bGVzOiBydWxlcyxcbiAgICAgICAgICAgIHJ1bGVzOiBydWxlcy5tYXAoZnVuY3Rpb24gKHNlZ21lbnQpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIChzZWdtZW50KSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgICAgICAvLyByZXBsYWNlIHBsYWNlaG9sZGVyIG1hdGNoZXJzXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoc2VnbWVudC5pbmRleE9mKFwiOlwiKSA9PT0gMClcbiAgICAgICAgICAgICAgICAgICAgICAgID8gX3RoaXMubWF0Y2hlclBsYWNlaG9sZGVyc1tzZWdtZW50XSB8fCBfdGhpcy5tYXRjaGVyUGxhY2Vob2xkZXJzW1wiOipcIl1cbiAgICAgICAgICAgICAgICAgICAgICAgIDogbmV3IFJlZ0V4cChcIl5cIiArIHNlZ21lbnQgKyBcIiRcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VnbWVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9O1xuICAgICAgICBpZiAocnVsZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHRMaXN0ZW5lciA9IGxpc3RlbmVyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaW1tZWRpYXRlbGx5IHRyeSB0byB0cmlnZ2VyIHRoaXMgbGlzdGVuZXIuXG4gICAgICAgIGlmIChpbW1lZGlhdGUpIHtcbiAgICAgICAgICAgIHRoaXMuY2hlY2tQYXRjaGVzKGNvbXBhcmVfMS5jb21wYXJlKHt9LCB0aGlzLnN0YXRlKSwgW2xpc3RlbmVyXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxpc3RlbmVyO1xuICAgIH07XG4gICAgU3RhdGVDb250YWluZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyID0gZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSB0aGlzLmxpc3RlbmVycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgaWYgKHRoaXMubGlzdGVuZXJzW2ldID09PSBsaXN0ZW5lcikge1xuICAgICAgICAgICAgICAgIHRoaXMubGlzdGVuZXJzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgU3RhdGVDb250YWluZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5yZXNldCgpO1xuICAgIH07XG4gICAgU3RhdGVDb250YWluZXIucHJvdG90eXBlLmNoZWNrUGF0Y2hlcyA9IGZ1bmN0aW9uIChwYXRjaGVzLCBsaXN0ZW5lcnMsIGRlZmF1bHRMaXN0ZW5lcikge1xuICAgICAgICBmb3IgKHZhciBqID0gMCwgbGVuID0gbGlzdGVuZXJzLmxlbmd0aDsgaiA8IGxlbjsgaisrKSB7XG4gICAgICAgICAgICB2YXIgbGlzdGVuZXIgPSBsaXN0ZW5lcnNbal07XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gcGF0Y2hlcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgICAgIHZhciBwYXRoVmFyaWFibGVzID0gbGlzdGVuZXIgJiYgdGhpcy5nZXRQYXRoVmFyaWFibGVzKHBhdGNoZXNbaV0sIGxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICBpZiAocGF0aFZhcmlhYmxlcykge1xuICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lci5jYWxsYmFjayh7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiBwYXRoVmFyaWFibGVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmF3UGF0aDogcGF0Y2hlc1tpXS5wYXRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgb3BlcmF0aW9uOiBwYXRjaGVzW2ldLm9wZXJhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBwYXRjaGVzW2ldLnZhbHVlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBwYXRjaGVzW2ldLm1hdGNoZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyB0cmlnZ2VyIGRlZmF1bHQgbGlzdGVuZXIgY2FsbGJhY2sgd2l0aCBlYWNoIHVubWF0Y2hlZCBwYXRjaFxuICAgICAgICBpZiAoZGVmYXVsdExpc3RlbmVyKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gcGF0Y2hlcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgICAgIGlmICghcGF0Y2hlc1tpXS5tYXRjaGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRMaXN0ZW5lci5jYWxsYmFjayhwYXRjaGVzW2ldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFN0YXRlQ29udGFpbmVyLnByb3RvdHlwZS5nZXRQYXRoVmFyaWFibGVzID0gZnVuY3Rpb24gKHBhdGNoLCBsaXN0ZW5lcikge1xuICAgICAgICAvLyBza2lwIGlmIHJ1bGVzIGNvdW50IGRpZmZlciBmcm9tIHBhdGNoXG4gICAgICAgIGlmIChwYXRjaC5wYXRoLmxlbmd0aCAhPT0gbGlzdGVuZXIucnVsZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHBhdGggPSB7fTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGxpc3RlbmVyLnJ1bGVzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgbWF0Y2hlcyA9IHBhdGNoLnBhdGhbaV0ubWF0Y2gobGlzdGVuZXIucnVsZXNbaV0pO1xuICAgICAgICAgICAgaWYgKCFtYXRjaGVzIHx8IG1hdGNoZXMubGVuZ3RoID09PSAwIHx8IG1hdGNoZXMubGVuZ3RoID4gMikge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGxpc3RlbmVyLnJhd1J1bGVzW2ldLnN1YnN0cigwLCAxKSA9PT0gXCI6XCIpIHtcbiAgICAgICAgICAgICAgICBwYXRoW2xpc3RlbmVyLnJhd1J1bGVzW2ldLnN1YnN0cigxKV0gPSBtYXRjaGVzWzFdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH07XG4gICAgU3RhdGVDb250YWluZXIucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmxpc3RlbmVycyA9IFtdO1xuICAgIH07XG4gICAgcmV0dXJuIFN0YXRlQ29udGFpbmVyO1xufSgpKTtcbmV4cG9ydHMuU3RhdGVDb250YWluZXIgPSBTdGF0ZUNvbnRhaW5lcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///40\n')},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nfunction compare(tree1, tree2) {\n    var patches = [];\n    generate(tree1, tree2, patches, []);\n    return patches;\n}\nexports.compare = compare;\nfunction concat(arr, value) {\n    var newArr = arr.slice();\n    newArr.push(value);\n    return newArr;\n}\nfunction objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        var keys_1 = new Array(obj.length);\n        for (var k = 0; k < keys_1.length; k++) {\n            keys_1[k] = "" + k;\n        }\n        return keys_1;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    var keys = [];\n    for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n;\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction generate(mirror, obj, patches, path) {\n    var newKeys = objectKeys(obj);\n    var oldKeys = objectKeys(mirror);\n    var deleted = false;\n    for (var t = oldKeys.length - 1; t >= 0; t--) {\n        var key = oldKeys[t];\n        var oldVal = mirror[key];\n        if (obj.hasOwnProperty(key) && !(obj[key] === undefined && oldVal !== undefined && Array.isArray(obj) === false)) {\n            var newVal = obj[key];\n            if (typeof oldVal == "object" && oldVal != null && typeof newVal == "object" && newVal != null) {\n                generate(oldVal, newVal, patches, concat(path, key));\n            }\n            else {\n                if (oldVal !== newVal) {\n                    patches.push({\n                        operation: "replace",\n                        path: concat(path, key),\n                        value: newVal,\n                        previousValue: oldVal\n                    });\n                }\n            }\n        }\n        else {\n            patches.push({ operation: "remove", path: concat(path, key) });\n            deleted = true; // property has been deleted\n        }\n    }\n    if (!deleted && newKeys.length == oldKeys.length) {\n        return;\n    }\n    for (var t = newKeys.length - 1; t >= 0; t--) {\n        var key = newKeys[t];\n        if (!mirror.hasOwnProperty(key) && obj[key] !== undefined) {\n            var newVal = obj[key];\n            var addPath = concat(path, key);\n            // compare deeper additions\n            if (typeof newVal == "object" && newVal != null) {\n                generate({}, newVal, patches, addPath);\n            }\n            patches.push({ operation: "add", path: addPath, value: newVal });\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0BnYW1lc3RkaW8vc3RhdGUtbGlzdGVuZXIvbGliL2NvbXBhcmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG1CQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsUUFBUTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLCtDQUErQztBQUN6RSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxRQUFRO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLDBCQUEwQixpREFBaUQ7QUFDM0U7QUFDQTtBQUNBIiwiZmlsZSI6IjQxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBjb21wYXJlKHRyZWUxLCB0cmVlMikge1xuICAgIHZhciBwYXRjaGVzID0gW107XG4gICAgZ2VuZXJhdGUodHJlZTEsIHRyZWUyLCBwYXRjaGVzLCBbXSk7XG4gICAgcmV0dXJuIHBhdGNoZXM7XG59XG5leHBvcnRzLmNvbXBhcmUgPSBjb21wYXJlO1xuZnVuY3Rpb24gY29uY2F0KGFyciwgdmFsdWUpIHtcbiAgICB2YXIgbmV3QXJyID0gYXJyLnNsaWNlKCk7XG4gICAgbmV3QXJyLnB1c2godmFsdWUpO1xuICAgIHJldHVybiBuZXdBcnI7XG59XG5mdW5jdGlvbiBvYmplY3RLZXlzKG9iaikge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgICAgdmFyIGtleXNfMSA9IG5ldyBBcnJheShvYmoubGVuZ3RoKTtcbiAgICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCBrZXlzXzEubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgICAgIGtleXNfMVtrXSA9IFwiXCIgKyBrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBrZXlzXzE7XG4gICAgfVxuICAgIGlmIChPYmplY3Qua2V5cykge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqKTtcbiAgICB9XG4gICAgdmFyIGtleXMgPSBbXTtcbiAgICBmb3IgKHZhciBpIGluIG9iaikge1xuICAgICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGkpKSB7XG4gICAgICAgICAgICBrZXlzLnB1c2goaSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGtleXM7XG59XG47XG4vLyBEaXJ0eSBjaGVjayBpZiBvYmogaXMgZGlmZmVyZW50IGZyb20gbWlycm9yLCBnZW5lcmF0ZSBwYXRjaGVzIGFuZCB1cGRhdGUgbWlycm9yXG5mdW5jdGlvbiBnZW5lcmF0ZShtaXJyb3IsIG9iaiwgcGF0Y2hlcywgcGF0aCkge1xuICAgIHZhciBuZXdLZXlzID0gb2JqZWN0S2V5cyhvYmopO1xuICAgIHZhciBvbGRLZXlzID0gb2JqZWN0S2V5cyhtaXJyb3IpO1xuICAgIHZhciBkZWxldGVkID0gZmFsc2U7XG4gICAgZm9yICh2YXIgdCA9IG9sZEtleXMubGVuZ3RoIC0gMTsgdCA+PSAwOyB0LS0pIHtcbiAgICAgICAgdmFyIGtleSA9IG9sZEtleXNbdF07XG4gICAgICAgIHZhciBvbGRWYWwgPSBtaXJyb3Jba2V5XTtcbiAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICEob2JqW2tleV0gPT09IHVuZGVmaW5lZCAmJiBvbGRWYWwgIT09IHVuZGVmaW5lZCAmJiBBcnJheS5pc0FycmF5KG9iaikgPT09IGZhbHNlKSkge1xuICAgICAgICAgICAgdmFyIG5ld1ZhbCA9IG9ialtrZXldO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBvbGRWYWwgPT0gXCJvYmplY3RcIiAmJiBvbGRWYWwgIT0gbnVsbCAmJiB0eXBlb2YgbmV3VmFsID09IFwib2JqZWN0XCIgJiYgbmV3VmFsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZShvbGRWYWwsIG5ld1ZhbCwgcGF0Y2hlcywgY29uY2F0KHBhdGgsIGtleSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKG9sZFZhbCAhPT0gbmV3VmFsKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhdGNoZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb246IFwicmVwbGFjZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDogY29uY2F0KHBhdGgsIGtleSksXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbmV3VmFsLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNWYWx1ZTogb2xkVmFsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHBhdGNoZXMucHVzaCh7IG9wZXJhdGlvbjogXCJyZW1vdmVcIiwgcGF0aDogY29uY2F0KHBhdGgsIGtleSkgfSk7XG4gICAgICAgICAgICBkZWxldGVkID0gdHJ1ZTsgLy8gcHJvcGVydHkgaGFzIGJlZW4gZGVsZXRlZFxuICAgICAgICB9XG4gICAgfVxuICAgIGlmICghZGVsZXRlZCAmJiBuZXdLZXlzLmxlbmd0aCA9PSBvbGRLZXlzLmxlbmd0aCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGZvciAodmFyIHQgPSBuZXdLZXlzLmxlbmd0aCAtIDE7IHQgPj0gMDsgdC0tKSB7XG4gICAgICAgIHZhciBrZXkgPSBuZXdLZXlzW3RdO1xuICAgICAgICBpZiAoIW1pcnJvci5oYXNPd25Qcm9wZXJ0eShrZXkpICYmIG9ialtrZXldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHZhciBuZXdWYWwgPSBvYmpba2V5XTtcbiAgICAgICAgICAgIHZhciBhZGRQYXRoID0gY29uY2F0KHBhdGgsIGtleSk7XG4gICAgICAgICAgICAvLyBjb21wYXJlIGRlZXBlciBhZGRpdGlvbnNcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbmV3VmFsID09IFwib2JqZWN0XCIgJiYgbmV3VmFsICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZSh7fSwgbmV3VmFsLCBwYXRjaGVzLCBhZGRQYXRoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBhdGNoZXMucHVzaCh7IG9wZXJhdGlvbjogXCJhZGRcIiwgcGF0aDogYWRkUGF0aCwgdmFsdWU6IG5ld1ZhbCB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///41\n')},function(module,exports){eval("// Fossil SCM delta compression algorithm\n// ======================================\n//\n// Format:\n// http://www.fossil-scm.org/index.html/doc/tip/www/delta_format.wiki\n//\n// Algorithm:\n// http://www.fossil-scm.org/index.html/doc/tip/www/delta_encoder_algorithm.wiki\n//\n// Original implementation:\n// http://www.fossil-scm.org/index.html/artifact/d1b0598adcd650b3551f63b17dfc864e73775c3d\n//\n// LICENSE\n// -------\n//\n// Copyright 2014 Dmitry Chestnykh (JavaScript port)\n// Copyright 2007 D. Richard Hipp  (original C version)\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or\n// without modification, are permitted provided that the\n// following conditions are met:\n//\n//   1. Redistributions of source code must retain the above\n//      copyright notice, this list of conditions and the\n//      following disclaimer.\n//\n//   2. Redistributions in binary form must reproduce the above\n//      copyright notice, this list of conditions and the\n//      following disclaimer in the documentation and/or other\n//      materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS\n// OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n// BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n// OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// The views and conclusions contained in the software and documentation\n// are those of the authors and contributors and should not be interpreted\n// as representing official policies, either expressed or implied, of anybody\n// else.\n//\n(function(root, factory) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = factory();\n  else root.fossilDelta = factory();\n})(this, function() {\n'use strict';\n\nvar fossilDelta = {};\n\n// Hash window width in bytes. Must be a power of two.\nvar NHASH = 16;\n\nfunction RollingHash() {\n  this.a = 0; // hash     (16-bit unsigned)\n  this.b = 0; // values   (16-bit unsigned)\n  this.i = 0; // start of the hash window (16-bit unsigned)\n  this.z = new Array(NHASH); // the values that have been hashed.\n}\n\n// Initialize the rolling hash using the first NHASH bytes of\n// z at the given position.\nRollingHash.prototype.init = function(z, pos) {\n  var a = 0, b = 0, i, x;\n  for(i = 0; i < NHASH; i++){\n    x = z[pos+i];\n    a = (a + x) & 0xffff;\n    b = (b + (NHASH-i)*x) & 0xffff;\n    this.z[i] = x;\n  }\n  this.a = a & 0xffff;\n  this.b = b & 0xffff;\n  this.i = 0;\n};\n\n// Advance the rolling hash by a single byte \"c\".\nRollingHash.prototype.next = function(c) {\n  var old = this.z[this.i];\n  this.z[this.i] = c;\n  this.i = (this.i+1)&(NHASH-1);\n  this.a = (this.a - old + c) & 0xffff;\n  this.b = (this.b - NHASH*old + this.a) & 0xffff;\n};\n\n// Return a 32-bit hash value.\nRollingHash.prototype.value = function() {\n  return ((this.a & 0xffff) | (this.b & 0xffff)<<16)>>>0;\n};\n\nvar zDigits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz~\".\n                split('').map(function (x) { return x.charCodeAt(0); });\n\nvar zValue = [\n  -1, -1, -1, -1, -1, -1, -1, -1,   -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,   -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1,   -1, -1, -1, -1, -1, -1, -1, -1,\n   0,  1,  2,  3,  4,  5,  6,  7,    8,  9, -1, -1, -1, -1, -1, -1,\n  -1, 10, 11, 12, 13, 14, 15, 16,   17, 18, 19, 20, 21, 22, 23, 24,\n  25, 26, 27, 28, 29, 30, 31, 32,   33, 34, 35, -1, -1, -1, -1, 36,\n  -1, 37, 38, 39, 40, 41, 42, 43,   44, 45, 46, 47, 48, 49, 50, 51,\n  52, 53, 54, 55, 56, 57, 58, 59,   60, 61, 62, -1, -1, -1, 63, -1\n];\n\n// Reader reads bytes, chars, ints from array.\nfunction Reader(array) {\n  this.a = array; // source array\n  this.pos = 0;   // current position in array\n}\n\nReader.prototype.haveBytes = function() {\n  return this.pos < this.a.length;\n};\n\nReader.prototype.getByte = function() {\n  var b = this.a[this.pos];\n  this.pos++;\n  if (this.pos > this.a.length) throw new RangeError('out of bounds');\n  return b;\n};\n\nReader.prototype.getChar = function() {\n  return String.fromCharCode(this.getByte());\n};\n\n// Read base64-encoded unsigned integer.\nReader.prototype.getInt = function(){\n  var v = 0, c;\n  while(this.haveBytes() && (c = zValue[0x7f & this.getByte()]) >= 0) {\n     v = (v<<6) + c;\n  }\n  this.pos--;\n  return v >>> 0;\n};\n\n\n// Write writes an array.\nfunction Writer() {\n  this.a = [];\n}\n\nWriter.prototype.toArray = function() {\n  return this.a;\n};\n\nWriter.prototype.putByte = function(b) {\n  this.a.push(b & 0xff);\n};\n\n// Write an ASCII character (s is a one-char string).\nWriter.prototype.putChar = function(s) {\n  this.putByte(s.charCodeAt(0));\n};\n\n// Write a base64 unsigned integer.\nWriter.prototype.putInt = function(v){\n  var i, j, zBuf = [];\n  if (v === 0) {\n    this.putChar('0');\n    return;\n  }\n  for (i = 0; v > 0; i++, v >>>= 6)\n    zBuf.push(zDigits[v&0x3f]);\n  for (j = i-1; j >= 0; j--)\n    this.putByte(zBuf[j]);\n};\n\n// Copy from array at start to end.\nWriter.prototype.putArray = function(a, start, end) {\n  for (var i = start; i < end; i++) this.a.push(a[i]);\n};\n\n// Return the number digits in the base64 representation of a positive integer.\nfunction digitCount(v){\n  var i, x;\n  for (i = 1, x = 64; v >= x; i++, x <<= 6){ /* nothing */ }\n  return i;\n}\n\n// Return a 32-bit checksum of the array.\nfunction checksum(arr) {\n  var sum0 = 0, sum1 = 0, sum2 = 0, sum3 = 0,\n      z = 0, N = arr.length;\n  //TODO measure if this unrolling is helpful.\n  while (N >= 16) {\n    sum0 = sum0 + arr[z+0] | 0;\n    sum1 = sum1 + arr[z+1] | 0;\n    sum2 = sum2 + arr[z+2] | 0;\n    sum3 = sum3 + arr[z+3] | 0;\n\n    sum0 = sum0 + arr[z+4] | 0;\n    sum1 = sum1 + arr[z+5] | 0;\n    sum2 = sum2 + arr[z+6] | 0;\n    sum3 = sum3 + arr[z+7] | 0;\n\n    sum0 = sum0 + arr[z+8] | 0;\n    sum1 = sum1 + arr[z+9] | 0;\n    sum2 = sum2 + arr[z+10] | 0;\n    sum3 = sum3 + arr[z+11] | 0;\n\n    sum0 = sum0 + arr[z+12] | 0;\n    sum1 = sum1 + arr[z+13] | 0;\n    sum2 = sum2 + arr[z+14] | 0;\n    sum3 = sum3 + arr[z+15] | 0;\n\n    z += 16;\n    N -= 16;\n  }\n  while (N >= 4) {\n    sum0 = sum0 + arr[z+0] | 0;\n    sum1 = sum1 + arr[z+1] | 0;\n    sum2 = sum2 + arr[z+2] | 0;\n    sum3 = sum3 + arr[z+3] | 0;\n    z += 4;\n    N -= 4;\n  }\n  sum3 = (((sum3 + (sum2 << 8) | 0) + (sum1 << 16) | 0) + (sum0 << 24) | 0);\n  /* jshint -W086 */\n  switch (N) {\n    case 3: sum3 = sum3 + (arr[z+2] <<  8) | 0; /* falls through */\n    case 2: sum3 = sum3 + (arr[z+1] << 16) | 0; /* falls through */\n    case 1: sum3 = sum3 + (arr[z+0] << 24) | 0; /* falls through */\n  }\n  return sum3 >>> 0;\n}\n\n// Create a new delta from src to out.\nfossilDelta.create = function(src, out) {\n  var zDelta = new Writer();\n  var lenOut = out.length;\n  var lenSrc = src.length;\n  var i, lastRead = -1;\n\n  zDelta.putInt(lenOut);\n  zDelta.putChar('\\n');\n\n  // If the source is very small, it means that we have no\n  // chance of ever doing a copy command.  Just output a single\n  // literal segment for the entire target and exit.\n  if (lenSrc <= NHASH) {\n    zDelta.putInt(lenOut);\n    zDelta.putChar(':');\n    zDelta.putArray(out, 0, lenOut);\n    zDelta.putInt(checksum(out));\n    zDelta.putChar(';');\n    return zDelta.toArray();\n  }\n\n  // Compute the hash table used to locate matching sections in the source.\n  var nHash = Math.ceil(lenSrc / NHASH);\n  var collide =  new Array(nHash);\n  var landmark = new Array(nHash);\n  for (i = 0; i < collide.length; i++) collide[i] = -1;\n  for (i = 0; i < landmark.length; i++) landmark[i] = -1;\n  var hv, h = new RollingHash();\n  for (i = 0; i < lenSrc-NHASH; i += NHASH) {\n    h.init(src, i);\n    hv = h.value() % nHash;\n    collide[i/NHASH] = landmark[hv];\n    landmark[hv] = i/NHASH;\n  }\n\n  var base = 0;\n  var iSrc, iBlock, bestCnt, bestOfst, bestLitsz;\n  while (base+NHASH<lenOut) {\n    bestOfst=0;\n    bestLitsz=0;\n    h.init(out, base);\n    i = 0; // Trying to match a landmark against zOut[base+i]\n    bestCnt = 0;\n    while(1) {\n      var limit = 250;\n      hv = h.value() % nHash;\n      iBlock = landmark[hv];\n      while (iBlock >= 0 && (limit--)>0 ) {\n        //\n        // The hash window has identified a potential match against\n        // landmark block iBlock.  But we need to investigate further.\n        //\n        // Look for a region in zOut that matches zSrc. Anchor the search\n        // at zSrc[iSrc] and zOut[base+i].  Do not include anything prior to\n        // zOut[base] or after zOut[outLen] nor anything after zSrc[srcLen].\n        //\n        // Set cnt equal to the length of the match and set ofst so that\n        // zSrc[ofst] is the first element of the match.  litsz is the number\n        // of characters between zOut[base] and the beginning of the match.\n        // sz will be the overhead (in bytes) needed to encode the copy\n        // command.  Only generate copy command if the overhead of the\n        // copy command is less than the amount of literal text to be copied.\n        //\n        var cnt, ofst, litsz;\n        var j, k, x, y;\n        var sz;\n\n        // Beginning at iSrc, match forwards as far as we can.\n        // j counts the number of characters that match.\n        iSrc = iBlock*NHASH;\n        for (j = 0, x = iSrc, y = base+i; x < lenSrc && y < lenOut; j++, x++, y++) {\n          if (src[x] !== out[y]) break;\n        }\n        j--;\n\n        // Beginning at iSrc-1, match backwards as far as we can.\n        // k counts the number of characters that match.\n        for (k = 1; k < iSrc && k <= i; k++) {\n          if (src[iSrc-k] !== out[base+i-k]) break;\n        }\n        k--;\n\n        // Compute the offset and size of the matching region.\n        ofst = iSrc-k;\n        cnt = j+k+1;\n        litsz = i-k;  // Number of bytes of literal text before the copy\n        // sz will hold the number of bytes needed to encode the \"insert\"\n        // command and the copy command, not counting the \"insert\" text.\n        sz = digitCount(i-k)+digitCount(cnt)+digitCount(ofst)+3;\n        if (cnt >= sz && cnt > bestCnt) {\n          // Remember this match only if it is the best so far and it\n          // does not increase the file size.\n          bestCnt = cnt;\n          bestOfst = iSrc-k;\n          bestLitsz = litsz;\n        }\n\n        // Check the next matching block\n        iBlock = collide[iBlock];\n      }\n\n      // We have a copy command that does not cause the delta to be larger\n      // than a literal insert.  So add the copy command to the delta.\n      if (bestCnt > 0) {\n        if (bestLitsz > 0) {\n          // Add an insert command before the copy.\n          zDelta.putInt(bestLitsz);\n          zDelta.putChar(':');\n          zDelta.putArray(out, base, base+bestLitsz);\n          base += bestLitsz;\n        }\n        base += bestCnt;\n        zDelta.putInt(bestCnt);\n        zDelta.putChar('@');\n        zDelta.putInt(bestOfst);\n        zDelta.putChar(',');\n        if (bestOfst + bestCnt -1 > lastRead) {\n          lastRead = bestOfst + bestCnt - 1;\n        }\n        bestCnt = 0;\n        break;\n      }\n\n      // If we reach this point, it means no match is found so far\n      if (base+i+NHASH >= lenOut){\n        // We have reached the end and have not found any\n        // matches.  Do an \"insert\" for everything that does not match\n        zDelta.putInt(lenOut-base);\n        zDelta.putChar(':');\n        zDelta.putArray(out, base, base+lenOut-base);\n        base = lenOut;\n        break;\n      }\n\n      // Advance the hash by one character. Keep looking for a match.\n      h.next(out[base+i+NHASH]);\n      i++;\n    }\n  }\n  // Output a final \"insert\" record to get all the text at the end of\n  // the file that does not match anything in the source.\n  if(base < lenOut) {\n    zDelta.putInt(lenOut-base);\n    zDelta.putChar(':');\n    zDelta.putArray(out, base, base+lenOut-base);\n  }\n  // Output the final checksum record.\n  zDelta.putInt(checksum(out));\n  zDelta.putChar(';');\n  return zDelta.toArray();\n};\n\n// Return the size (in bytes) of the output from applying a delta.\nfossilDelta.outputSize = function(delta){\n  var zDelta = new Reader(delta);\n  var size = zDelta.getInt();\n  if (zDelta.getChar() !== '\\n')\n    throw new Error('size integer not terminated by \\'\\\\n\\'');\n  return size;\n};\n\n// Apply a delta.\nfossilDelta.apply = function(src, delta, opts) {\n  var limit, total = 0;\n  var zDelta = new Reader(delta);\n  var lenSrc = src.length;\n  var lenDelta = delta.length;\n\n  limit = zDelta.getInt();\n  if (zDelta.getChar() !== '\\n')\n    throw new Error('size integer not terminated by \\'\\\\n\\'');\n  var zOut = new Writer();\n  while(zDelta.haveBytes()) {\n    var cnt, ofst;\n    cnt = zDelta.getInt();\n\n    switch (zDelta.getChar()) {\n      case '@':\n        ofst = zDelta.getInt();\n        if (zDelta.haveBytes() && zDelta.getChar() !== ',')\n          throw new Error('copy command not terminated by \\',\\'');\n        total += cnt;\n        if (total > limit)\n          throw new Error('copy exceeds output file size');\n        if (ofst+cnt > lenSrc)\n          throw new Error('copy extends past end of input');\n        zOut.putArray(src, ofst, ofst+cnt);\n        break;\n\n      case ':':\n        total += cnt;\n        if (total > limit)\n          throw new Error('insert command gives an output larger than predicted');\n        if (cnt > lenDelta)\n          throw new Error('insert count exceeds size of delta');\n        zOut.putArray(zDelta.a, zDelta.pos, zDelta.pos+cnt);\n        zDelta.pos += cnt;\n        break;\n\n      case ';':\n        var out = zOut.toArray();\n        if ((!opts || opts.verifyChecksum !== false) && cnt !== checksum(out))\n          throw new Error('bad checksum');\n        if (total !== limit)\n          throw new Error('generated size does not match predicted size');\n        return out;\n\n      default:\n        throw new Error('unknown delta operator');\n    }\n  }\n  throw new Error('unterminated delta');\n};\n\nreturn fossilDelta;\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2Zvc3NpbC1kZWx0YS9mb3NzaWwtZGVsdGEuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQywrQkFBK0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGFBQWE7QUFDYixhQUFhO0FBQ2IsYUFBYTtBQUNiLDRCQUE0QjtBQUM1Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRDQUE0Qyx3QkFBd0IsRUFBRTs7QUFFdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixlQUFlO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFCQUFxQixTQUFTO0FBQzlCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixRQUFRLGVBQWU7QUFDNUM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DLCtDQUErQztBQUMvQywrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsb0JBQW9CO0FBQ2pDLGFBQWEscUJBQXFCO0FBQ2xDO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QywwQkFBMEI7QUFDbkU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsb0JBQW9CO0FBQ3ZDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxDQUFDIiwiZmlsZSI6IjQyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gRm9zc2lsIFNDTSBkZWx0YSBjb21wcmVzc2lvbiBhbGdvcml0aG1cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vL1xuLy8gRm9ybWF0OlxuLy8gaHR0cDovL3d3dy5mb3NzaWwtc2NtLm9yZy9pbmRleC5odG1sL2RvYy90aXAvd3d3L2RlbHRhX2Zvcm1hdC53aWtpXG4vL1xuLy8gQWxnb3JpdGhtOlxuLy8gaHR0cDovL3d3dy5mb3NzaWwtc2NtLm9yZy9pbmRleC5odG1sL2RvYy90aXAvd3d3L2RlbHRhX2VuY29kZXJfYWxnb3JpdGhtLndpa2lcbi8vXG4vLyBPcmlnaW5hbCBpbXBsZW1lbnRhdGlvbjpcbi8vIGh0dHA6Ly93d3cuZm9zc2lsLXNjbS5vcmcvaW5kZXguaHRtbC9hcnRpZmFjdC9kMWIwNTk4YWRjZDY1MGIzNTUxZjYzYjE3ZGZjODY0ZTczNzc1YzNkXG4vL1xuLy8gTElDRU5TRVxuLy8gLS0tLS0tLVxuLy9cbi8vIENvcHlyaWdodCAyMDE0IERtaXRyeSBDaGVzdG55a2ggKEphdmFTY3JpcHQgcG9ydClcbi8vIENvcHlyaWdodCAyMDA3IEQuIFJpY2hhcmQgSGlwcCAgKG9yaWdpbmFsIEMgdmVyc2lvbilcbi8vIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vL1xuLy8gUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvclxuLy8gd2l0aG91dCBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6XG4vL1xuLy8gICAxLiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlXG4vLyAgICAgIGNvcHlyaWdodCBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGVcbi8vICAgICAgZm9sbG93aW5nIGRpc2NsYWltZXIuXG4vL1xuLy8gICAyLiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlXG4vLyAgICAgIGNvcHlyaWdodCBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGVcbi8vICAgICAgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyXG4vLyAgICAgIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uXG4vL1xuLy8gVEhJUyBTT0ZUV0FSRSBJUyBQUk9WSURFRCBCWSBUSEUgQVVUSE9SUyBgYEFTIElTJycgQU5EIEFOWSBFWFBSRVNTXG4vLyBPUiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRFxuLy8gV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFXG4vLyBBUkUgRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09OVFJJQlVUT1JTIEJFXG4vLyBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SXG4vLyBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRlxuLy8gU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEsIE9SIFBST0ZJVFM7IE9SXG4vLyBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTiBBTlkgVEhFT1JZIE9GIExJQUJJTElUWSxcbi8vIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFXG4vLyBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTIFNPRlRXQVJFLFxuLy8gRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS5cbi8vXG4vLyBUaGUgdmlld3MgYW5kIGNvbmNsdXNpb25zIGNvbnRhaW5lZCBpbiB0aGUgc29mdHdhcmUgYW5kIGRvY3VtZW50YXRpb25cbi8vIGFyZSB0aG9zZSBvZiB0aGUgYXV0aG9ycyBhbmQgY29udHJpYnV0b3JzIGFuZCBzaG91bGQgbm90IGJlIGludGVycHJldGVkXG4vLyBhcyByZXByZXNlbnRpbmcgb2ZmaWNpYWwgcG9saWNpZXMsIGVpdGhlciBleHByZXNzZWQgb3IgaW1wbGllZCwgb2YgYW55Ym9keVxuLy8gZWxzZS5cbi8vXG4oZnVuY3Rpb24ocm9vdCwgZmFjdG9yeSkge1xuICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICBlbHNlIHJvb3QuZm9zc2lsRGVsdGEgPSBmYWN0b3J5KCk7XG59KSh0aGlzLCBmdW5jdGlvbigpIHtcbid1c2Ugc3RyaWN0JztcblxudmFyIGZvc3NpbERlbHRhID0ge307XG5cbi8vIEhhc2ggd2luZG93IHdpZHRoIGluIGJ5dGVzLiBNdXN0IGJlIGEgcG93ZXIgb2YgdHdvLlxudmFyIE5IQVNIID0gMTY7XG5cbmZ1bmN0aW9uIFJvbGxpbmdIYXNoKCkge1xuICB0aGlzLmEgPSAwOyAvLyBoYXNoICAgICAoMTYtYml0IHVuc2lnbmVkKVxuICB0aGlzLmIgPSAwOyAvLyB2YWx1ZXMgICAoMTYtYml0IHVuc2lnbmVkKVxuICB0aGlzLmkgPSAwOyAvLyBzdGFydCBvZiB0aGUgaGFzaCB3aW5kb3cgKDE2LWJpdCB1bnNpZ25lZClcbiAgdGhpcy56ID0gbmV3IEFycmF5KE5IQVNIKTsgLy8gdGhlIHZhbHVlcyB0aGF0IGhhdmUgYmVlbiBoYXNoZWQuXG59XG5cbi8vIEluaXRpYWxpemUgdGhlIHJvbGxpbmcgaGFzaCB1c2luZyB0aGUgZmlyc3QgTkhBU0ggYnl0ZXMgb2Zcbi8vIHogYXQgdGhlIGdpdmVuIHBvc2l0aW9uLlxuUm9sbGluZ0hhc2gucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbih6LCBwb3MpIHtcbiAgdmFyIGEgPSAwLCBiID0gMCwgaSwgeDtcbiAgZm9yKGkgPSAwOyBpIDwgTkhBU0g7IGkrKyl7XG4gICAgeCA9IHpbcG9zK2ldO1xuICAgIGEgPSAoYSArIHgpICYgMHhmZmZmO1xuICAgIGIgPSAoYiArIChOSEFTSC1pKSp4KSAmIDB4ZmZmZjtcbiAgICB0aGlzLnpbaV0gPSB4O1xuICB9XG4gIHRoaXMuYSA9IGEgJiAweGZmZmY7XG4gIHRoaXMuYiA9IGIgJiAweGZmZmY7XG4gIHRoaXMuaSA9IDA7XG59O1xuXG4vLyBBZHZhbmNlIHRoZSByb2xsaW5nIGhhc2ggYnkgYSBzaW5nbGUgYnl0ZSBcImNcIi5cblJvbGxpbmdIYXNoLnByb3RvdHlwZS5uZXh0ID0gZnVuY3Rpb24oYykge1xuICB2YXIgb2xkID0gdGhpcy56W3RoaXMuaV07XG4gIHRoaXMuelt0aGlzLmldID0gYztcbiAgdGhpcy5pID0gKHRoaXMuaSsxKSYoTkhBU0gtMSk7XG4gIHRoaXMuYSA9ICh0aGlzLmEgLSBvbGQgKyBjKSAmIDB4ZmZmZjtcbiAgdGhpcy5iID0gKHRoaXMuYiAtIE5IQVNIKm9sZCArIHRoaXMuYSkgJiAweGZmZmY7XG59O1xuXG4vLyBSZXR1cm4gYSAzMi1iaXQgaGFzaCB2YWx1ZS5cblJvbGxpbmdIYXNoLnByb3RvdHlwZS52YWx1ZSA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gKCh0aGlzLmEgJiAweGZmZmYpIHwgKHRoaXMuYiAmIDB4ZmZmZik8PDE2KT4+PjA7XG59O1xuXG52YXIgekRpZ2l0cyA9IFwiMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaX2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6flwiLlxuICAgICAgICAgICAgICAgIHNwbGl0KCcnKS5tYXAoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHguY2hhckNvZGVBdCgwKTsgfSk7XG5cbnZhciB6VmFsdWUgPSBbXG4gIC0xLCAtMSwgLTEsIC0xLCAtMSwgLTEsIC0xLCAtMSwgICAtMSwgLTEsIC0xLCAtMSwgLTEsIC0xLCAtMSwgLTEsXG4gIC0xLCAtMSwgLTEsIC0xLCAtMSwgLTEsIC0xLCAtMSwgICAtMSwgLTEsIC0xLCAtMSwgLTEsIC0xLCAtMSwgLTEsXG4gIC0xLCAtMSwgLTEsIC0xLCAtMSwgLTEsIC0xLCAtMSwgICAtMSwgLTEsIC0xLCAtMSwgLTEsIC0xLCAtMSwgLTEsXG4gICAwLCAgMSwgIDIsICAzLCAgNCwgIDUsICA2LCAgNywgICAgOCwgIDksIC0xLCAtMSwgLTEsIC0xLCAtMSwgLTEsXG4gIC0xLCAxMCwgMTEsIDEyLCAxMywgMTQsIDE1LCAxNiwgICAxNywgMTgsIDE5LCAyMCwgMjEsIDIyLCAyMywgMjQsXG4gIDI1LCAyNiwgMjcsIDI4LCAyOSwgMzAsIDMxLCAzMiwgICAzMywgMzQsIDM1LCAtMSwgLTEsIC0xLCAtMSwgMzYsXG4gIC0xLCAzNywgMzgsIDM5LCA0MCwgNDEsIDQyLCA0MywgICA0NCwgNDUsIDQ2LCA0NywgNDgsIDQ5LCA1MCwgNTEsXG4gIDUyLCA1MywgNTQsIDU1LCA1NiwgNTcsIDU4LCA1OSwgICA2MCwgNjEsIDYyLCAtMSwgLTEsIC0xLCA2MywgLTFcbl07XG5cbi8vIFJlYWRlciByZWFkcyBieXRlcywgY2hhcnMsIGludHMgZnJvbSBhcnJheS5cbmZ1bmN0aW9uIFJlYWRlcihhcnJheSkge1xuICB0aGlzLmEgPSBhcnJheTsgLy8gc291cmNlIGFycmF5XG4gIHRoaXMucG9zID0gMDsgICAvLyBjdXJyZW50IHBvc2l0aW9uIGluIGFycmF5XG59XG5cblJlYWRlci5wcm90b3R5cGUuaGF2ZUJ5dGVzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLnBvcyA8IHRoaXMuYS5sZW5ndGg7XG59O1xuXG5SZWFkZXIucHJvdG90eXBlLmdldEJ5dGUgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGIgPSB0aGlzLmFbdGhpcy5wb3NdO1xuICB0aGlzLnBvcysrO1xuICBpZiAodGhpcy5wb3MgPiB0aGlzLmEubGVuZ3RoKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignb3V0IG9mIGJvdW5kcycpO1xuICByZXR1cm4gYjtcbn07XG5cblJlYWRlci5wcm90b3R5cGUuZ2V0Q2hhciA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZSh0aGlzLmdldEJ5dGUoKSk7XG59O1xuXG4vLyBSZWFkIGJhc2U2NC1lbmNvZGVkIHVuc2lnbmVkIGludGVnZXIuXG5SZWFkZXIucHJvdG90eXBlLmdldEludCA9IGZ1bmN0aW9uKCl7XG4gIHZhciB2ID0gMCwgYztcbiAgd2hpbGUodGhpcy5oYXZlQnl0ZXMoKSAmJiAoYyA9IHpWYWx1ZVsweDdmICYgdGhpcy5nZXRCeXRlKCldKSA+PSAwKSB7XG4gICAgIHYgPSAodjw8NikgKyBjO1xuICB9XG4gIHRoaXMucG9zLS07XG4gIHJldHVybiB2ID4+PiAwO1xufTtcblxuXG4vLyBXcml0ZSB3cml0ZXMgYW4gYXJyYXkuXG5mdW5jdGlvbiBXcml0ZXIoKSB7XG4gIHRoaXMuYSA9IFtdO1xufVxuXG5Xcml0ZXIucHJvdG90eXBlLnRvQXJyYXkgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuYTtcbn07XG5cbldyaXRlci5wcm90b3R5cGUucHV0Qnl0ZSA9IGZ1bmN0aW9uKGIpIHtcbiAgdGhpcy5hLnB1c2goYiAmIDB4ZmYpO1xufTtcblxuLy8gV3JpdGUgYW4gQVNDSUkgY2hhcmFjdGVyIChzIGlzIGEgb25lLWNoYXIgc3RyaW5nKS5cbldyaXRlci5wcm90b3R5cGUucHV0Q2hhciA9IGZ1bmN0aW9uKHMpIHtcbiAgdGhpcy5wdXRCeXRlKHMuY2hhckNvZGVBdCgwKSk7XG59O1xuXG4vLyBXcml0ZSBhIGJhc2U2NCB1bnNpZ25lZCBpbnRlZ2VyLlxuV3JpdGVyLnByb3RvdHlwZS5wdXRJbnQgPSBmdW5jdGlvbih2KXtcbiAgdmFyIGksIGosIHpCdWYgPSBbXTtcbiAgaWYgKHYgPT09IDApIHtcbiAgICB0aGlzLnB1dENoYXIoJzAnKTtcbiAgICByZXR1cm47XG4gIH1cbiAgZm9yIChpID0gMDsgdiA+IDA7IGkrKywgdiA+Pj49IDYpXG4gICAgekJ1Zi5wdXNoKHpEaWdpdHNbdiYweDNmXSk7XG4gIGZvciAoaiA9IGktMTsgaiA+PSAwOyBqLS0pXG4gICAgdGhpcy5wdXRCeXRlKHpCdWZbal0pO1xufTtcblxuLy8gQ29weSBmcm9tIGFycmF5IGF0IHN0YXJ0IHRvIGVuZC5cbldyaXRlci5wcm90b3R5cGUucHV0QXJyYXkgPSBmdW5jdGlvbihhLCBzdGFydCwgZW5kKSB7XG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgaSsrKSB0aGlzLmEucHVzaChhW2ldKTtcbn07XG5cbi8vIFJldHVybiB0aGUgbnVtYmVyIGRpZ2l0cyBpbiB0aGUgYmFzZTY0IHJlcHJlc2VudGF0aW9uIG9mIGEgcG9zaXRpdmUgaW50ZWdlci5cbmZ1bmN0aW9uIGRpZ2l0Q291bnQodil7XG4gIHZhciBpLCB4O1xuICBmb3IgKGkgPSAxLCB4ID0gNjQ7IHYgPj0geDsgaSsrLCB4IDw8PSA2KXsgLyogbm90aGluZyAqLyB9XG4gIHJldHVybiBpO1xufVxuXG4vLyBSZXR1cm4gYSAzMi1iaXQgY2hlY2tzdW0gb2YgdGhlIGFycmF5LlxuZnVuY3Rpb24gY2hlY2tzdW0oYXJyKSB7XG4gIHZhciBzdW0wID0gMCwgc3VtMSA9IDAsIHN1bTIgPSAwLCBzdW0zID0gMCxcbiAgICAgIHogPSAwLCBOID0gYXJyLmxlbmd0aDtcbiAgLy9UT0RPIG1lYXN1cmUgaWYgdGhpcyB1bnJvbGxpbmcgaXMgaGVscGZ1bC5cbiAgd2hpbGUgKE4gPj0gMTYpIHtcbiAgICBzdW0wID0gc3VtMCArIGFyclt6KzBdIHwgMDtcbiAgICBzdW0xID0gc3VtMSArIGFyclt6KzFdIHwgMDtcbiAgICBzdW0yID0gc3VtMiArIGFyclt6KzJdIHwgMDtcbiAgICBzdW0zID0gc3VtMyArIGFyclt6KzNdIHwgMDtcblxuICAgIHN1bTAgPSBzdW0wICsgYXJyW3orNF0gfCAwO1xuICAgIHN1bTEgPSBzdW0xICsgYXJyW3orNV0gfCAwO1xuICAgIHN1bTIgPSBzdW0yICsgYXJyW3orNl0gfCAwO1xuICAgIHN1bTMgPSBzdW0zICsgYXJyW3orN10gfCAwO1xuXG4gICAgc3VtMCA9IHN1bTAgKyBhcnJbeis4XSB8IDA7XG4gICAgc3VtMSA9IHN1bTEgKyBhcnJbeis5XSB8IDA7XG4gICAgc3VtMiA9IHN1bTIgKyBhcnJbeisxMF0gfCAwO1xuICAgIHN1bTMgPSBzdW0zICsgYXJyW3orMTFdIHwgMDtcblxuICAgIHN1bTAgPSBzdW0wICsgYXJyW3orMTJdIHwgMDtcbiAgICBzdW0xID0gc3VtMSArIGFyclt6KzEzXSB8IDA7XG4gICAgc3VtMiA9IHN1bTIgKyBhcnJbeisxNF0gfCAwO1xuICAgIHN1bTMgPSBzdW0zICsgYXJyW3orMTVdIHwgMDtcblxuICAgIHogKz0gMTY7XG4gICAgTiAtPSAxNjtcbiAgfVxuICB3aGlsZSAoTiA+PSA0KSB7XG4gICAgc3VtMCA9IHN1bTAgKyBhcnJbeiswXSB8IDA7XG4gICAgc3VtMSA9IHN1bTEgKyBhcnJbeisxXSB8IDA7XG4gICAgc3VtMiA9IHN1bTIgKyBhcnJbeisyXSB8IDA7XG4gICAgc3VtMyA9IHN1bTMgKyBhcnJbeiszXSB8IDA7XG4gICAgeiArPSA0O1xuICAgIE4gLT0gNDtcbiAgfVxuICBzdW0zID0gKCgoc3VtMyArIChzdW0yIDw8IDgpIHwgMCkgKyAoc3VtMSA8PCAxNikgfCAwKSArIChzdW0wIDw8IDI0KSB8IDApO1xuICAvKiBqc2hpbnQgLVcwODYgKi9cbiAgc3dpdGNoIChOKSB7XG4gICAgY2FzZSAzOiBzdW0zID0gc3VtMyArIChhcnJbeisyXSA8PCAgOCkgfCAwOyAvKiBmYWxscyB0aHJvdWdoICovXG4gICAgY2FzZSAyOiBzdW0zID0gc3VtMyArIChhcnJbeisxXSA8PCAxNikgfCAwOyAvKiBmYWxscyB0aHJvdWdoICovXG4gICAgY2FzZSAxOiBzdW0zID0gc3VtMyArIChhcnJbeiswXSA8PCAyNCkgfCAwOyAvKiBmYWxscyB0aHJvdWdoICovXG4gIH1cbiAgcmV0dXJuIHN1bTMgPj4+IDA7XG59XG5cbi8vIENyZWF0ZSBhIG5ldyBkZWx0YSBmcm9tIHNyYyB0byBvdXQuXG5mb3NzaWxEZWx0YS5jcmVhdGUgPSBmdW5jdGlvbihzcmMsIG91dCkge1xuICB2YXIgekRlbHRhID0gbmV3IFdyaXRlcigpO1xuICB2YXIgbGVuT3V0ID0gb3V0Lmxlbmd0aDtcbiAgdmFyIGxlblNyYyA9IHNyYy5sZW5ndGg7XG4gIHZhciBpLCBsYXN0UmVhZCA9IC0xO1xuXG4gIHpEZWx0YS5wdXRJbnQobGVuT3V0KTtcbiAgekRlbHRhLnB1dENoYXIoJ1xcbicpO1xuXG4gIC8vIElmIHRoZSBzb3VyY2UgaXMgdmVyeSBzbWFsbCwgaXQgbWVhbnMgdGhhdCB3ZSBoYXZlIG5vXG4gIC8vIGNoYW5jZSBvZiBldmVyIGRvaW5nIGEgY29weSBjb21tYW5kLiAgSnVzdCBvdXRwdXQgYSBzaW5nbGVcbiAgLy8gbGl0ZXJhbCBzZWdtZW50IGZvciB0aGUgZW50aXJlIHRhcmdldCBhbmQgZXhpdC5cbiAgaWYgKGxlblNyYyA8PSBOSEFTSCkge1xuICAgIHpEZWx0YS5wdXRJbnQobGVuT3V0KTtcbiAgICB6RGVsdGEucHV0Q2hhcignOicpO1xuICAgIHpEZWx0YS5wdXRBcnJheShvdXQsIDAsIGxlbk91dCk7XG4gICAgekRlbHRhLnB1dEludChjaGVja3N1bShvdXQpKTtcbiAgICB6RGVsdGEucHV0Q2hhcignOycpO1xuICAgIHJldHVybiB6RGVsdGEudG9BcnJheSgpO1xuICB9XG5cbiAgLy8gQ29tcHV0ZSB0aGUgaGFzaCB0YWJsZSB1c2VkIHRvIGxvY2F0ZSBtYXRjaGluZyBzZWN0aW9ucyBpbiB0aGUgc291cmNlLlxuICB2YXIgbkhhc2ggPSBNYXRoLmNlaWwobGVuU3JjIC8gTkhBU0gpO1xuICB2YXIgY29sbGlkZSA9ICBuZXcgQXJyYXkobkhhc2gpO1xuICB2YXIgbGFuZG1hcmsgPSBuZXcgQXJyYXkobkhhc2gpO1xuICBmb3IgKGkgPSAwOyBpIDwgY29sbGlkZS5sZW5ndGg7IGkrKykgY29sbGlkZVtpXSA9IC0xO1xuICBmb3IgKGkgPSAwOyBpIDwgbGFuZG1hcmsubGVuZ3RoOyBpKyspIGxhbmRtYXJrW2ldID0gLTE7XG4gIHZhciBodiwgaCA9IG5ldyBSb2xsaW5nSGFzaCgpO1xuICBmb3IgKGkgPSAwOyBpIDwgbGVuU3JjLU5IQVNIOyBpICs9IE5IQVNIKSB7XG4gICAgaC5pbml0KHNyYywgaSk7XG4gICAgaHYgPSBoLnZhbHVlKCkgJSBuSGFzaDtcbiAgICBjb2xsaWRlW2kvTkhBU0hdID0gbGFuZG1hcmtbaHZdO1xuICAgIGxhbmRtYXJrW2h2XSA9IGkvTkhBU0g7XG4gIH1cblxuICB2YXIgYmFzZSA9IDA7XG4gIHZhciBpU3JjLCBpQmxvY2ssIGJlc3RDbnQsIGJlc3RPZnN0LCBiZXN0TGl0c3o7XG4gIHdoaWxlIChiYXNlK05IQVNIPGxlbk91dCkge1xuICAgIGJlc3RPZnN0PTA7XG4gICAgYmVzdExpdHN6PTA7XG4gICAgaC5pbml0KG91dCwgYmFzZSk7XG4gICAgaSA9IDA7IC8vIFRyeWluZyB0byBtYXRjaCBhIGxhbmRtYXJrIGFnYWluc3Qgek91dFtiYXNlK2ldXG4gICAgYmVzdENudCA9IDA7XG4gICAgd2hpbGUoMSkge1xuICAgICAgdmFyIGxpbWl0ID0gMjUwO1xuICAgICAgaHYgPSBoLnZhbHVlKCkgJSBuSGFzaDtcbiAgICAgIGlCbG9jayA9IGxhbmRtYXJrW2h2XTtcbiAgICAgIHdoaWxlIChpQmxvY2sgPj0gMCAmJiAobGltaXQtLSk+MCApIHtcbiAgICAgICAgLy9cbiAgICAgICAgLy8gVGhlIGhhc2ggd2luZG93IGhhcyBpZGVudGlmaWVkIGEgcG90ZW50aWFsIG1hdGNoIGFnYWluc3RcbiAgICAgICAgLy8gbGFuZG1hcmsgYmxvY2sgaUJsb2NrLiAgQnV0IHdlIG5lZWQgdG8gaW52ZXN0aWdhdGUgZnVydGhlci5cbiAgICAgICAgLy9cbiAgICAgICAgLy8gTG9vayBmb3IgYSByZWdpb24gaW4gek91dCB0aGF0IG1hdGNoZXMgelNyYy4gQW5jaG9yIHRoZSBzZWFyY2hcbiAgICAgICAgLy8gYXQgelNyY1tpU3JjXSBhbmQgek91dFtiYXNlK2ldLiAgRG8gbm90IGluY2x1ZGUgYW55dGhpbmcgcHJpb3IgdG9cbiAgICAgICAgLy8gek91dFtiYXNlXSBvciBhZnRlciB6T3V0W291dExlbl0gbm9yIGFueXRoaW5nIGFmdGVyIHpTcmNbc3JjTGVuXS5cbiAgICAgICAgLy9cbiAgICAgICAgLy8gU2V0IGNudCBlcXVhbCB0byB0aGUgbGVuZ3RoIG9mIHRoZSBtYXRjaCBhbmQgc2V0IG9mc3Qgc28gdGhhdFxuICAgICAgICAvLyB6U3JjW29mc3RdIGlzIHRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSBtYXRjaC4gIGxpdHN6IGlzIHRoZSBudW1iZXJcbiAgICAgICAgLy8gb2YgY2hhcmFjdGVycyBiZXR3ZWVuIHpPdXRbYmFzZV0gYW5kIHRoZSBiZWdpbm5pbmcgb2YgdGhlIG1hdGNoLlxuICAgICAgICAvLyBzeiB3aWxsIGJlIHRoZSBvdmVyaGVhZCAoaW4gYnl0ZXMpIG5lZWRlZCB0byBlbmNvZGUgdGhlIGNvcHlcbiAgICAgICAgLy8gY29tbWFuZC4gIE9ubHkgZ2VuZXJhdGUgY29weSBjb21tYW5kIGlmIHRoZSBvdmVyaGVhZCBvZiB0aGVcbiAgICAgICAgLy8gY29weSBjb21tYW5kIGlzIGxlc3MgdGhhbiB0aGUgYW1vdW50IG9mIGxpdGVyYWwgdGV4dCB0byBiZSBjb3BpZWQuXG4gICAgICAgIC8vXG4gICAgICAgIHZhciBjbnQsIG9mc3QsIGxpdHN6O1xuICAgICAgICB2YXIgaiwgaywgeCwgeTtcbiAgICAgICAgdmFyIHN6O1xuXG4gICAgICAgIC8vIEJlZ2lubmluZyBhdCBpU3JjLCBtYXRjaCBmb3J3YXJkcyBhcyBmYXIgYXMgd2UgY2FuLlxuICAgICAgICAvLyBqIGNvdW50cyB0aGUgbnVtYmVyIG9mIGNoYXJhY3RlcnMgdGhhdCBtYXRjaC5cbiAgICAgICAgaVNyYyA9IGlCbG9jaypOSEFTSDtcbiAgICAgICAgZm9yIChqID0gMCwgeCA9IGlTcmMsIHkgPSBiYXNlK2k7IHggPCBsZW5TcmMgJiYgeSA8IGxlbk91dDsgaisrLCB4KyssIHkrKykge1xuICAgICAgICAgIGlmIChzcmNbeF0gIT09IG91dFt5XSkgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgai0tO1xuXG4gICAgICAgIC8vIEJlZ2lubmluZyBhdCBpU3JjLTEsIG1hdGNoIGJhY2t3YXJkcyBhcyBmYXIgYXMgd2UgY2FuLlxuICAgICAgICAvLyBrIGNvdW50cyB0aGUgbnVtYmVyIG9mIGNoYXJhY3RlcnMgdGhhdCBtYXRjaC5cbiAgICAgICAgZm9yIChrID0gMTsgayA8IGlTcmMgJiYgayA8PSBpOyBrKyspIHtcbiAgICAgICAgICBpZiAoc3JjW2lTcmMta10gIT09IG91dFtiYXNlK2kta10pIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGstLTtcblxuICAgICAgICAvLyBDb21wdXRlIHRoZSBvZmZzZXQgYW5kIHNpemUgb2YgdGhlIG1hdGNoaW5nIHJlZ2lvbi5cbiAgICAgICAgb2ZzdCA9IGlTcmMtaztcbiAgICAgICAgY250ID0gaitrKzE7XG4gICAgICAgIGxpdHN6ID0gaS1rOyAgLy8gTnVtYmVyIG9mIGJ5dGVzIG9mIGxpdGVyYWwgdGV4dCBiZWZvcmUgdGhlIGNvcHlcbiAgICAgICAgLy8gc3ogd2lsbCBob2xkIHRoZSBudW1iZXIgb2YgYnl0ZXMgbmVlZGVkIHRvIGVuY29kZSB0aGUgXCJpbnNlcnRcIlxuICAgICAgICAvLyBjb21tYW5kIGFuZCB0aGUgY29weSBjb21tYW5kLCBub3QgY291bnRpbmcgdGhlIFwiaW5zZXJ0XCIgdGV4dC5cbiAgICAgICAgc3ogPSBkaWdpdENvdW50KGktaykrZGlnaXRDb3VudChjbnQpK2RpZ2l0Q291bnQob2ZzdCkrMztcbiAgICAgICAgaWYgKGNudCA+PSBzeiAmJiBjbnQgPiBiZXN0Q250KSB7XG4gICAgICAgICAgLy8gUmVtZW1iZXIgdGhpcyBtYXRjaCBvbmx5IGlmIGl0IGlzIHRoZSBiZXN0IHNvIGZhciBhbmQgaXRcbiAgICAgICAgICAvLyBkb2VzIG5vdCBpbmNyZWFzZSB0aGUgZmlsZSBzaXplLlxuICAgICAgICAgIGJlc3RDbnQgPSBjbnQ7XG4gICAgICAgICAgYmVzdE9mc3QgPSBpU3JjLWs7XG4gICAgICAgICAgYmVzdExpdHN6ID0gbGl0c3o7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDaGVjayB0aGUgbmV4dCBtYXRjaGluZyBibG9ja1xuICAgICAgICBpQmxvY2sgPSBjb2xsaWRlW2lCbG9ja107XG4gICAgICB9XG5cbiAgICAgIC8vIFdlIGhhdmUgYSBjb3B5IGNvbW1hbmQgdGhhdCBkb2VzIG5vdCBjYXVzZSB0aGUgZGVsdGEgdG8gYmUgbGFyZ2VyXG4gICAgICAvLyB0aGFuIGEgbGl0ZXJhbCBpbnNlcnQuICBTbyBhZGQgdGhlIGNvcHkgY29tbWFuZCB0byB0aGUgZGVsdGEuXG4gICAgICBpZiAoYmVzdENudCA+IDApIHtcbiAgICAgICAgaWYgKGJlc3RMaXRzeiA+IDApIHtcbiAgICAgICAgICAvLyBBZGQgYW4gaW5zZXJ0IGNvbW1hbmQgYmVmb3JlIHRoZSBjb3B5LlxuICAgICAgICAgIHpEZWx0YS5wdXRJbnQoYmVzdExpdHN6KTtcbiAgICAgICAgICB6RGVsdGEucHV0Q2hhcignOicpO1xuICAgICAgICAgIHpEZWx0YS5wdXRBcnJheShvdXQsIGJhc2UsIGJhc2UrYmVzdExpdHN6KTtcbiAgICAgICAgICBiYXNlICs9IGJlc3RMaXRzejtcbiAgICAgICAgfVxuICAgICAgICBiYXNlICs9IGJlc3RDbnQ7XG4gICAgICAgIHpEZWx0YS5wdXRJbnQoYmVzdENudCk7XG4gICAgICAgIHpEZWx0YS5wdXRDaGFyKCdAJyk7XG4gICAgICAgIHpEZWx0YS5wdXRJbnQoYmVzdE9mc3QpO1xuICAgICAgICB6RGVsdGEucHV0Q2hhcignLCcpO1xuICAgICAgICBpZiAoYmVzdE9mc3QgKyBiZXN0Q250IC0xID4gbGFzdFJlYWQpIHtcbiAgICAgICAgICBsYXN0UmVhZCA9IGJlc3RPZnN0ICsgYmVzdENudCAtIDE7XG4gICAgICAgIH1cbiAgICAgICAgYmVzdENudCA9IDA7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICAvLyBJZiB3ZSByZWFjaCB0aGlzIHBvaW50LCBpdCBtZWFucyBubyBtYXRjaCBpcyBmb3VuZCBzbyBmYXJcbiAgICAgIGlmIChiYXNlK2krTkhBU0ggPj0gbGVuT3V0KXtcbiAgICAgICAgLy8gV2UgaGF2ZSByZWFjaGVkIHRoZSBlbmQgYW5kIGhhdmUgbm90IGZvdW5kIGFueVxuICAgICAgICAvLyBtYXRjaGVzLiAgRG8gYW4gXCJpbnNlcnRcIiBmb3IgZXZlcnl0aGluZyB0aGF0IGRvZXMgbm90IG1hdGNoXG4gICAgICAgIHpEZWx0YS5wdXRJbnQobGVuT3V0LWJhc2UpO1xuICAgICAgICB6RGVsdGEucHV0Q2hhcignOicpO1xuICAgICAgICB6RGVsdGEucHV0QXJyYXkob3V0LCBiYXNlLCBiYXNlK2xlbk91dC1iYXNlKTtcbiAgICAgICAgYmFzZSA9IGxlbk91dDtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIC8vIEFkdmFuY2UgdGhlIGhhc2ggYnkgb25lIGNoYXJhY3Rlci4gS2VlcCBsb29raW5nIGZvciBhIG1hdGNoLlxuICAgICAgaC5uZXh0KG91dFtiYXNlK2krTkhBU0hdKTtcbiAgICAgIGkrKztcbiAgICB9XG4gIH1cbiAgLy8gT3V0cHV0IGEgZmluYWwgXCJpbnNlcnRcIiByZWNvcmQgdG8gZ2V0IGFsbCB0aGUgdGV4dCBhdCB0aGUgZW5kIG9mXG4gIC8vIHRoZSBmaWxlIHRoYXQgZG9lcyBub3QgbWF0Y2ggYW55dGhpbmcgaW4gdGhlIHNvdXJjZS5cbiAgaWYoYmFzZSA8IGxlbk91dCkge1xuICAgIHpEZWx0YS5wdXRJbnQobGVuT3V0LWJhc2UpO1xuICAgIHpEZWx0YS5wdXRDaGFyKCc6Jyk7XG4gICAgekRlbHRhLnB1dEFycmF5KG91dCwgYmFzZSwgYmFzZStsZW5PdXQtYmFzZSk7XG4gIH1cbiAgLy8gT3V0cHV0IHRoZSBmaW5hbCBjaGVja3N1bSByZWNvcmQuXG4gIHpEZWx0YS5wdXRJbnQoY2hlY2tzdW0ob3V0KSk7XG4gIHpEZWx0YS5wdXRDaGFyKCc7Jyk7XG4gIHJldHVybiB6RGVsdGEudG9BcnJheSgpO1xufTtcblxuLy8gUmV0dXJuIHRoZSBzaXplIChpbiBieXRlcykgb2YgdGhlIG91dHB1dCBmcm9tIGFwcGx5aW5nIGEgZGVsdGEuXG5mb3NzaWxEZWx0YS5vdXRwdXRTaXplID0gZnVuY3Rpb24oZGVsdGEpe1xuICB2YXIgekRlbHRhID0gbmV3IFJlYWRlcihkZWx0YSk7XG4gIHZhciBzaXplID0gekRlbHRhLmdldEludCgpO1xuICBpZiAoekRlbHRhLmdldENoYXIoKSAhPT0gJ1xcbicpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdzaXplIGludGVnZXIgbm90IHRlcm1pbmF0ZWQgYnkgXFwnXFxcXG5cXCcnKTtcbiAgcmV0dXJuIHNpemU7XG59O1xuXG4vLyBBcHBseSBhIGRlbHRhLlxuZm9zc2lsRGVsdGEuYXBwbHkgPSBmdW5jdGlvbihzcmMsIGRlbHRhLCBvcHRzKSB7XG4gIHZhciBsaW1pdCwgdG90YWwgPSAwO1xuICB2YXIgekRlbHRhID0gbmV3IFJlYWRlcihkZWx0YSk7XG4gIHZhciBsZW5TcmMgPSBzcmMubGVuZ3RoO1xuICB2YXIgbGVuRGVsdGEgPSBkZWx0YS5sZW5ndGg7XG5cbiAgbGltaXQgPSB6RGVsdGEuZ2V0SW50KCk7XG4gIGlmICh6RGVsdGEuZ2V0Q2hhcigpICE9PSAnXFxuJylcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NpemUgaW50ZWdlciBub3QgdGVybWluYXRlZCBieSBcXCdcXFxcblxcJycpO1xuICB2YXIgek91dCA9IG5ldyBXcml0ZXIoKTtcbiAgd2hpbGUoekRlbHRhLmhhdmVCeXRlcygpKSB7XG4gICAgdmFyIGNudCwgb2ZzdDtcbiAgICBjbnQgPSB6RGVsdGEuZ2V0SW50KCk7XG5cbiAgICBzd2l0Y2ggKHpEZWx0YS5nZXRDaGFyKCkpIHtcbiAgICAgIGNhc2UgJ0AnOlxuICAgICAgICBvZnN0ID0gekRlbHRhLmdldEludCgpO1xuICAgICAgICBpZiAoekRlbHRhLmhhdmVCeXRlcygpICYmIHpEZWx0YS5nZXRDaGFyKCkgIT09ICcsJylcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NvcHkgY29tbWFuZCBub3QgdGVybWluYXRlZCBieSBcXCcsXFwnJyk7XG4gICAgICAgIHRvdGFsICs9IGNudDtcbiAgICAgICAgaWYgKHRvdGFsID4gbGltaXQpXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdjb3B5IGV4Y2VlZHMgb3V0cHV0IGZpbGUgc2l6ZScpO1xuICAgICAgICBpZiAob2ZzdCtjbnQgPiBsZW5TcmMpXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdjb3B5IGV4dGVuZHMgcGFzdCBlbmQgb2YgaW5wdXQnKTtcbiAgICAgICAgek91dC5wdXRBcnJheShzcmMsIG9mc3QsIG9mc3QrY250KTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJzonOlxuICAgICAgICB0b3RhbCArPSBjbnQ7XG4gICAgICAgIGlmICh0b3RhbCA+IGxpbWl0KVxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW5zZXJ0IGNvbW1hbmQgZ2l2ZXMgYW4gb3V0cHV0IGxhcmdlciB0aGFuIHByZWRpY3RlZCcpO1xuICAgICAgICBpZiAoY250ID4gbGVuRGVsdGEpXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnNlcnQgY291bnQgZXhjZWVkcyBzaXplIG9mIGRlbHRhJyk7XG4gICAgICAgIHpPdXQucHV0QXJyYXkoekRlbHRhLmEsIHpEZWx0YS5wb3MsIHpEZWx0YS5wb3MrY250KTtcbiAgICAgICAgekRlbHRhLnBvcyArPSBjbnQ7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICc7JzpcbiAgICAgICAgdmFyIG91dCA9IHpPdXQudG9BcnJheSgpO1xuICAgICAgICBpZiAoKCFvcHRzIHx8IG9wdHMudmVyaWZ5Q2hlY2tzdW0gIT09IGZhbHNlKSAmJiBjbnQgIT09IGNoZWNrc3VtKG91dCkpXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdiYWQgY2hlY2tzdW0nKTtcbiAgICAgICAgaWYgKHRvdGFsICE9PSBsaW1pdClcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2dlbmVyYXRlZCBzaXplIGRvZXMgbm90IG1hdGNoIHByZWRpY3RlZCBzaXplJyk7XG4gICAgICAgIHJldHVybiBvdXQ7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBkZWx0YSBvcGVyYXRvcicpO1xuICAgIH1cbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ3VudGVybWluYXRlZCBkZWx0YScpO1xufTtcblxucmV0dXJuIGZvc3NpbERlbHRhO1xuXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///42\n")},function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar schema_1 = __webpack_require__(11);\nvar SchemaSerializer = /** @class */ (function () {\n    function SchemaSerializer() {\n    }\n    SchemaSerializer.prototype.setState = function (rawState) {\n        this.state.decode(rawState);\n    };\n    SchemaSerializer.prototype.getState = function () {\n        return this.state;\n    };\n    SchemaSerializer.prototype.patch = function (patches) {\n        this.state.decode(patches);\n    };\n    SchemaSerializer.prototype.teardown = function () {\n        // this.state.onRemove\n    };\n    SchemaSerializer.prototype.handshake = function (bytes, it) {\n        if (this.state) {\n            // validate client/server definitinos\n            var reflection = new schema_1.Reflection();\n            reflection.decode(bytes, it);\n        }\n        else {\n            // initialize reflected state from server\n            this.state = schema_1.Reflection.decode(bytes);\n        }\n    };\n    return SchemaSerializer;\n}());\nexports.SchemaSerializer = SchemaSerializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL2NvbHlzZXVzLmpzL2xpYi9zZXJpYWxpemVyL1NjaGVtYVNlcmlhbGl6ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RCxlQUFlLG1CQUFPLENBQUMsRUFBa0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwiZmlsZSI6IjQzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgc2NoZW1hXzEgPSByZXF1aXJlKFwiQGNvbHlzZXVzL3NjaGVtYVwiKTtcbnZhciBTY2hlbWFTZXJpYWxpemVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNjaGVtYVNlcmlhbGl6ZXIoKSB7XG4gICAgfVxuICAgIFNjaGVtYVNlcmlhbGl6ZXIucHJvdG90eXBlLnNldFN0YXRlID0gZnVuY3Rpb24gKHJhd1N0YXRlKSB7XG4gICAgICAgIHRoaXMuc3RhdGUuZGVjb2RlKHJhd1N0YXRlKTtcbiAgICB9O1xuICAgIFNjaGVtYVNlcmlhbGl6ZXIucHJvdG90eXBlLmdldFN0YXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZTtcbiAgICB9O1xuICAgIFNjaGVtYVNlcmlhbGl6ZXIucHJvdG90eXBlLnBhdGNoID0gZnVuY3Rpb24gKHBhdGNoZXMpIHtcbiAgICAgICAgdGhpcy5zdGF0ZS5kZWNvZGUocGF0Y2hlcyk7XG4gICAgfTtcbiAgICBTY2hlbWFTZXJpYWxpemVyLnByb3RvdHlwZS50ZWFyZG93biA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gdGhpcy5zdGF0ZS5vblJlbW92ZVxuICAgIH07XG4gICAgU2NoZW1hU2VyaWFsaXplci5wcm90b3R5cGUuaGFuZHNoYWtlID0gZnVuY3Rpb24gKGJ5dGVzLCBpdCkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZSkge1xuICAgICAgICAgICAgLy8gdmFsaWRhdGUgY2xpZW50L3NlcnZlciBkZWZpbml0aW5vc1xuICAgICAgICAgICAgdmFyIHJlZmxlY3Rpb24gPSBuZXcgc2NoZW1hXzEuUmVmbGVjdGlvbigpO1xuICAgICAgICAgICAgcmVmbGVjdGlvbi5kZWNvZGUoYnl0ZXMsIGl0KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIGluaXRpYWxpemUgcmVmbGVjdGVkIHN0YXRlIGZyb20gc2VydmVyXG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gc2NoZW1hXzEuUmVmbGVjdGlvbi5kZWNvZGUoYnl0ZXMpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gU2NoZW1hU2VyaWFsaXplcjtcbn0oKSk7XG5leHBvcnRzLlNjaGVtYVNlcmlhbGl6ZXIgPSBTY2hlbWFTZXJpYWxpemVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///43\n')},function(module,exports,__webpack_require__){"use strict";eval('\n/**\n * Copyright (c) 2018 Endel Dreyer\n * Copyright (c) 2014 Ion Drive Software Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE\n */\nObject.defineProperty(exports, "__esModule", { value: true });\n/**\n * msgpack implementation highly based on notepack.io\n * https://github.com/darrachequesne/notepack\n */\nfunction utf8Length(str) {\n    var c = 0, length = 0;\n    for (var i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\nfunction utf8Write(view, offset, str) {\n    var c = 0;\n    for (var i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            view[offset++] = c;\n        }\n        else if (c < 0x800) {\n            view[offset++] = 0xc0 | (c >> 6);\n            view[offset++] = 0x80 | (c & 0x3f);\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            view[offset++] = 0xe0 | (c >> 12);\n            view[offset++] = 0x80 | (c >> 6 & 0x3f);\n            view[offset++] = 0x80 | (c & 0x3f);\n        }\n        else {\n            i++;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n            view[offset++] = 0xf0 | (c >> 18);\n            view[offset++] = 0x80 | (c >> 12 & 0x3f);\n            view[offset++] = 0x80 | (c >> 6 & 0x3f);\n            view[offset++] = 0x80 | (c & 0x3f);\n        }\n    }\n}\nexports.utf8Write = utf8Write;\nfunction int8(bytes, value) {\n    bytes.push(value & 255);\n}\nexports.int8 = int8;\n;\nfunction uint8(bytes, value) {\n    bytes.push(value & 255);\n}\nexports.uint8 = uint8;\n;\nfunction int16(bytes, value) {\n    bytes.push(value & 255);\n    bytes.push((value >> 8) & 255);\n}\nexports.int16 = int16;\n;\nfunction uint16(bytes, value) {\n    bytes.push(value & 255);\n    bytes.push((value >> 8) & 255);\n}\nexports.uint16 = uint16;\n;\nfunction int32(bytes, value) {\n    bytes.push(value & 255);\n    bytes.push((value >> 8) & 255);\n    bytes.push((value >> 16) & 255);\n    bytes.push((value >> 24) & 255);\n}\nexports.int32 = int32;\n;\nfunction uint32(bytes, value) {\n    var b4 = value >> 24;\n    var b3 = value >> 16;\n    var b2 = value >> 8;\n    var b1 = value;\n    bytes.push(b1 & 255);\n    bytes.push(b2 & 255);\n    bytes.push(b3 & 255);\n    bytes.push(b4 & 255);\n}\nexports.uint32 = uint32;\n;\nfunction int64(bytes, value) {\n    var high = Math.floor(value / Math.pow(2, 32));\n    var low = value >>> 0;\n    uint32(bytes, low);\n    uint32(bytes, high);\n}\nexports.int64 = int64;\n;\nfunction uint64(bytes, value) {\n    var high = (value / Math.pow(2, 32)) >> 0;\n    var low = value >>> 0;\n    uint32(bytes, low);\n    uint32(bytes, high);\n}\nexports.uint64 = uint64;\n;\nfunction float32(bytes, value) {\n    writeFloat32(bytes, value);\n}\nexports.float32 = float32;\nfunction float64(bytes, value) {\n    writeFloat64(bytes, value);\n}\nexports.float64 = float64;\n// force little endian to facilitate decoding on multiple implementations\nvar _isLittleEndian = true; // new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\nvar _int32 = new Int32Array(2);\nvar _float32 = new Float32Array(_int32.buffer);\nvar _float64 = new Float64Array(_int32.buffer);\nfunction writeFloat32(bytes, value) {\n    _float32[0] = value;\n    int32(bytes, _int32[0]);\n}\nexports.writeFloat32 = writeFloat32;\n;\nfunction writeFloat64(bytes, value) {\n    _float64[0] = value;\n    int32(bytes, _int32[_isLittleEndian ? 0 : 1]);\n    int32(bytes, _int32[_isLittleEndian ? 1 : 0]);\n}\nexports.writeFloat64 = writeFloat64;\n;\nfunction boolean(bytes, value) {\n    return uint8(bytes, value ? 1 : 0);\n}\nexports.boolean = boolean;\n;\nfunction string(bytes, value) {\n    // encode `null` strings as empty.\n    if (!value) {\n        value = "";\n    }\n    var length = utf8Length(value);\n    var size = 0;\n    // fixstr\n    if (length < 0x20) {\n        bytes.push(length | 0xa0);\n        size = 1;\n    }\n    // str 8\n    else if (length < 0x100) {\n        bytes.push(0xd9);\n        uint8(bytes, length);\n        size = 2;\n    }\n    // str 16\n    else if (length < 0x10000) {\n        bytes.push(0xda);\n        uint16(bytes, length);\n        size = 3;\n    }\n    // str 32\n    else if (length < 0x100000000) {\n        bytes.push(0xdb);\n        uint32(bytes, length);\n        size = 5;\n    }\n    else {\n        throw new Error(\'String too long\');\n    }\n    utf8Write(bytes, bytes.length, value);\n    return size + length;\n}\nexports.string = string;\nfunction number(bytes, value) {\n    if (isNaN(value)) {\n        return number(bytes, 0);\n    }\n    else if (!isFinite(value)) {\n        return number(bytes, (value > 0) ? Number.MAX_SAFE_INTEGER : -Number.MAX_SAFE_INTEGER);\n    }\n    else if (value !== (value | 0)) {\n        bytes.push(0xcb);\n        writeFloat64(bytes, value);\n        return 9;\n        // TODO: encode float 32?\n        // is it possible to differentiate between float32 / float64 here?\n        // // float 32\n        // bytes.push(0xca);\n        // writeFloat32(bytes, value);\n        // return 5;\n    }\n    if (value >= 0) {\n        // positive fixnum\n        if (value < 0x80) {\n            uint8(bytes, value);\n            return 1;\n        }\n        // uint 8\n        if (value < 0x100) {\n            bytes.push(0xcc);\n            uint8(bytes, value);\n            return 2;\n        }\n        // uint 16\n        if (value < 0x10000) {\n            bytes.push(0xcd);\n            uint16(bytes, value);\n            return 3;\n        }\n        // uint 32\n        if (value < 0x100000000) {\n            bytes.push(0xce);\n            uint32(bytes, value);\n            return 5;\n        }\n        // uint 64\n        bytes.push(0xcf);\n        uint64(bytes, value);\n        return 9;\n    }\n    else {\n        // negative fixnum\n        if (value >= -0x20) {\n            bytes.push(value);\n            return 1;\n        }\n        // int 8\n        if (value >= -0x80) {\n            bytes.push(0xd0);\n            int8(bytes, value);\n            return 2;\n        }\n        // int 16\n        if (value >= -0x8000) {\n            bytes.push(0xd1);\n            int16(bytes, value);\n            return 3;\n        }\n        // int 32\n        if (value >= -0x80000000) {\n            bytes.push(0xd2);\n            int32(bytes, value);\n            return 5;\n        }\n        // int 64\n        bytes.push(0xd3);\n        int64(bytes, value);\n        return 9;\n    }\n}\nexports.number = number;\n//# sourceMappingURL=encode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///44\n')},function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar spec_1 = __webpack_require__(12);\nfunction utf8Read(bytes, offset, length) {\n    var string = '', chr = 0;\n    for (var i = offset, end = offset + length; i < end; i++) {\n        var byte = bytes[i];\n        if ((byte & 0x80) === 0x00) {\n            string += String.fromCharCode(byte);\n            continue;\n        }\n        if ((byte & 0xe0) === 0xc0) {\n            string += String.fromCharCode(((byte & 0x1f) << 6) |\n                (bytes[++i] & 0x3f));\n            continue;\n        }\n        if ((byte & 0xf0) === 0xe0) {\n            string += String.fromCharCode(((byte & 0x0f) << 12) |\n                ((bytes[++i] & 0x3f) << 6) |\n                ((bytes[++i] & 0x3f) << 0));\n            continue;\n        }\n        if ((byte & 0xf8) === 0xf0) {\n            chr = ((byte & 0x07) << 18) |\n                ((bytes[++i] & 0x3f) << 12) |\n                ((bytes[++i] & 0x3f) << 6) |\n                ((bytes[++i] & 0x3f) << 0);\n            if (chr >= 0x010000) { // surrogate pair\n                chr -= 0x010000;\n                string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n            }\n            else {\n                string += String.fromCharCode(chr);\n            }\n            continue;\n        }\n        throw new Error('Invalid byte ' + byte.toString(16));\n    }\n    return string;\n}\nfunction int8(bytes, it) {\n    return uint8(bytes, it) << 24 >> 24;\n}\nexports.int8 = int8;\n;\nfunction uint8(bytes, it) {\n    return bytes[it.offset++];\n}\nexports.uint8 = uint8;\n;\nfunction int16(bytes, it) {\n    return uint16(bytes, it) << 16 >> 16;\n}\nexports.int16 = int16;\n;\nfunction uint16(bytes, it) {\n    return bytes[it.offset++] | bytes[it.offset++] << 8;\n}\nexports.uint16 = uint16;\n;\nfunction int32(bytes, it) {\n    return bytes[it.offset++] | bytes[it.offset++] << 8 | bytes[it.offset++] << 16 | bytes[it.offset++] << 24;\n}\nexports.int32 = int32;\n;\nfunction uint32(bytes, it) {\n    return int32(bytes, it) >>> 0;\n}\nexports.uint32 = uint32;\n;\nfunction float32(bytes, it) {\n    return readFloat32(bytes, it);\n}\nexports.float32 = float32;\nfunction float64(bytes, it) {\n    return readFloat64(bytes, it);\n}\nexports.float64 = float64;\nfunction int64(bytes, it) {\n    var low = uint32(bytes, it);\n    var high = int32(bytes, it) * Math.pow(2, 32);\n    return high + low;\n}\nexports.int64 = int64;\n;\nfunction uint64(bytes, it) {\n    var low = uint32(bytes, it);\n    var high = uint32(bytes, it) * Math.pow(2, 32);\n    return high + low;\n}\nexports.uint64 = uint64;\n;\n// force little endian to facilitate decoding on multiple implementations\nvar _isLittleEndian = true; // new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\nvar _int32 = new Int32Array(2);\nvar _float32 = new Float32Array(_int32.buffer);\nvar _float64 = new Float64Array(_int32.buffer);\nfunction readFloat32(bytes, it) {\n    _int32[0] = int32(bytes, it);\n    return _float32[0];\n}\nexports.readFloat32 = readFloat32;\n;\nfunction readFloat64(bytes, it) {\n    _int32[_isLittleEndian ? 0 : 1] = int32(bytes, it);\n    _int32[_isLittleEndian ? 1 : 0] = int32(bytes, it);\n    return _float64[0];\n}\nexports.readFloat64 = readFloat64;\n;\nfunction boolean(bytes, it) {\n    return uint8(bytes, it) > 0;\n}\nexports.boolean = boolean;\n;\nfunction string(bytes, it) {\n    var prefix = bytes[it.offset++];\n    var length;\n    if (prefix < 0xc0) {\n        // fixstr\n        length = prefix & 0x1f;\n    }\n    else if (prefix === 0xd9) {\n        length = uint8(bytes, it);\n    }\n    else if (prefix === 0xda) {\n        length = uint16(bytes, it);\n    }\n    else if (prefix === 0xdb) {\n        length = uint32(bytes, it);\n    }\n    var value = utf8Read(bytes, it.offset, length);\n    it.offset += length;\n    return value;\n}\nexports.string = string;\nfunction stringCheck(bytes, it) {\n    var prefix = bytes[it.offset];\n    return (\n    // fixstr\n    (prefix < 0xc0 && prefix > 0xa0) ||\n        // str 8\n        prefix === 0xd9 ||\n        // str 16\n        prefix === 0xda ||\n        // str 32\n        prefix === 0xdb);\n}\nexports.stringCheck = stringCheck;\nfunction number(bytes, it) {\n    var prefix = bytes[it.offset++];\n    if (prefix < 0x80) {\n        // positive fixint\n        return prefix;\n    }\n    else if (prefix === 0xca) {\n        // float 32\n        return readFloat32(bytes, it);\n    }\n    else if (prefix === 0xcb) {\n        // float 64\n        return readFloat64(bytes, it);\n    }\n    else if (prefix === 0xcc) {\n        // uint 8\n        return uint8(bytes, it);\n    }\n    else if (prefix === 0xcd) {\n        // uint 16\n        return uint16(bytes, it);\n    }\n    else if (prefix === 0xce) {\n        // uint 32\n        return uint32(bytes, it);\n    }\n    else if (prefix === 0xcf) {\n        // uint 64\n        return uint64(bytes, it);\n    }\n    else if (prefix === 0xd0) {\n        // int 8\n        return int8(bytes, it);\n    }\n    else if (prefix === 0xd1) {\n        // int 16\n        return int16(bytes, it);\n    }\n    else if (prefix === 0xd2) {\n        // int 32\n        return int32(bytes, it);\n    }\n    else if (prefix === 0xd3) {\n        // int 64\n        return int64(bytes, it);\n    }\n    else if (prefix > 0xdf) {\n        // negative fixint\n        return (0xff - prefix + 1) * -1;\n    }\n}\nexports.number = number;\n;\nfunction numberCheck(bytes, it) {\n    var prefix = bytes[it.offset];\n    // positive fixint - 0x00 - 0x7f\n    // float 32        - 0xca\n    // float 64        - 0xcb\n    // uint 8          - 0xcc\n    // uint 16         - 0xcd\n    // uint 32         - 0xce\n    // uint 64         - 0xcf\n    // int 8           - 0xd0\n    // int 16          - 0xd1\n    // int 32          - 0xd2\n    // int 64          - 0xd3\n    return (prefix < 0x80 ||\n        (prefix >= 0xca && prefix <= 0xd3));\n}\nexports.numberCheck = numberCheck;\nfunction arrayCheck(bytes, it) {\n    return bytes[it.offset] < 0xa0;\n    // const prefix = bytes[it.offset] ;\n    // if (prefix < 0xa0) {\n    //   return prefix;\n    // // array\n    // } else if (prefix === 0xdc) {\n    //   it.offset += 2;\n    // } else if (0xdd) {\n    //   it.offset += 4;\n    // }\n    // return prefix;\n}\nexports.arrayCheck = arrayCheck;\nfunction nilCheck(bytes, it) {\n    return bytes[it.offset] === spec_1.NIL;\n}\nexports.nilCheck = nilCheck;\nfunction indexChangeCheck(bytes, it) {\n    return bytes[it.offset] === spec_1.INDEX_CHANGE;\n}\nexports.indexChangeCheck = indexChangeCheck;\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///45\n")},function(module,exports,__webpack_require__){"use strict";eval('\n/**\n * Extracted from https://www.npmjs.com/package/strong-events\n */\nObject.defineProperty(exports, "__esModule", { value: true });\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        this.handlers = [];\n    }\n    EventEmitter.prototype.register = function (cb, once) {\n        if (once === void 0) { once = false; }\n        this.handlers.push(cb);\n        return this;\n    };\n    EventEmitter.prototype.invoke = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.handlers.forEach(function (handler) { return handler.apply(void 0, args); });\n    };\n    EventEmitter.prototype.invokeAsync = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Promise.all(this.handlers.map(function (handler) { return handler.apply(void 0, args); }));\n    };\n    EventEmitter.prototype.remove = function (cb) {\n        var index = this.handlers.indexOf(cb);\n        this.handlers[index] = this.handlers[this.handlers.length - 1];\n        this.handlers.pop();\n    };\n    EventEmitter.prototype.clear = function () {\n        this.handlers = [];\n    };\n    return EventEmitter;\n}());\nexports.EventEmitter = EventEmitter;\n//# sourceMappingURL=EventEmitter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0Bjb2x5c2V1cy9zY2hlbWEvbGliL2V2ZW50cy9FdmVudEVtaXR0ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGNBQWM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix1QkFBdUI7QUFDL0M7QUFDQTtBQUNBLGtEQUFrRCxvQ0FBb0MsRUFBRTtBQUN4RjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQSxpRUFBaUUsb0NBQW9DLEVBQUU7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiI0Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBFeHRyYWN0ZWQgZnJvbSBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9zdHJvbmctZXZlbnRzXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBFdmVudEVtaXR0ZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkge1xuICAgICAgICB0aGlzLmhhbmRsZXJzID0gW107XG4gICAgfVxuICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAoY2IsIG9uY2UpIHtcbiAgICAgICAgaWYgKG9uY2UgPT09IHZvaWQgMCkgeyBvbmNlID0gZmFsc2U7IH1cbiAgICAgICAgdGhpcy5oYW5kbGVycy5wdXNoKGNiKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbiAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmludm9rZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHsgcmV0dXJuIGhhbmRsZXIuYXBwbHkodm9pZCAwLCBhcmdzKTsgfSk7XG4gICAgfTtcbiAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmludm9rZUFzeW5jID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgYXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbCh0aGlzLmhhbmRsZXJzLm1hcChmdW5jdGlvbiAoaGFuZGxlcikgeyByZXR1cm4gaGFuZGxlci5hcHBseSh2b2lkIDAsIGFyZ3MpOyB9KSk7XG4gICAgfTtcbiAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uIChjYikge1xuICAgICAgICB2YXIgaW5kZXggPSB0aGlzLmhhbmRsZXJzLmluZGV4T2YoY2IpO1xuICAgICAgICB0aGlzLmhhbmRsZXJzW2luZGV4XSA9IHRoaXMuaGFuZGxlcnNbdGhpcy5oYW5kbGVycy5sZW5ndGggLSAxXTtcbiAgICAgICAgdGhpcy5oYW5kbGVycy5wb3AoKTtcbiAgICB9O1xuICAgIEV2ZW50RW1pdHRlci5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlcnMgPSBbXTtcbiAgICB9O1xuICAgIHJldHVybiBFdmVudEVtaXR0ZXI7XG59KCkpO1xuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FdmVudEVtaXR0ZXIuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///46\n')},function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = __webpack_require__(11);\nvar MapSchema_1 = __webpack_require__(2);\nvar ArraySchema_1 = __webpack_require__(1);\nfunction dumpChanges(schema) {\n    var dump = {};\n    var $changes = schema.$changes;\n    var fieldsByIndex = schema['_fieldsByIndex'] || {};\n    for (var _i = 0, _a = Array.from($changes.changes); _i < _a.length; _i++) {\n        var fieldIndex = _a[_i];\n        var field = fieldsByIndex[fieldIndex] || fieldIndex;\n        if (schema[field] instanceof MapSchema_1.MapSchema ||\n            schema[field] instanceof ArraySchema_1.ArraySchema ||\n            schema[field] instanceof _1.Schema) {\n            dump[field] = dumpChanges(schema[field]);\n        }\n        else {\n            dump[field] = schema[field];\n        }\n    }\n    return dump;\n}\nexports.dumpChanges = dumpChanges;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4vbm9kZV9tb2R1bGVzL0Bjb2x5c2V1cy9zY2hlbWEvbGliL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQThDLGNBQWM7QUFDNUQsU0FBUyxtQkFBTyxDQUFDLEVBQUk7QUFDckIsa0JBQWtCLG1CQUFPLENBQUMsQ0FBbUI7QUFDN0Msb0JBQW9CLG1CQUFPLENBQUMsQ0FBcUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsZ0JBQWdCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI0Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIF8xID0gcmVxdWlyZShcIi4vXCIpO1xudmFyIE1hcFNjaGVtYV8xID0gcmVxdWlyZShcIi4vdHlwZXMvTWFwU2NoZW1hXCIpO1xudmFyIEFycmF5U2NoZW1hXzEgPSByZXF1aXJlKFwiLi90eXBlcy9BcnJheVNjaGVtYVwiKTtcbmZ1bmN0aW9uIGR1bXBDaGFuZ2VzKHNjaGVtYSkge1xuICAgIHZhciBkdW1wID0ge307XG4gICAgdmFyICRjaGFuZ2VzID0gc2NoZW1hLiRjaGFuZ2VzO1xuICAgIHZhciBmaWVsZHNCeUluZGV4ID0gc2NoZW1hWydfZmllbGRzQnlJbmRleCddIHx8IHt9O1xuICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSBBcnJheS5mcm9tKCRjaGFuZ2VzLmNoYW5nZXMpOyBfaSA8IF9hLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIgZmllbGRJbmRleCA9IF9hW19pXTtcbiAgICAgICAgdmFyIGZpZWxkID0gZmllbGRzQnlJbmRleFtmaWVsZEluZGV4XSB8fCBmaWVsZEluZGV4O1xuICAgICAgICBpZiAoc2NoZW1hW2ZpZWxkXSBpbnN0YW5jZW9mIE1hcFNjaGVtYV8xLk1hcFNjaGVtYSB8fFxuICAgICAgICAgICAgc2NoZW1hW2ZpZWxkXSBpbnN0YW5jZW9mIEFycmF5U2NoZW1hXzEuQXJyYXlTY2hlbWEgfHxcbiAgICAgICAgICAgIHNjaGVtYVtmaWVsZF0gaW5zdGFuY2VvZiBfMS5TY2hlbWEpIHtcbiAgICAgICAgICAgIGR1bXBbZmllbGRdID0gZHVtcENoYW5nZXMoc2NoZW1hW2ZpZWxkXSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBkdW1wW2ZpZWxkXSA9IHNjaGVtYVtmaWVsZF07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGR1bXA7XG59XG5leHBvcnRzLmR1bXBDaGFuZ2VzID0gZHVtcENoYW5nZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///47\n")},function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, "__esModule", { value: true });\nvar annotations_1 = __webpack_require__(14);\nvar Schema_1 = __webpack_require__(3);\nvar ArraySchema_1 = __webpack_require__(1);\nvar MapSchema_1 = __webpack_require__(2);\nvar reflectionContext = new annotations_1.Context();\n/**\n * Reflection\n */\nvar ReflectionField = /** @class */ (function (_super) {\n    __extends(ReflectionField, _super);\n    function ReflectionField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        annotations_1.type("string", reflectionContext)\n    ], ReflectionField.prototype, "name", void 0);\n    __decorate([\n        annotations_1.type("string", reflectionContext)\n    ], ReflectionField.prototype, "type", void 0);\n    __decorate([\n        annotations_1.type("uint8", reflectionContext)\n    ], ReflectionField.prototype, "referencedType", void 0);\n    return ReflectionField;\n}(Schema_1.Schema));\nexports.ReflectionField = ReflectionField;\nvar ReflectionType = /** @class */ (function (_super) {\n    __extends(ReflectionType, _super);\n    function ReflectionType() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.fields = new ArraySchema_1.ArraySchema();\n        return _this;\n    }\n    __decorate([\n        annotations_1.type("uint8", reflectionContext)\n    ], ReflectionType.prototype, "id", void 0);\n    __decorate([\n        annotations_1.type([ReflectionField], reflectionContext)\n    ], ReflectionType.prototype, "fields", void 0);\n    return ReflectionType;\n}(Schema_1.Schema));\nexports.ReflectionType = ReflectionType;\nvar Reflection = /** @class */ (function (_super) {\n    __extends(Reflection, _super);\n    function Reflection() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.types = new ArraySchema_1.ArraySchema();\n        return _this;\n    }\n    Reflection.encode = function (instance) {\n        var rootSchemaType = instance.constructor;\n        var reflection = new Reflection();\n        reflection.rootType = rootSchemaType._typeid;\n        var buildType = function (currentType, schema) {\n            for (var fieldName in schema) {\n                var field = new ReflectionField();\n                field.name = fieldName;\n                var fieldType = void 0;\n                if (typeof (schema[fieldName]) === "string") {\n                    fieldType = schema[fieldName];\n                }\n                else {\n                    var isSchema = typeof (schema[fieldName]) === "function";\n                    var isArray = Array.isArray(schema[fieldName]);\n                    var isMap = !isArray && schema[fieldName].map;\n                    var childTypeSchema = void 0;\n                    if (isSchema) {\n                        fieldType = "ref";\n                        childTypeSchema = schema[fieldName];\n                    }\n                    else if (isArray) {\n                        fieldType = "array";\n                        if (typeof (schema[fieldName][0]) === "string") {\n                            fieldType += ":" + schema[fieldName][0]; // array:string\n                        }\n                        else {\n                            childTypeSchema = schema[fieldName][0];\n                        }\n                    }\n                    else if (isMap) {\n                        fieldType = "map";\n                        if (typeof (schema[fieldName].map) === "string") {\n                            fieldType += ":" + schema[fieldName].map; // array:string\n                        }\n                        else {\n                            childTypeSchema = schema[fieldName].map;\n                        }\n                    }\n                    field.referencedType = (childTypeSchema)\n                        ? childTypeSchema._typeid\n                        : 255;\n                }\n                field.type = fieldType;\n                currentType.fields.push(field);\n            }\n            reflection.types.push(currentType);\n        };\n        var types = rootSchemaType._context.types;\n        for (var typeid in types) {\n            var type_1 = new ReflectionType();\n            type_1.id = Number(typeid);\n            buildType(type_1, types[typeid]._schema);\n        }\n        return reflection.encodeAll();\n    };\n    Reflection.decode = function (bytes) {\n        var context = new annotations_1.Context();\n        var reflection = new Reflection();\n        reflection.decode(bytes);\n        var schemaTypes = reflection.types.reduce(function (types, reflectionType) {\n            types[reflectionType.id] = /** @class */ (function (_super) {\n                __extends(_, _super);\n                function _() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return _;\n            }(Schema_1.Schema));\n            return types;\n        }, {});\n        reflection.types.forEach(function (reflectionType, i) {\n            reflectionType.fields.forEach(function (field) {\n                var schemaType = schemaTypes[reflectionType.id];\n                if (field.referencedType !== undefined) {\n                    var refType = schemaTypes[field.referencedType];\n                    // map or array of primitive type (255)\n                    if (!refType) {\n                        refType = field.type.split(":")[1];\n                    }\n                    if (field.type.indexOf("array") === 0) {\n                        annotations_1.type([refType], context)(schemaType.prototype, field.name);\n                    }\n                    else if (field.type.indexOf("map") === 0) {\n                        annotations_1.type({ map: refType }, context)(schemaType.prototype, field.name);\n                    }\n                    else if (field.type === "ref") {\n                        annotations_1.type(refType, context)(schemaType.prototype, field.name);\n                    }\n                }\n                else {\n                    annotations_1.type(field.type, context)(schemaType.prototype, field.name);\n                }\n            });\n        });\n        var rootType = schemaTypes[reflection.rootType];\n        var rootInstance = new rootType();\n        /**\n         * auto-initialize referenced types on root type\n         * to allow registering listeners immediatelly on client-side\n         */\n        for (var fieldName in rootType._schema) {\n            var fieldType = rootType._schema[fieldName];\n            if (typeof (fieldType) !== "string") {\n                var isSchema = typeof (fieldType) === "function";\n                var isArray = Array.isArray(fieldType);\n                var isMap = !isArray && fieldType.map;\n                rootInstance[fieldName] = (isArray)\n                    ? new ArraySchema_1.ArraySchema()\n                    : (isMap)\n                        ? new MapSchema_1.MapSchema()\n                        : (isSchema)\n                            ? new fieldType()\n                            : undefined;\n            }\n        }\n        return rootInstance;\n    };\n    __decorate([\n        annotations_1.type([ReflectionType], reflectionContext)\n    ], Reflection.prototype, "types", void 0);\n    __decorate([\n        annotations_1.type("uint8", reflectionContext)\n    ], Reflection.prototype, "rootType", void 0);\n    return Reflection;\n}(Schema_1.Schema));\nexports.Reflection = Reflection;\n//# sourceMappingURL=Reflection.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///48\n')}]);